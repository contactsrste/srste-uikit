{"version":3,"file":"static/js/basic-form-LabelValue.510ac522.chunk.js","mappings":"siBAKA,IAAMA,EAAmB,CAACC,EAAAA,EAAAA,eAKpBC,EAAgB,SAAUC,EAAOC,GACnC,IAAIC,EAAa,CAAC,EAElB,OADGF,EAAMG,WAAUD,EAAWE,UAAW,GAErCC,EAAAA,cAACC,EAAAA,IAAS,KACRD,EAAAA,cAACE,EAAAA,IAASC,EAAA,CAACC,UAAWT,EAAMU,MAAOC,MAAOX,EAAMW,MAAOC,YAAaZ,EAAMY,aAAiBV,EAAU,CACnGW,SAAU,SAACC,GACPd,EAAMe,cAAcjB,EAAAA,EAAAA,cAAwB,CAAEkB,QAAS,CAACL,MAAOG,EAAKG,GAAIjB,EAAMkB,aAC9ElB,EAAMmB,SAASL,EACnB,KAGZ,EAEMM,EAAM,WAGNpB,EAAQ,CAAC,CACXqB,KAAM,QACNC,aAAc,QACdC,KAAM,UACP,CACCF,KAAM,QACNC,aAAc,GACdC,KAAM,UACP,CACCF,KAAM,WACNC,cAAc,EACdC,KAAM,WACP,CACCF,KAAM,cACNC,aAAc,gBACdC,KAAM,WAGJC,EAAQ,GAERC,GAAmBC,EAAAA,EAAAA,GAAQrB,EAAAA,WAAiBN,GAAgBC,E","sources":["components/basic/form/LabelValue.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport { FormGroup, TextInput } from \"carbon-components-react\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\n\r\nconst dispatchedEvents = [EventAPI.INPUT_CHANGED];\r\n\r\n/*\r\n    Example: <srs-labelvalue label=\"Label\" value=\"\" placeholder=\"Enter a value...\" readonly=\"true\"/>\r\n*/\r\nconst SrsLabelValue = function (props, ref) {\r\n    let extraProps = {};\r\n    if(props.readonly) extraProps.readOnly = true;\r\n    return (\r\n        <FormGroup>\r\n          <TextInput labelText={props.label} value={props.value} placeholder={props.placeholder} {...extraProps} \r\n            onChange={(val) => {\r\n                props.dispatchEvent(EventAPI.INPUT_CHANGED, { payload: {value: val, id: props.elementid} });\r\n                props.setValue(val);\r\n            }}/>\r\n        </FormGroup>\r\n      );\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n    name: \"label\",\r\n    defaultValue: \"Label\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"value\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"readonly\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}, {\r\n    name: \"placeholder\",\r\n    defaultValue: \"Enter a value\",\r\n    type: \"string\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsLabelValue), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","EventAPI","SrsLabelValue","props","ref","extraProps","readonly","readOnly","React","FormGroup","TextInput","_extends","labelText","label","value","placeholder","onChange","val","dispatchEvent","payload","id","elementid","setValue","styles","name","defaultValue","type","slots","WrappedComponent","wrapper"],"sourceRoot":""}