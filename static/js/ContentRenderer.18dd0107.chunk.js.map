{"version":3,"file":"static/js/ContentRenderer.18dd0107.chunk.js","mappings":"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","sources":["components/ContentRenderer.js"],"sourcesContent":["import React, { useEffect, useRef, useState, createContext, useContext } from \"react\";\r\nimport { register, getUniqueComponentsToRegister } from \"../commons/ComponentRegistry\";\r\nimport wrapper from \"../commons/WebComponentWrapper\";\r\n\r\nimport { GlobalTheme } from '@carbon/react';\r\n// import { MultiSelect } from \"carbon-components-react\";\r\n\r\nconst ThemePreferenceContext = createContext();\r\nfunction useThemePreference() {\r\n  return useContext(ThemePreferenceContext);\r\n}\r\n\r\nconst ContentRenderer = (props, ref) => {\r\n\r\n  const [contents, setContents] = useState(props.overrides?.contents || props.clan || []);\r\n  const [context, setContext] = useState(props.overrides?.context || props.context || {});\r\n  const [theme, setTheme] = useState(props.theme || \"g90\");\r\n  const [eventBinding, setEventBinding] = useState(false);\r\n  const [componentsRegistered, setComponentsRegistered] = useState(false);\r\n  const [uniqueComponents, setUniqueComponents] = useState(getUniqueComponentsToRegister(props.overrides?.contents || props.clan || []) || []);\r\n  const [componentPropTypes, setComponentPropTypes] = useState({});\r\n  const contentsRef = useRef(contents);\r\n\r\n  const innerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setContents(prevContents => props.overrides?.contents || props.clan);\r\n    setContext(prevContext => props.overrides?.context || props.context);\r\n    setTheme(prevTheme => props.theme);\r\n    document.documentElement.setAttribute('data-carbon-theme', props.theme);\r\n    if (innerRef.current && !eventBinding) {\r\n      setEventBinding(true);\r\n      innerRef.current.addEventListener(\"RICHTEXT#home\", (e) => {\r\n        console.log(e);\r\n      });\r\n      innerRef.current.addEventListener(\"HOME#clicked\", (e) => {\r\n        console.log(e);\r\n      });\r\n      innerRef.current.addEventListener(\"RICHTEXT#about\", (e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    let updatedUniqueComponents = getUniqueComponentsToRegister(props.overrides?.contents || props.clan);\r\n    if (!componentsRegistered || isChanged(updatedUniqueComponents, uniqueComponents)) {\r\n      setUniqueComponents(prevVal => updatedUniqueComponents);\r\n      setComponentsRegistered(prevVal => false);\r\n      register(updatedUniqueComponents, props.theme)\r\n        .then((componentPropTypeData) => {\r\n          setComponentPropTypes(prevVal => componentPropTypeData);\r\n          setComponentsRegistered(prevVal => true);\r\n        });\r\n    }\r\n  }, [props.overrides, props.clan, props.context, props.theme]);\r\n\r\n  let result = <div> loading... </div>;\r\n  if (contents && contents.length > 0) {\r\n    if (componentsRegistered) {\r\n      result = (<div ref={innerRef} data-carbon-theme={props.theme} style={{ backgroundColor: \"var(--cds-background)\", minHeight: \"100vh\", maxHeight: \"100vh\", overflow: \"scroll\" }}>\r\n        <style className=\"basetheme\">\r\n          @import \"./carbon-components.css\";  {/* DONT REMOVE THIS STYLE AS THIS IS USED FOR THEME */}\r\n        </style>\r\n        {/* <GlobalTheme theme={props.theme}> */}\r\n        {renderNodes(contents, context, contents, props.theme, contentsRef)}\r\n        {/* </GlobalTheme> */}\r\n      </div>)\r\n    } else {\r\n      result = <div> loading... </div>;\r\n    }\r\n  }else {\r\n    result = <div> No contents to show!</div>;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst isChanged = function (array1, array2) {\r\n  let isChanged = false;\r\n\r\n  array1.forEach((array1Item) => {\r\n    if (array2.indexOf(array1Item) == -1) {\r\n      isChanged = true;\r\n    }\r\n  });\r\n  return isChanged;\r\n}\r\n\r\nconst getNodeFromTree = function(contentsRef, nodeId) {\r\n  let result = contentsRef.current.find(prevNode => {\r\n    if(prevNode.elementId) {\r\n      return prevNode.elementId === nodeId;\r\n    }else {\r\n      return prevNode.name === nodeId;\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nconst renderNodes = function (nodes, context, clan, theme, currentRef) {\r\n  let result = [];\r\n// Compare previous and current node values \r\n  nodes && nodes.forEach(node => {\r\n    let nodeFromPrevTree = getNodeFromTree(currentRef, node.elementId || node.name);\r\n    if (JSON.stringify(node) !== JSON.stringify(nodeFromPrevTree)) {\r\n      node.ts = Date.now() + \"\";\r\n    }\r\n\r\n    if (!node.hasOwnProperty(\"visible\") || node.visible) {\r\n      let NodeTag = node.tag;\r\n      let nodeProps = {};\r\n      if (node.props) {\r\n        let nodePropKeys = Object.keys(node.props);\r\n        nodePropKeys = nodePropKeys.filter((nodePropKey) => nodePropKey != \"slotname\");\r\n        nodePropKeys.map((nodePropKey) => {\r\n          if (typeof node.props[nodePropKey] !== \"string\") {\r\n            nodeProps[nodePropKey] = JSON.stringify(node.props[nodePropKey]);\r\n          } else {\r\n            nodeProps[nodePropKey] = node.props[nodePropKey];\r\n          }\r\n        }\r\n        ); { }\r\n        if (node.props.slotname) {\r\n          nodeProps.slot = node.props.slotname;\r\n        }\r\n      }\r\n      if (node.overrides) {\r\n        let overridePropKeys = Object.keys(node.overrides);\r\n        let functions = window?.__SRS__?.functions || {};\r\n        const nodeContext = {\r\n          context,\r\n          clan,\r\n          helper: {\r\n            //add helper methods\r\n            ...functions\r\n          }\r\n        }\r\n        overridePropKeys.map((nodePropKey) => {\r\n          let nodeVal = node.overrides[nodePropKey];\r\n          if (nodeVal.startsWith(\"[[\") && nodeVal.endsWith(\"]]\")) {\r\n            // remove the expression delimiters from the value\r\n            let expression = nodeVal.slice(2, -2);\r\n            let dynamicFunction = new Function(\"api\", `with(api) { return ${expression}; }`);\r\n            nodeProps[nodePropKey] = dynamicFunction(nodeContext);\r\n          }\r\n        });\r\n      }\r\n\r\n      let childNodes = renderNodes(node.children, context, clan, theme, currentRef);\r\n\r\n      result.push(<NodeTag\r\n        key={node.elementId || node.name}\r\n        elementid={node.elementId || node.id || node.name}\r\n        ts={node.ts}\r\n        ref={el => {\r\n          if (!el) return;\r\n          Object.keys(nodeProps).forEach(nodePropKey => {\r\n            try {\r\n              if(typeof nodeProps[nodePropKey] == \"object\") {\r\n                el[nodePropKey] = JSON.stringify(nodeProps[nodePropKey]);\r\n              }else { \r\n                el[nodePropKey] = nodeProps[nodePropKey];\r\n              }\r\n            } catch (err) {\r\n              console.error(err);\r\n            }\r\n          });\r\n          el.context = context;\r\n          el.clan = clan;\r\n          el.theme = theme;\r\n        }}>\r\n        {childNodes}\r\n      </NodeTag>);\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n  name: \"overrides\",\r\n  type: \"object\",\r\n  defaultValue: {}\r\n}]\r\n\r\nconst slots = [];\r\n\r\nexport default ContentRenderer;\r\nconst WrappedComponent = wrapper(React.forwardRef(ContentRenderer), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n"],"names":["ContentRenderer","props","ref","_props$overrides","_props$overrides2","_props$overrides3","_useState","useState","overrides","contents","clan","_useState2","_slicedToArray","setContents","_useState3","context","_useState4","setContext","_useState5","theme","_useState6","setTheme","_useState7","_useState8","eventBinding","setEventBinding","_useState9","_useState10","componentsRegistered","setComponentsRegistered","_useState11","getUniqueComponentsToRegister","_useState12","uniqueComponents","setUniqueComponents","_useState13","_useState14","setComponentPropTypes","contentsRef","useRef","innerRef","useEffect","_props$overrides6","prevContents","_props$overrides4","prevContext","_props$overrides5","prevTheme","document","documentElement","setAttribute","current","addEventListener","e","console","log","updatedUniqueComponents","isChanged","prevVal","register","then","componentPropTypeData","length","_jsxs","style","backgroundColor","minHeight","maxHeight","overflow","children","_jsx","className","renderNodes","array1","array2","forEach","array1Item","indexOf","nodes","currentRef","result","node","nodeId","nodeFromPrevTree","elementId","name","find","prevNode","JSON","stringify","ts","Date","now","hasOwnProperty","visible","NodeTag","tag","nodeProps","nodePropKeys","Object","keys","filter","nodePropKey","map","slotname","slot","_window","_window$__SRS__","overridePropKeys","functions","window","__SRS__","nodeContext","helper","_objectSpread","nodeVal","startsWith","endsWith","expression","slice","dynamicFunction","Function","concat","childNodes","push","elementid","id","el","err","error","dispatchedEvents","styles","type","defaultValue","slots","WrappedComponent","wrapper","React"],"sourceRoot":""}