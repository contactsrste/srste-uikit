{"version":3,"file":"static/js/mui-basic-SwipeableDrawer.290eda0f.chunk.js","mappings":"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","sources":["../node_modules/@mui/base/NoSsr/NoSsr.js","../node_modules/@mui/material/SwipeableDrawer/SwipeArea.js","../node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js","components/mui/basic/SwipeableDrawer.js","../node_modules/@mui/material/utils/ownerDocument.js","../node_modules/@mui/material/utils/useEnhancedEffect.js","../node_modules/@mui/material/utils/useEventCallback.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n *\n * *   Escape hatch for broken dependencies not supporting SSR.\n * *   Improve the time-to-first paint on the client by only rendering above the fold.\n * *   Reduce the rendering time on the server.\n * *   Under too heavy server load, you can turn on service degradation.\n *\n * Demos:\n *\n * - [No SSR](https://mui.com/base/react-no-ssr/)\n *\n * API:\n *\n * - [NoSsr API](https://mui.com/base/react-no-ssr/components-api/#no-ssr)\n */\nfunction NoSsr(props) {\n  const {\n    children,\n    defer = false,\n    fallback = null\n  } = props;\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(() => {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n\n  // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountedState ? children : fallback\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   * @default false\n   */\n  defer: PropTypes.bool,\n  /**\n   * The fallback content to display.\n   * @default null\n   */\n  fallback: PropTypes.node\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\nexport default NoSsr;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchor\", \"classes\", \"className\", \"width\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div')(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  zIndex: theme.zIndex.drawer - 1\n}, ownerState.anchor === 'left' && {\n  right: 'auto'\n}, ownerState.anchor === 'right' && {\n  left: 'auto',\n  right: 0\n}, ownerState.anchor === 'top' && {\n  bottom: 'auto',\n  right: 0\n}, ownerState.anchor === 'bottom' && {\n  top: 'auto',\n  bottom: 0,\n  right: 0\n}));\n\n/**\n * @ignore - internal component.\n */\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n      anchor,\n      classes = {},\n      className,\n      width,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, _extends({\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: _extends({\n      [isHorizontal(anchor) ? 'width' : 'height']: width\n    }, style),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropProps\"],\n  _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"allowSwipeInChildren\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { useThemeProps } from '@mui/system';\nimport { NoSsr } from '@mui/base';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport useForkRef from '../utils/useForkRef';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport useEventCallback from '../utils/useEventCallback';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport SwipeArea from './SwipeArea';\n\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst UNCERTAINTY_THRESHOLD = 3; // px\n\n// This is the part of the drawer displayed on touch start.\nconst DRAG_STARTED_SIGNAL = 20; // px\n\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nlet claimedSwipeInstance = null;\n\n// Exported for test purposes.\nexport function reset() {\n  claimedSwipeInstance = null;\n}\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n  while (element && element !== rootNode.parentElement) {\n    const style = ownerWindow(rootNode).getComputedStyle(element);\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      // noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n    element = element.parentElement;\n  }\n  return domTreeShapes;\n}\n\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n    return false;\n  });\n}\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = useTheme();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      anchor = 'left',\n      disableBackdropTransition = false,\n      disableDiscovery = false,\n      disableSwipeToOpen = iOS,\n      hideBackdrop,\n      hysteresis = 0.52,\n      allowSwipeInChildren = false,\n      minFlingVelocity = 450,\n      ModalProps: {\n        BackdropProps\n      } = {},\n      onClose,\n      onOpen,\n      open = false,\n      PaperProps = {},\n      SwipeAreaProps,\n      swipeAreaWidth = 20,\n      transitionDuration = transitionDurationDefault,\n      variant = 'temporary'\n    } = props,\n    ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const handleRef = useForkRef(PaperProps.ref, paperRef);\n  const touchDetected = React.useRef(false);\n\n  // Ref for transition duration based on / to match swipe speed\n  const calculatedDurationRef = React.useRef();\n\n  // Use a ref so the open value used is always up to date inside useCallback.\n  useEnhancedEffect(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = getAnchor(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = isHorizontal(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = useEventCallback(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    ReactDOM.flushSync(() => {\n      setMaybeSwiping(false);\n    });\n\n    // The swipe wasn't started.\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontal = isHorizontal(anchor);\n    let current;\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow(nativeEvent.currentTarget));\n    }\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n      return;\n    }\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const startMaybeSwiping = (force = false) => {\n    if (!maybeSwiping) {\n      // on Safari Mobile, if you want to be able to have the 'click' event fired on child elements, nothing in the DOM can be changed.\n      // this is because Safari Mobile will not fire any mouse events (still fires touch though) if the DOM changes during mousemove.\n      // so do this change on first touchmove instead of touchstart\n      if (force || !(disableDiscovery && allowSwipeInChildren)) {\n        ReactDOM.flushSync(() => {\n          setMaybeSwiping(true);\n        });\n      }\n      const horizontalSwipe = isHorizontal(anchor);\n      if (!open && paperRef.current) {\n        // The ref may be null when a parent component updates while swiping.\n        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n          changeTransition: false\n        });\n      }\n      swipeInstance.current.velocity = 0;\n      swipeInstance.current.lastTime = null;\n      swipeInstance.current.lastTranslate = null;\n      swipeInstance.current.paperHit = false;\n      touchDetected.current = true;\n    }\n  };\n  const handleBodyTouchMove = useEventCallback(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n    startMaybeSwiping(true);\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n      claimedSwipeInstance = swipeInstance.current;\n    }\n\n    // We don't know yet.\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        }\n\n        // Shift the starting point.\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n\n        // Compensate for the part of the drawer displayed on touch start.\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;\n\n    // Low Pass filter.\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now();\n\n    // We are swiping, let's prevent the scroll event on iOS.\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = useEventCallback(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    // We can only have one node at the time claiming ownership for handling the swipe.\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    }\n\n    // At least one element clogs the drawer interaction zone.\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n    if (!open) {\n      var _paperRef$current;\n      // logic for if swipe should be ignored:\n      // if disableSwipeToOpen\n      // if target != swipeArea, and target is not a child of paper ref\n      // if is a child of paper ref, and `allowSwipeInChildren` does not allow it\n      if (disableSwipeToOpen || !(nativeEvent.target === swipeAreaRef.current || (_paperRef$current = paperRef.current) != null && _paperRef$current.contains(nativeEvent.target) && (typeof allowSwipeInChildren === 'function' ? allowSwipeInChildren(nativeEvent, swipeAreaRef.current, paperRef.current) : allowSwipeInChildren))) {\n        return;\n      }\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    startMaybeSwiping();\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Drawer, _extends({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: _extends({\n        BackdropProps: _extends({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, variant === 'temporary' && {\n        keepMounted: true\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: _extends({}, PaperProps, {\n        style: _extends({\n          pointerEvents: variant === 'temporary' && !open && !allowSwipeInChildren ? 'none' : ''\n        }, PaperProps.style),\n        ref: handleRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/_jsx(NoSsr, {\n      children: /*#__PURE__*/_jsx(SwipeArea, _extends({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.\n   * This can be useful in scenarios where the drawer is partially visible.\n   * You can customize it further with a callback that determines which children the user can drag over to open the drawer\n   * (for example, to ignore other elements that handle touch move events, like sliders).\n   *\n   * @param {TouchEvent} event The 'touchstart' event\n   * @param {HTMLDivElement} swipeArea The swipe area element\n   * @param {HTMLDivElement} paper The drawer's paper element\n   *\n   * @default false\n   */\n  allowSwipeInChildren: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: PropTypes.bool,\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: PropTypes.bool,\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: PropTypes.number,\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: PropTypes.number,\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: PropTypes.number,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;","import React from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst SrsMuiSwipeableDrawer = function (props, ref) {\r\n  return (\r\n    <SwipeableDrawer\r\n      anchor={props.anchor}\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      onOpen={props.onOpen}\r\n      disableBackdropTransition={props.disableBackdropTransition}\r\n      disableDiscovery={props.disableDiscovery}\r\n      disableSwipeToOpen={props.disableSwipeToOpen}\r\n      hideBackdrop={props.hideBackdrop}\r\n      ModalProps={props.ModalProps}\r\n      theme={props.muiTheme}\r\n    >\r\n      <slot />\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n\r\nconst styles = `\r\n  /* Custom styles for the MuiSwipeableDrawer component */\r\n`;\r\n\r\nconst props = [\r\n  {\r\n    name: \"anchor\",\r\n    defaultValue: \"left\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"open\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"onClose\",\r\n    defaultValue: null,\r\n    type: \"function\",\r\n  },\r\n  {\r\n    name: \"onOpen\",\r\n    defaultValue: null,\r\n    type: \"function\",\r\n  },\r\n  {\r\n    name: \"disableBackdropTransition\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"disableDiscovery\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"disableSwipeToOpen\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"hideBackdrop\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"ModalProps\",\r\n    defaultValue: {},\r\n    type: \"object\",\r\n  },\r\n  {\r\n    name: \"sx\",\r\n    defaultValue: {},\r\n    type: \"object\"\r\n  }\r\n];\r\n\r\nconst slots = [\r\n  {\r\n    name: \"default\",\r\n    allowed: [],\r\n  },\r\n];\r\n\r\nconst WrappedComponent = wrapper(\r\n  React.forwardRef(SrsMuiSwipeableDrawer),\r\n  props,\r\n  \"mui\"\r\n);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n","import { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nexport default ownerDocument;","import { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nexport default useEnhancedEffect;","import { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nexport default useEventCallback;"],"names":["props","children","_props$defer","defer","_props$fallback","fallback","_React$useState","React","_React$useState2","_slicedToArray","mountedState","setMountedState","useEnhancedEffect","_jsx","_excluded","SwipeAreaRoot","styled","_ref","theme","ownerState","_extends","position","top","left","bottom","zIndex","drawer","anchor","right","SwipeArea","ref","_props$classes","classes","className","width","style","other","_objectWithoutPropertiesLoose","clsx","root","concat","capitalize","_defineProperty","isHorizontal","_excluded2","claimedSwipeInstance","calculateCurrentX","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","iOS","navigator","test","userAgent","SwipeableDrawer","inProps","useThemeProps","name","useTheme","transitionDurationDefault","enter","transitions","duration","enteringScreen","exit","leavingScreen","_props$anchor","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$allowSwipeInCh","allowSwipeInChildren","_props$minFlingVeloci","minFlingVelocity","_props$ModalProps","ModalProps","BackdropProps","onClose","onOpen","_props$open","_props$PaperProps","PaperProps","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","_props$transitionDura","transitionDuration","_props$variant","variant","ModalPropsProp","maybeSwiping","setMaybeSwiping","swipeInstance","isSwiping","swipeAreaRef","backdropRef","paperRef","handleRef","useForkRef","touchDetected","calculatedDurationRef","current","setPosition","translate","options","arguments","length","undefined","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","getAnchor","rtlTranslateMultiplier","indexOf","transform","drawerStyle","webkitTransform","transition","create","getTransitionProps","easing","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","useEventCallback","nativeEvent","ReactDOM","horizontal","changedTouches","ownerDocument","currentTarget","ownerWindow","startX","startY","translateRatio","abs","velocity","startMaybeSwiping","lastTime","lastTranslate","paperHit","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","domTreeShapes","start","axisProperties","x","y","some","shape","goingForward","axis","scrollPosition","round","areNotAtStart","areNotAtEnd","computeHasNativeHandler","element","rootNode","parentElement","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","getDomTreeShapes","dx","dy","definitelySwiping","cancelable","preventDefault","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","_paperRef$current","addEventListener","passive","removeEventListener","_jsxs","Drawer","keepMounted","pointerEvents","NoSsr","dispatchedEvents","SrsMuiSwipeableDrawer","muiTheme","styles","defaultValue","type","slots","allowed","WrappedComponent","wrapper"],"sourceRoot":""}