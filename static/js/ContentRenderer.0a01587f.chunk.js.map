{"version":3,"file":"static/js/ContentRenderer.0a01587f.chunk.js","mappings":"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","sources":["components/ContentRenderer.js","../node_modules/klona/dist/index.mjs"],"sourcesContent":["import React, { useEffect, useRef, useState, createContext, useContext } from \"react\";\r\nimport { register, getUniqueComponentsToRegister } from \"../commons/ComponentRegistry\";\r\nimport wrapper from \"../commons/WebComponentWrapper\";\r\n\r\nimport { GlobalTheme } from '@carbon/react';\r\nimport { klona } from \"klona\";\r\n// import { MultiSelect } from \"carbon-components-react\";\r\n\r\nconst ThemePreferenceContext = createContext();\r\nfunction useThemePreference() {\r\n  return useContext(ThemePreferenceContext);\r\n}\r\n\r\nconst ContentRenderer = (props, ref) => {\r\n\r\n  const [contents, setContents] = useState(props.overrides?.contents || props.clan || []);\r\n  const [context, setContext] = useState(props.overrides?.context || props.context || {});\r\n  const [theme, setTheme] = useState(props.theme || \"g90\");\r\n  const [eventBinding, setEventBinding] = useState(false);\r\n  const [componentsRegistered, setComponentsRegistered] = useState(false);\r\n  const [uniqueComponents, setUniqueComponents] = useState(getUniqueComponentsToRegister(props.overrides?.contents || props.clan || []) || []);\r\n  const [componentPropTypes, setComponentPropTypes] = useState({});\r\n  const contentsRef = useRef(contents);\r\n\r\n  const innerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setContents(prevContents => props.overrides?.contents || props.clan);\r\n    setContext(prevContext => props.overrides?.context || props.context);\r\n    setTheme(prevTheme => props.theme);\r\n    document.documentElement.setAttribute('data-carbon-theme', props.theme);\r\n    if (innerRef.current && !eventBinding) {\r\n      setEventBinding(true);\r\n      innerRef.current.addEventListener(\"RICHTEXT#home\", (e) => {\r\n        console.log(e);\r\n      });\r\n      innerRef.current.addEventListener(\"HOME#clicked\", (e) => {\r\n        console.log(e);\r\n      });\r\n      innerRef.current.addEventListener(\"RICHTEXT#about\", (e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    let updatedUniqueComponents = getUniqueComponentsToRegister(props.overrides?.contents || props.clan);\r\n    if (!componentsRegistered || isChanged(updatedUniqueComponents, uniqueComponents)) {\r\n      setUniqueComponents(prevVal => updatedUniqueComponents);\r\n      setComponentsRegistered(prevVal => false);\r\n      register(updatedUniqueComponents, props.theme)\r\n        .then((componentPropTypeData) => {\r\n          setComponentPropTypes(prevVal => componentPropTypeData);\r\n          setComponentsRegistered(prevVal => true);\r\n        });\r\n    }\r\n  }, [props.overrides, props.clan, props.context, props.theme]);\r\n\r\n  let result = <div> loading... </div>;\r\n  if (contents && contents.length > 0) {\r\n    if (componentsRegistered) {\r\n      let styles = { backgroundColor: \"var(--cds-background)\", minHeight: \"100vh\", maxHeight: \"100vh\", overflow: \"scroll\" };\r\n      let propStyles = props.styles || {};\r\n      styles = { ...styles, ...propStyles };\r\n      result = (<div ref={innerRef} data-carbon-theme={props.theme} style={styles}>\r\n        <style className=\"basetheme\">\r\n          @import \"./carbon-components.css\";  {/* DONT REMOVE THIS STYLE AS THIS IS USED FOR THEME */}\r\n        </style>\r\n        {/* <GlobalTheme theme={props.theme}> */}\r\n        {renderNodes(contents, context, contents, props.theme, contentsRef)}\r\n        {/* </GlobalTheme> */}\r\n      </div>)\r\n    } else {\r\n      result = <div> loading... </div>;\r\n    }\r\n  } else {\r\n    result = <div> No contents to show!</div>;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst isChanged = function (array1, array2) {\r\n  let isChanged = false;\r\n\r\n  array1.forEach((array1Item) => {\r\n    if (array2.indexOf(array1Item) == -1) {\r\n      isChanged = true;\r\n    }\r\n  });\r\n  return isChanged;\r\n}\r\n\r\nconst getNodeFromTree = function (contentsRef, nodeId) {\r\n  const searchInTree = (tree, id) => {\r\n    for (let node of tree) {\r\n      if (node.elementId === id || node.name === id) {\r\n        return node;\r\n      } else if (node.children) {\r\n        const result = searchInTree(node.children, id);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return searchInTree(contentsRef.current, nodeId);\r\n};\r\n\r\nconst getNodeProps = function (node, propKeys) {\r\n  let gridItemProps = {};\r\n  if (propKeys && propKeys.length > 0) {\r\n    propKeys.forEach((propKey) => {\r\n      if (node.props[propKey]) {\r\n        gridItemProps[propKey] = node.props[propKey];\r\n      }\r\n    })\r\n  }\r\n  return gridItemProps;\r\n}\r\n\r\nconst renderNodes = function (nodes, context, clan, theme, currentRef) {\r\n  let result = [];\r\n  // Compare previous and current node values \r\n  nodes && nodes.forEach(node => {\r\n    let nodeFromPrevTree = getNodeFromTree(currentRef, node.elementId || node.name);\r\n    if (JSON.stringify(node) !== JSON.stringify(nodeFromPrevTree)) {\r\n      node.ts = Date.now() + \"\";\r\n    }\r\n\r\n    if (!node.hasOwnProperty(\"visible\") || node.visible) {\r\n      let NodeTag = node.tag;\r\n      let nodeProps = {};\r\n      if (node.props) {\r\n        let nodePropKeys = Object.keys(node.props);\r\n        nodePropKeys = nodePropKeys.filter((nodePropKey) => nodePropKey != \"slotname\");\r\n        nodePropKeys.map((nodePropKey) => {\r\n          if (typeof node.props[nodePropKey] !== \"string\") {\r\n            nodeProps[nodePropKey] = JSON.stringify(node.props[nodePropKey]);\r\n          } else {\r\n            nodeProps[nodePropKey] = node.props[nodePropKey];\r\n          }\r\n        }\r\n        ); { }\r\n        if (node.props.slotname) {\r\n          nodeProps.slot = node.props.slotname;\r\n        }\r\n      }\r\n      if (node.overrides) {\r\n        let overridePropKeys = Object.keys(node.overrides);\r\n        let functions = window?.__SRS__?.functions || {};\r\n        const nodeContext = {\r\n          context,\r\n          clan,\r\n          helper: {\r\n            //add helper methods\r\n            ...functions\r\n          }\r\n        }\r\n        overridePropKeys.map((nodePropKey) => {\r\n          let nodeVal = node.overrides[nodePropKey];\r\n          if (nodeVal.startsWith(\"[[\") && nodeVal.endsWith(\"]]\")) {\r\n            // remove the expression delimiters from the value\r\n            let expression = nodeVal.slice(2, -2);\r\n            let dynamicFunction = new Function(\"api\", `with(api) { return ${expression}; }`);\r\n            nodeProps[nodePropKey] = dynamicFunction(nodeContext);\r\n          }\r\n        });\r\n      }\r\n\r\n      let nodeChildren = node.children;\r\n      if (NodeTag == \"mui-grid\" && nodeProps.hasOwnProperty(\"container\") && nodeChildren && nodeChildren.length > 0) {\r\n        let nextLevelNodeChildren = [];\r\n        let gridItemData = [];\r\n        nodeChildren.forEach((nodeChild, indx) => {\r\n          if (nodeChild && nodeChild.children) {\r\n            let gridItemProps = getNodeProps(nodeChild, [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"spacing\", \"direction\", \"justify\", \"alignItems\", \"alignContent\", \"wrap\", \"component\", \"xsAuto\", \"smAuto\", \"mdAuto\", \"lgAuto\", \"xlAuto\", \"zeroMinWidth\"]);\r\n            let gridItemSlotName = \"grid-item-\" + (nodeChild.props.elementId || nodeChild.props.name || indx);\r\n            gridItemData.push({ slotname: gridItemSlotName, gridItemProps });\r\n            nodeChild.children.map((nodeGrandChild, indx) => {\r\n              nodeGrandChild.props = nodeGrandChild.props || {};\r\n              nodeGrandChild.props.slotname = gridItemSlotName;\r\n              nextLevelNodeChildren.push(nodeGrandChild);\r\n            });\r\n          }\r\n        });\r\n        nodeChildren = nextLevelNodeChildren;\r\n        nodeProps[\"griditemdata\"] = gridItemData;\r\n      } else if (NodeTag == \"mui-tabs\" && nodeChildren && nodeChildren.length > 0) {\r\n        let nextLevelNodeChildren = [];\r\n        let tabItems = [];\r\n        nodeChildren.forEach((nodeChild, indx) => {\r\n          if (nodeChild && nodeChild.children) {\r\n            let tabItemProps = getNodeProps(nodeChild, [\"label\", \"value\", \"disabled\", \"icon\", \"wrapped\"]);\r\n            let tabSlotName = \"tab-item-\" + (nodeChild.props.elementId || nodeChild.props.name || indx);\r\n            tabItems.push({ slotname: tabSlotName, ...tabItemProps });\r\n            nodeChild.children.map((nodeGrandChild, indx) => {\r\n              nodeGrandChild.props = nodeGrandChild.props || {};\r\n              nodeGrandChild.props.slotname = tabSlotName;\r\n              nextLevelNodeChildren.push(nodeGrandChild);\r\n            });\r\n          }\r\n        });\r\n        nodeChildren = nextLevelNodeChildren;\r\n        nodeProps[\"tabitems\"] = tabItems;\r\n      } else if (NodeTag == \"srs-repeater\" && nodeChildren && nodeChildren.length > 0) {\r\n        let items = [];\r\n        try {\r\n          items = JSON.parse(nodeProps.items);\r\n        } catch (err) {\r\n          console.error(\"Unable to parse the items of the repeater. Please correct it and try again.\")\r\n        }\r\n\r\n        if (items && items.length > 0) {\r\n          let currentNodeChildren = klona(nodeChildren);\r\n          nodeChildren = [];\r\n\r\n          items.forEach((childItemContext, indx) => {\r\n            nodeChildren.push({\r\n              elementId: node.elementId + \"-\" + indx,\r\n              name: node.name + \"-\" + indx,\r\n              tag: \"srs-contentrenderer\",\r\n              props: {\r\n                overrides: {\r\n                  contents: currentNodeChildren,\r\n                  context: { ...context, ...childItemContext }\r\n                },\r\n                styles: { minHeight: \"100%\", maxHeight: \"100%\", overflow: \"auto\" }\r\n              }\r\n            })\r\n          })\r\n        }\r\n        node.children = nodeChildren;\r\n      }\r\n\r\n      let childNodes = renderNodes(nodeChildren, context, clan, theme, currentRef);\r\n\r\n      result.push(<NodeTag\r\n        key={node.elementId || node.name}\r\n        elementid={node.elementId || node.id || node.name}\r\n        ts={node.ts}\r\n        ref={el => {\r\n          if (!el) return;\r\n          Object.keys(nodeProps).forEach(nodePropKey => {\r\n            try {\r\n              if (typeof nodeProps[nodePropKey] == \"object\") {\r\n                el[nodePropKey] = JSON.stringify(nodeProps[nodePropKey]);\r\n              } else {\r\n                el[nodePropKey] = nodeProps[nodePropKey];\r\n              }\r\n            } catch (err) {\r\n              console.error(err);\r\n            }\r\n          });\r\n          el.context = context;\r\n          el.clan = clan;\r\n          el.theme = theme;\r\n        }}>\r\n        {childNodes}\r\n      </NodeTag>);\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n  name: \"overrides\",\r\n  type: \"object\",\r\n  defaultValue: {}\r\n}, {\r\n  name: \"styles\",\r\n  type: \"object\",\r\n  defaultValue: {}\r\n}]\r\n\r\nconst slots = [];\r\n\r\nexport default ContentRenderer;\r\nconst WrappedComponent = wrapper(React.forwardRef(ContentRenderer), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n","export function klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar k, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\tif (x.constructor !== Object && typeof x.constructor === 'function') {\n\t\t\ttmp = new x.constructor();\n\t\t\tfor (k in x) {\n\t\t\t\tif (x.hasOwnProperty(k) && tmp[k] !== x[k]) {\n\t\t\t\t\ttmp[k] = klona(x[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ttmp = {}; // null\n\t\t\tfor (k in x) {\n\t\t\t\tif (k === '__proto__') {\n\t\t\t\t\tObject.defineProperty(tmp, k, {\n\t\t\t\t\t\tvalue: klona(x[k]),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttmp[k] = klona(x[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Array]') {\n\t\tk = x.length;\n\t\tfor (tmp=Array(k); k--;) {\n\t\t\ttmp[k] = klona(x[k]);\n\t\t}\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Date]') {\n\t\treturn new Date(+x);\n\t}\n\n\tif (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t\ttmp.lastIndex = x.lastIndex;\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object DataView]') {\n\t\treturn new x.constructor( klona(x.buffer) );\n\t}\n\n\tif (str === '[object ArrayBuffer]') {\n\t\treturn x.slice(0);\n\t}\n\n\t// ArrayBuffer.isView(x)\n\t// ~> `new` bcuz `Buffer.slice` => ref\n\tif (str.slice(-6) === 'Array]') {\n\t\treturn new x.constructor(x);\n\t}\n\n\treturn x;\n}\n"],"names":["ContentRenderer","props","ref","_props$overrides","_props$overrides2","_props$overrides3","_useState2","_slicedToArray","useState","overrides","contents","clan","setContents","_useState4","context","setContext","_useState6","theme","setTheme","_useState8","eventBinding","setEventBinding","_useState10","componentsRegistered","setComponentsRegistered","_useState12","getUniqueComponentsToRegister","uniqueComponents","setUniqueComponents","_useState14","setComponentPropTypes","contentsRef","useRef","innerRef","useEffect","_props$overrides6","prevContents","_props$overrides4","prevContext","_props$overrides5","prevTheme","document","documentElement","setAttribute","current","addEventListener","e","console","log","updatedUniqueComponents","isChanged","prevVal","register","then","componentPropTypeData","result","React","length","_styles","backgroundColor","minHeight","maxHeight","overflow","propStyles","styles","_objectSpread","style","className","renderNodes","array1","array2","forEach","array1Item","indexOf","getNodeFromTree","nodeId","searchInTree","tree","id","_step","_iterator","_createForOfIteratorHelper","s","n","done","node","value","elementId","name","children","err","f","getNodeProps","propKeys","gridItemProps","propKey","nodes","currentRef","nodeFromPrevTree","JSON","stringify","ts","Date","now","hasOwnProperty","visible","NodeTag","tag","nodeProps","nodePropKeys","Object","keys","filter","nodePropKey","map","slotname","slot","_window","_window$__SRS__","overridePropKeys","functions","window","__SRS__","nodeContext","helper","nodeVal","startsWith","endsWith","expression","slice","dynamicFunction","Function","concat","nodeChildren","nextLevelNodeChildren","gridItemData","nodeChild","indx","gridItemSlotName","push","nodeGrandChild","_nextLevelNodeChildren","tabItems","tabItemProps","tabSlotName","items","parse","error","currentNodeChildren","klona","childItemContext","childNodes","key","elementid","el","_typeof","dispatchedEvents","type","defaultValue","slots","WrappedComponent","wrapper","x","k","tmp","str","prototype","toString","call","constructor","defineProperty","configurable","enumerable","writable","Array","Set","val","add","Map","set","RegExp","source","flags","lastIndex","buffer"],"sourceRoot":""}