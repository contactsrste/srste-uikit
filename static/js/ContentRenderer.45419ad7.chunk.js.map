{"version":3,"file":"static/js/ContentRenderer.45419ad7.chunk.js","mappings":"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","sources":["components/ContentRenderer.js","../node_modules/klona/dist/index.mjs"],"sourcesContent":["import React, { useEffect, useRef, useState, createContext, useContext } from \"react\";\r\nimport { register, getUniqueComponentsToRegister } from \"../commons/ComponentRegistry\";\r\nimport wrapper from \"../commons/WebComponentWrapper\";\r\nimport { klona } from \"klona\";\r\n\r\nconst ThemePreferenceContext = createContext();\r\nfunction useThemePreference() {\r\n  return useContext(ThemePreferenceContext);\r\n}\r\n\r\nconst ContentRenderer = (props, ref) => {\r\n\r\n  const [contents, setContents] = useState(props.overrides?.contents || props.clan || []);\r\n  const [context, setContext] = useState(props.overrides?.context || props.context || {});\r\n  const [functions, setFunctions] = useState(props.overrides?.functions || props.functions || {});\r\n  const [designtime, setDesigntime] = useState(props.overrides?.designtime || false);\r\n  const [theme, setTheme] = useState(props.theme || \"g90\");\r\n  const [eventBinding, setEventBinding] = useState(false);\r\n  const [componentsRegistered, setComponentsRegistered] = useState(false);\r\n  const [uniqueComponents, setUniqueComponents] = useState(getUniqueComponentsToRegister(props.overrides?.contents || props.clan || []) || []);\r\n  const [componentPropTypes, setComponentPropTypes] = useState({});\r\n  const innerRef = useRef(null);\r\n  const [prevContents, setPrevContents] = useState(null);\r\n\r\n  const updateFunctions = (functionData) => {\r\n    if(functionData && Object.keys(functionData).length > 0) {\r\n      window.__SRS__ = window.__SRS__ || {};\r\n      window.__SRS__.functions = window.__SRS__.functions || {};\r\n      let functionNames = Object.keys(functionData);\r\n      functionNames.map((functionName) => {\r\n        let functionValue = functionData[functionName];\r\n        if(functionValue) {\r\n          if(typeof functionValue == \"string\") {\r\n            window.__SRS__.functions[functionName] = new Function(\"return \" + functionValue)();\r\n          }else {\r\n            window.__SRS__.functions[functionName] = functionValue;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    setFunctions(prevContext => functionData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateFunctions(functions);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setContents(currentContents => {\r\n      let updatedContents = props.overrides?.contents || props.clan;\r\n      setPrevContents(currentContents);\r\n      return updatedContents;\r\n    });\r\n\r\n    setContext(prevContext => props.overrides?.context || props.context);\r\n    updateFunctions(props.overrides?.functions || props.functions || {});\r\n    setTheme(prevTheme => props.theme);\r\n    document.documentElement.setAttribute('data-carbon-theme', props.theme);\r\n    if (innerRef.current && !eventBinding) {\r\n      setEventBinding(true);\r\n      innerRef.current.addEventListener(\"RICHTEXT#home\", (e) => {\r\n        console.log(e);\r\n      });\r\n      innerRef.current.addEventListener(\"HOME#clicked\", (e) => {\r\n        console.log(e);\r\n      });\r\n      innerRef.current.addEventListener(\"RICHTEXT#about\", (e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    let updatedUniqueComponents = getUniqueComponentsToRegister(props.overrides?.contents || props.clan);\r\n    if (!componentsRegistered || isChanged(updatedUniqueComponents, uniqueComponents)) {\r\n      setUniqueComponents(prevVal => updatedUniqueComponents);\r\n      setComponentsRegistered(prevVal => false);\r\n      register(updatedUniqueComponents, props.theme)\r\n        .then((componentPropTypeData) => {\r\n          setComponentPropTypes(prevVal => componentPropTypeData);\r\n          setComponentsRegistered(prevVal => true);\r\n        });\r\n    }\r\n  }, [props.overrides, props.clan, props.context, props.theme]);\r\n\r\n  let result = <div> loading... </div>;\r\n  if (contents && contents.length > 0) {\r\n    if (componentsRegistered) {\r\n      let styles = { backgroundColor: \"var(--cds-background)\", minHeight: \"100vh\", maxHeight: \"100vh\", overflow: \"scroll\" };\r\n      let propStyles = props.styles || {};\r\n      styles = { ...styles, ...propStyles };\r\n      let carbonStylesUrl = \"./carbon-components.css\";\r\n      if(window.__SRS__?.mode == \"sandbox\") {\r\n        carbonStylesUrl = \"https://know.srste.in/carbon-components.css\";\r\n      }\r\n      result = (<div ref={innerRef} data-carbon-theme={props.theme} style={styles}>\r\n        <style className=\"basetheme\">\r\n          {`@import \"${carbonStylesUrl}\";`}  {/* DONT REMOVE THIS STYLE AS THIS IS USED FOR THEME */}\r\n        </style>\r\n        {/* <GlobalTheme theme={props.theme}> */}\r\n        {renderNodes(contents, context, contents, props.theme, prevContents, designtime)}\r\n        {/* </GlobalTheme> */}\r\n      </div>)\r\n    } else {\r\n      result = <div> loading... </div>;\r\n    }\r\n  } else {\r\n    result = <div style={{color: \"var(--cds-text-secondary)\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: \"x-large\"}}> No contents to show!</div>;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst isChanged = function (array1, array2) {\r\n  let isChanged = false;\r\n\r\n  array1.forEach((array1Item) => {\r\n    if (array2.indexOf(array1Item) == -1) {\r\n      isChanged = true;\r\n    }\r\n  });\r\n  return isChanged;\r\n}\r\n\r\nconst getNodeFromTree = function (contentsRef, nodeId) {\r\n  const searchInTree = (tree, id) => {\r\n    for (let node of tree) {\r\n      if (node.elementId === id || node.name === id) {\r\n        return node;\r\n      } else if (node.children) {\r\n        const result = searchInTree(node.children, id);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return contentsRef? searchInTree(contentsRef, nodeId): null;\r\n};\r\n\r\nconst getNodeProps = function (node, propKeys, nodeContext) {\r\n  let gridItemProps = {};\r\n\r\n  if (propKeys && propKeys.length > 0) {\r\n    propKeys.forEach((propKey) => {\r\n      if (node.props[propKey]) {\r\n        gridItemProps[propKey] = node.props[propKey];\r\n      }\r\n    })\r\n  }\r\n\r\n  if (node.overrides) {\r\n    let overridePropKeys = Object.keys(node.overrides);\r\n    \r\n    overridePropKeys.map((nodePropKey) => {\r\n      let nodeVal = node.overrides[nodePropKey];\r\n      if (nodeVal.startsWith(\"[[\") && nodeVal.endsWith(\"]]\")) {\r\n        // remove the expression delimiters from the value\r\n        let expression = nodeVal.slice(2, -2);\r\n        let dynamicFunction = new Function(\"api\", `with(api) { return ${expression}; }`);\r\n        gridItemProps[nodePropKey] = dynamicFunction(nodeContext);\r\n      }\r\n    });\r\n  }\r\n\r\n  return gridItemProps;\r\n}\r\n\r\nconst findElement = (key, nestedContents) => {\r\n  for (let element of nestedContents) {\r\n      if (element.elementId === key) {\r\n          return element;\r\n      } else if (element.children) {\r\n          const found = findElement(key, element.children);\r\n          if (found) return found;\r\n      }\r\n  }\r\n  return null;\r\n}\r\n\r\nconst findParentElement = (elementId, nestedContents) => {\r\n  const stack = [...nestedContents];\r\n\r\n  while (stack.length > 0) {\r\n      const element = stack.pop();\r\n\r\n      if (element.elementId === elementId) {\r\n          return null; // The provided elementId is already the top-level element, so no parent exists\r\n      }\r\n\r\n      if (element.children) {\r\n          for (let i = 0; i < element.children.length; i++) {\r\n              const childElement = element.children[i];\r\n\r\n              if (childElement.elementId === elementId) {\r\n                  return element; // Return the current element as the parent if a match is found\r\n              }\r\n\r\n              if (childElement.children) {\r\n                  stack.push(childElement); // Add the child element to the stack for further iteration\r\n              }\r\n          }\r\n      }\r\n  }\r\n\r\n  return null; // Return null if no parent element is found\r\n};\r\n\r\nconst renderNodes = function (nodes, context, clan, theme, currentRef, designtime) {\r\n  let result = [];\r\n  // Compare previous and current node values \r\n  nodes && nodes.forEach(node => {\r\n    let nodeFromPrevTree = getNodeFromTree(currentRef, node.elementId || node.name);\r\n    if (JSON.stringify(node) !== JSON.stringify(nodeFromPrevTree)) {\r\n      node.ts = Date.now() + \"\";\r\n    }else if((node?.props?.designtime || \"\") + \"\" == \"true\" && window.__SRS__.activeElementId) {\r\n      if(window.__SRS__.activeElementId == node.props.elementid) {\r\n        node.ts = Date.now() + \"\";\r\n      }\r\n    }\r\n\r\n    if (!node.hasOwnProperty(\"visible\") || node.visible) {\r\n      let NodeTag = node.tag;\r\n      let nodeProps = {};\r\n      if (node.props) {\r\n        let nodePropKeys = Object.keys(node.props);\r\n        nodePropKeys = nodePropKeys.filter((nodePropKey) => nodePropKey != \"slotname\");\r\n        nodePropKeys.map((nodePropKey) => {\r\n          if (typeof node.props[nodePropKey] !== \"string\") {\r\n            nodeProps[nodePropKey] = JSON.stringify(node.props[nodePropKey]);\r\n          } else {\r\n            nodeProps[nodePropKey] = node.props[nodePropKey];\r\n          }\r\n        }\r\n        ); { }\r\n        if (node?.props?.slotname) {\r\n          nodeProps.slot = node.props.slotname;\r\n        }\r\n      }\r\n\r\n      let functions = window?.__SRS__?.functions || {};\r\n      const nodeContext = {\r\n        context,\r\n        clan,\r\n        helper: {\r\n          //add helper methods\r\n          ...functions,\r\n          findParentElement,\r\n          findElement\r\n        }\r\n      }\r\n\r\n      if (node.overrides) {\r\n        let overridePropKeys = Object.keys(node.overrides);\r\n        overridePropKeys.map((nodePropKey) => {\r\n          let nodeVal = node.overrides[nodePropKey];\r\n          if (nodeVal.startsWith(\"[[\") && nodeVal.endsWith(\"]]\")) {\r\n            // remove the expression delimiters from the value\r\n            let expression = nodeVal.slice(2, -2);\r\n            let dynamicFunction = new Function(\"api\", `with(api) { return ${expression}; }`);\r\n            nodeProps[nodePropKey] = dynamicFunction(nodeContext);\r\n          }\r\n        });\r\n      }\r\n\r\n      let nodeChildren = node.children;\r\n      if (NodeTag == \"mui-grid\" && nodeProps.hasOwnProperty(\"container\") && nodeChildren && nodeChildren.length > 0) {\r\n        let nextLevelNodeChildren = [];\r\n        let gridItemData = [];\r\n        nodeChildren.forEach((nodeChild, indx) => {\r\n          if (nodeChild && nodeChild.children) {\r\n            let gridItemProps = getNodeProps(nodeChild, [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"spacing\", \"direction\", \r\n              \"justify\", \"alignItems\", \"alignContent\", \"wrap\", \"component\", \"xsAuto\", \"smAuto\", \"mdAuto\", \"lgAuto\", \"xlAuto\", \"zeroMinWidth\"], nodeContext);\r\n            let gridItemSlotName = \"grid-item-\" + (nodeChild.props.elementId || nodeChild.props.name || indx);\r\n            gridItemData.push({ slotname: gridItemSlotName, gridItemProps });\r\n            nodeChild.children.map((nodeGrandChild, indx) => {\r\n              nodeGrandChild.props = nodeGrandChild.props || {};\r\n              nodeGrandChild.props.slotname = gridItemSlotName;\r\n              nextLevelNodeChildren.push(nodeGrandChild);\r\n            });\r\n          }\r\n        });\r\n        nodeChildren = nextLevelNodeChildren;\r\n        nodeProps[\"griditemdata\"] = gridItemData;\r\n      } else if (NodeTag == \"mui-tabs\" && nodeChildren && nodeChildren.length > 0) {\r\n        let nextLevelNodeChildren = [];\r\n        let tabItems = [];\r\n        nodeChildren.forEach((nodeChild, indx) => {\r\n          if (nodeChild && nodeChild.children) {\r\n            let tabItemProps = getNodeProps(nodeChild, [\"label\", \"value\", \"disabled\", \"icon\", \"wrapped\"], nodeContext);\r\n            let tabSlotName = \"tab-item-\" + (nodeChild.props.elementId || nodeChild.props.name || indx);\r\n            tabItems.push({ slotname: tabSlotName, ...tabItemProps });\r\n            nodeChild.children.map((nodeGrandChild, indx) => {\r\n              nodeGrandChild.props = nodeGrandChild.props || {};\r\n              nodeGrandChild.props.slotname = tabSlotName;\r\n              nextLevelNodeChildren.push(nodeGrandChild);\r\n            });\r\n          }\r\n        });\r\n        nodeChildren = nextLevelNodeChildren;\r\n        nodeProps[\"tabitems\"] = tabItems;\r\n      } else if (NodeTag == \"srs-repeater\" && nodeChildren && nodeChildren.length > 0) {\r\n        let items = [];\r\n        try {\r\n          items = JSON.parse(nodeProps.items);\r\n        } catch (err) {\r\n          // console.error(\"Unable to parse the items of the repeater. Please correct it and try again.\")\r\n        }\r\n\r\n        if (items && items.length > 0) {\r\n          let currentNodeChildren = klona(nodeChildren);\r\n          nodeChildren = [];\r\n\r\n          items.forEach((childItemContext, indx) => {\r\n            nodeChildren.push({\r\n              elementId: node.elementId + \"-\" + indx,\r\n              name: node.name + \"-\" + indx,\r\n              tag: \"srs-contentrenderer\",\r\n              props: {\r\n                overrides: {\r\n                  contents: currentNodeChildren,\r\n                  context: { ...context, ...childItemContext },\r\n                  designtime: designtime\r\n                },\r\n                styles: { minHeight: \"100%\", maxHeight: \"100%\", overflow: \"auto\" }\r\n              }\r\n            })\r\n          })\r\n        }\r\n        node.children = nodeChildren;\r\n      } \r\n      let childNodes = renderNodes(nodeChildren, context, clan, theme, currentRef, designtime);\r\n\r\n      result.push(<NodeTag\r\n        key={node.elementId || node.name}\r\n        elementid={node.elementId || node.id || node.name}\r\n        ts={node.ts}\r\n        ref={el => {\r\n          if (!el) return;\r\n          Object.keys(nodeProps).forEach(nodePropKey => {\r\n            try {\r\n              if (typeof nodeProps[nodePropKey] == \"object\") {\r\n                el[nodePropKey] = JSON.stringify(nodeProps[nodePropKey]);\r\n              } else {\r\n                el[nodePropKey] = nodeProps[nodePropKey];\r\n              }\r\n            } catch (err) {\r\n              // console.error(err);\r\n            }\r\n          });\r\n          el.context = context;\r\n          el.clan = clan;\r\n          el.theme = theme;\r\n          el.designtime = designtime;\r\n        }}>\r\n        {childNodes}\r\n      </NodeTag>);\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n  name: \"overrides\",\r\n  type: \"object\",\r\n  defaultValue: {}\r\n}, {\r\n  name: \"styles\",\r\n  type: \"object\",\r\n  defaultValue: {}\r\n}]\r\n\r\nconst slots = [];\r\n\r\nexport default ContentRenderer;\r\nconst WrappedComponent = wrapper(React.forwardRef(ContentRenderer), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n","export function klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar k, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\tif (x.constructor !== Object && typeof x.constructor === 'function') {\n\t\t\ttmp = new x.constructor();\n\t\t\tfor (k in x) {\n\t\t\t\tif (x.hasOwnProperty(k) && tmp[k] !== x[k]) {\n\t\t\t\t\ttmp[k] = klona(x[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ttmp = {}; // null\n\t\t\tfor (k in x) {\n\t\t\t\tif (k === '__proto__') {\n\t\t\t\t\tObject.defineProperty(tmp, k, {\n\t\t\t\t\t\tvalue: klona(x[k]),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttmp[k] = klona(x[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Array]') {\n\t\tk = x.length;\n\t\tfor (tmp=Array(k); k--;) {\n\t\t\ttmp[k] = klona(x[k]);\n\t\t}\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Date]') {\n\t\treturn new Date(+x);\n\t}\n\n\tif (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t\ttmp.lastIndex = x.lastIndex;\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object DataView]') {\n\t\treturn new x.constructor( klona(x.buffer) );\n\t}\n\n\tif (str === '[object ArrayBuffer]') {\n\t\treturn x.slice(0);\n\t}\n\n\t// ArrayBuffer.isView(x)\n\t// ~> `new` bcuz `Buffer.slice` => ref\n\tif (str.slice(-6) === 'Array]') {\n\t\treturn new x.constructor(x);\n\t}\n\n\treturn x;\n}\n"],"names":["ContentRenderer","props","ref","_props$overrides","_props$overrides2","_props$overrides3","_props$overrides4","_props$overrides5","_useState2","_slicedToArray","useState","overrides","contents","clan","setContents","_useState4","context","setContext","_useState6","functions","setFunctions","_useState8","designtime","_useState10","theme","setTheme","_useState12","eventBinding","setEventBinding","_useState14","componentsRegistered","setComponentsRegistered","_useState16","getUniqueComponentsToRegister","uniqueComponents","setUniqueComponents","_useState18","setComponentPropTypes","innerRef","useRef","_useState20","prevContents","setPrevContents","updateFunctions","functionData","Object","keys","length","window","__SRS__","map","functionName","functionValue","Function","prevContext","useEffect","_props$overrides8","_props$overrides9","currentContents","_props$overrides6","updatedContents","_props$overrides7","prevTheme","document","documentElement","setAttribute","current","addEventListener","e","console","log","updatedUniqueComponents","isChanged","prevVal","register","then","componentPropTypeData","result","React","_window$__SRS__","_styles","backgroundColor","minHeight","maxHeight","overflow","propStyles","styles","_objectSpread","carbonStylesUrl","mode","style","className","concat","renderNodes","color","display","flexDirection","alignItems","fontSize","array1","array2","forEach","array1Item","indexOf","getNodeProps","node","propKeys","nodeContext","gridItemProps","propKey","nodePropKey","nodeVal","startsWith","endsWith","expression","slice","dynamicFunction","findElement","key","nestedContents","_step2","_iterator2","_createForOfIteratorHelper","s","n","done","element","value","elementId","children","found","err","f","findParentElement","stack","_toConsumableArray","pop","i","childElement","push","nodes","currentRef","_node$props","contentsRef","nodeId","nodeFromPrevTree","name","searchInTree","tree","id","_step","_iterator","JSON","stringify","activeElementId","elementid","ts","Date","now","hasOwnProperty","visible","_window","_window$__SRS__2","NodeTag","tag","nodeProps","_node$props2","nodePropKeys","filter","slotname","slot","helper","nodeChildren","nextLevelNodeChildren","gridItemData","nodeChild","indx","gridItemSlotName","nodeGrandChild","_nextLevelNodeChildren","tabItems","tabItemProps","tabSlotName","items","parse","currentNodeChildren","klona","childItemContext","childNodes","el","_typeof","dispatchedEvents","type","defaultValue","slots","WrappedComponent","wrapper","x","k","tmp","str","prototype","toString","call","constructor","defineProperty","configurable","enumerable","writable","Array","Set","val","add","Map","set","RegExp","source","flags","lastIndex","buffer"],"sourceRoot":""}