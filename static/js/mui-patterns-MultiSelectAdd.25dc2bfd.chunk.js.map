{"version":3,"file":"static/js/mui-patterns-MultiSelectAdd.25dc2bfd.chunk.js","mappings":"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","sources":["components/mui/patterns/MultiSelectAdd.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\n\r\nimport Chip from '@mui/material/Chip';\r\nimport TextField from '@mui/material/TextField';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  StyledEngineProvider,\r\n  createTheme,\r\n  ThemeProvider\r\n} from \"@mui/material/styles\";\r\nimport { orange } from '@mui/material/colors';\r\n\r\nconst dispatchedEvents = [\"ABOUT#clicked\"];\r\n\r\n\r\n/*\r\n    Example: <srs-multiselectadd>\r\n            </srs-multiselectadd>\r\n*/\r\nconst SrsMultiSelectAdd = function (props, ref) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [isNewOption, setIsNewOption] = useState(false);\r\n  const [newOptionLabel, setNewOptionLabel] = useState(\"\");\r\n  const [newOptionValue, setNewOptionValue] = useState(\"\");\r\n\r\n  const listRef = useRef(null);\r\n\r\n  let options = [{ label: \"Option1\", value: \"option1\" }, { label: \"Option2\", value: \"option2\" }];\r\n  const filteredOptions = options.filter((option) =>\r\n    option.label.toLowerCase().includes(searchValue.toLowerCase())\r\n  );\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    textField: {\r\n      width: \"100%\",\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    popper: {\r\n      zIndex: 1\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles(props.muiTheme);\r\n  const onChange = props.onChange || ((val) => { });\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchValue(event.target.value);\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleSelect = (item) => {\r\n    setSelectedItems((prevSelectedItems) => [...prevSelectedItems, item]);\r\n    setSearchValue('');\r\n    // onChange([...selectedItems, item]);\r\n  };\r\n\r\n  const handleDelete = (itemToDelete) => {\r\n    setSelectedItems((prevSelectedItems) =>\r\n      prevSelectedItems.filter((item) => item.value !== itemToDelete.value)\r\n    );\r\n    // onChange(selectedItems.filter((item) => item.value !== itemToDelete.value));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    if (selectedItems.some((item) => item.value === option.value)) {\r\n      setSelectedItems(selectedItems.filter((item) => item.value !== option.value));\r\n    } else {\r\n      setSelectedItems([...selectedItems, option]);\r\n    }\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const handleAddNewOption = () => {\r\n    setIsNewOption(true);\r\n  };\r\n\r\n  const handleNewOptionChange = (event) => {\r\n    setNewOptionLabel(event.target.value);\r\n  };\r\n\r\n  const handleNewOptionValueChange = (event) => {\r\n    setNewOptionValue(event.target.value);\r\n  };\r\n\r\n  const handleNewOptionCancel = () => {\r\n    setIsNewOption(false);\r\n    setNewOptionLabel(\"\");\r\n    setNewOptionValue(\"\");\r\n  };\r\n\r\n  const handleNewOptionApply = () => {\r\n    const newOption = { label: newOptionLabel, value: newOptionValue };\r\n    setSelectedItems([...selectedItems, newOption]);\r\n    onChange([...selectedItems, newOption]);\r\n    setIsNewOption(false);\r\n    setNewOptionLabel(\"\");\r\n    setNewOptionValue(\"\");\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleOutsideClick = (event) => {\r\n      if (anchorEl && !listRef.current.contains(event.target)) {\r\n        handleClose();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleOutsideClick);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleOutsideClick);\r\n    };\r\n  }, [anchorEl]);\r\n\r\n  const popperTheme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n      primary: {\r\n        main: orange[500],\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div style={{ flexGrow: 1 }}>\r\n      <TextField\r\n        className={classes.textField}\r\n        value={searchValue}\r\n        onChange={handleSearchChange}\r\n        variant=\"outlined\"\r\n        label=\"Select or Add\" />\r\n      <Popper open={Boolean(anchorEl)} anchorEl={anchorEl} placement=\"right-start\">\r\n        {isNewOption ?\r\n          (<StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={popperTheme}>\r\n              <Paper ref={listRef} style={{ padding: '8px', cursor: 'pointer' }}>\r\n                <Typography variant=\"h6\">Add New Option</Typography>\r\n\r\n                <TextField\r\n                  label=\"Label\"\r\n                  className={classes.textField}\r\n                  value={newOptionLabel}\r\n                  onChange={handleNewOptionChange}\r\n                  variant=\"outlined\"\r\n                // margin=\"dense\"\r\n                />\r\n                <TextField\r\n                  label=\"Value\"\r\n                  className={classes.textField}\r\n                  value={newOptionValue}\r\n                  onChange={handleNewOptionValueChange}\r\n                  variant=\"outlined\"\r\n                // margin=\"dense\"\r\n                />\r\n                <Button onClick={handleNewOptionApply}>Apply</Button>\r\n                <Button onClick={handleNewOptionCancel}>Cancel</Button>\r\n              </Paper>\r\n            </ThemeProvider>\r\n          </StyledEngineProvider>\r\n          ) : (<StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={popperTheme}>\r\n              <Paper ref={listRef} style={{ padding: '8px', cursor: 'pointer' }}>\r\n                {filteredOptions.map((option) => (\r\n                  <div key={option.value}\r\n                    style={{ padding: '8px', cursor: 'pointer' }}\r\n                    onClick={() => handleSelect(option)}>\r\n                    {option.label}\r\n                  </div>\r\n                ))}\r\n                <div key=\"newOption\"\r\n                  style={{ padding: '8px', cursor: 'pointer' }}\r\n                  onClick={() => handleAddNewOption()}>\r\n                  Create New\r\n                </div>\r\n              </Paper>\r\n            </ThemeProvider>\r\n          </StyledEngineProvider>)\r\n        }\r\n      </Popper>\r\n      {selectedItems.map((item) => (\r\n        <Chip\r\n          key={item.value}\r\n          label={item.label}\r\n          onDelete={() => handleDelete(item)}\r\n          color=\"primary\"\r\n          style={{ margin: '2px' }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n  name: \"open\",\r\n  defaultValue: \"false\",\r\n  type: \"boolean\"\r\n}]\r\n\r\nconst slots = [{ name: \"default\", allowed: [\"srs-accordion-item\"] }];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsMultiSelectAdd), props, \"mui\");\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","SrsMultiSelectAdd","props","ref","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","_useState3","_useState4","searchValue","setSearchValue","_useState5","_useState6","selectedItems","setSelectedItems","_useState7","_useState8","isNewOption","setIsNewOption","_useState9","_useState10","newOptionLabel","setNewOptionLabel","_useState11","_useState12","newOptionValue","setNewOptionValue","listRef","useRef","filteredOptions","label","value","filter","option","toLowerCase","includes","classes","makeStyles","theme","root","display","flexWrap","textField","width","paper","margin","spacing","popper","zIndex","useStyles","muiTheme","onChange","val","useEffect","handleOutsideClick","event","current","contains","target","document","addEventListener","removeEventListener","popperTheme","createTheme","palette","mode","primary","main","orange","_jsxs","style","flexGrow","children","_jsx","TextField","className","currentTarget","variant","Popper","open","Boolean","placement","StyledEngineProvider","injectFirst","ThemeProvider","Paper","padding","cursor","Typography","Button","onClick","newOption","concat","_toConsumableArray","map","item","prevSelectedItems","Chip","onDelete","itemToDelete","color","styles","name","defaultValue","type","slots","allowed","WrappedComponent","wrapper","React"],"sourceRoot":""}