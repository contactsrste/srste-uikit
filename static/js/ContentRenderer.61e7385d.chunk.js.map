{"version":3,"file":"static/js/ContentRenderer.61e7385d.chunk.js","mappings":"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","sources":["components/ContentRenderer.js"],"sourcesContent":["import React, { useEffect, useRef, useState, createContext, useContext, useMemo } from \"react\";\r\nimport { register, getUniqueComponentsToRegister } from \"../commons/ComponentRegistry\";\r\nimport wrapper from \"../commons/WebComponentWrapper\";\r\nimport { debounce, isEqual } from 'lodash';\r\nimport { compressToBase64, decompressFromBase64 } from \"lz-string\";\r\nimport axios from \"axios\";\r\nimport { klona } from \"klona\";\r\n\r\nconst ContentRenderer = (props, ref) => {\r\n\r\n  const [contents, setContents] = useState(props.widgetid ? (props.overrides?.contents || []) : (props.overrides?.contents || props.clan || []));\r\n  const [context, setContext] = useState(props.widgetid ? (props.overrides?.context || {}) : (props.overrides?.context || props.context || {}));\r\n  const [functions, setFunctions] = useState(props.widgetid ? (props.overrides?.functions || {}) : (props.overrides?.functions || props.functions || {}));\r\n  const [designtime, setDesigntime] = useState(props.designtime);\r\n  const [widgetId, setWidgetId] = useState(props.widgetid || \"\");\r\n  const [theme, setTheme] = useState(props.theme || \"g90\");\r\n  const [componentsRegistered, setComponentsRegistered] = useState(false);\r\n  const [uniqueComponents, setUniqueComponents] = useState(getUniqueComponentsToRegister(props.widgetid ? (props.overrides?.contents || []) : (props.overrides?.contents || props.clan || [])));\r\n  const [componentPropTypes, setComponentPropTypes] = useState({});\r\n  const innerRef = useRef(null);\r\n  const [prevContents, setPrevContents] = useState({});\r\n  const [processedNodes, setProcessedNodes] = useState([]);\r\n\r\n  const updateFunctions = (functionData) => {\r\n    if (functionData && Object.keys(functionData).length > 0) {\r\n      window.__SRS__ = window.__SRS__ || {};\r\n      window.__SRS__.functions = window.__SRS__.functions || {};\r\n      let functionNames = Object.keys(functionData);\r\n      functionNames.map((functionName) => {\r\n        let functionValue = functionData[functionName];\r\n        if (functionValue) {\r\n          if (typeof functionValue == \"string\") {\r\n            window.__SRS__.functions[functionName] = new Function(\"try { return \" + functionValue + \" }catch(err) {console.error(err);}\")();\r\n          } else {\r\n            window.__SRS__.functions[functionName] = functionValue;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    setFunctions(prevContext => functionData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContents(props.overrides?.contents || props.clan || []);\r\n    // setPrevContents(props.overrides?.contents || props.clan || []);\r\n    setContext(props.overrides?.context || props.context || {});\r\n    updateFunctions(functions);\r\n\r\n    if (props.overrides?.hasOwnProperty(\"designtime\")) {\r\n      setDesigntime(props.overrides.designtime);\r\n    } else if (props.designtime) {\r\n      setDesigntime(props.designtime);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPrevContents([...processedNodes]);\r\n    let result = getNodesToRender(klona(contents), context, contents, theme, prevContents, designtime, widgetId);\r\n    setProcessedNodes(result);\r\n  }, [contents, context]);\r\n\r\n  useEffect(() => {\r\n    setContents(currentContents => {\r\n      let updatedContents = props.overrides?.contents || props.clan;\r\n      return [...updatedContents];\r\n    });\r\n\r\n    setContext(prevContext => {\r\n      let updatedContext = props.overrides?.context || props.context;\r\n      return { ...updatedContext };\r\n    });\r\n    updateFunctions(props.overrides?.functions || props.functions || {});\r\n    setTheme(prevTheme => props.theme);\r\n\r\n    if (props.overrides?.hasOwnProperty(\"designtime\")) {\r\n      setDesigntime(props.overrides.designtime);\r\n    } else if (props.designtime) {\r\n      setDesigntime(props.designtime);\r\n    }\r\n\r\n    let updatedUniqueComponents = getUniqueComponentsToRegister(props.overrides?.contents || props.clan || []);\r\n    if (!componentsRegistered || isChanged(updatedUniqueComponents, uniqueComponents)) {\r\n      setUniqueComponents(prevVal => updatedUniqueComponents);\r\n      setComponentsRegistered(prevVal => false);\r\n      register(updatedUniqueComponents, props.theme)\r\n        .then((componentPropTypeData) => {\r\n          setComponentPropTypes(prevVal => componentPropTypeData);\r\n          setComponentsRegistered(prevVal => true);\r\n        });\r\n    }\r\n  }, [props.overrides, props.clan, props.context, props.theme]);\r\n\r\n  let getRenderedContents = () => {\r\n    let result = null;\r\n    if (processedNodes && processedNodes.length > 0) {\r\n      if (componentsRegistered) {\r\n        let styles = { backgroundColor: \"var(--cds-background)\", minHeight: \"100vh\", maxHeight: \"100vh\", overflow: \"auto\" };\r\n        let propStyles = props.styles || {};\r\n        styles = { ...styles, ...propStyles };\r\n        let carbonStylesUrl = \"./carbon-components.css\";\r\n        if (window.__SRS__?.mode == \"sandbox\") {\r\n          carbonStylesUrl = \"https://know.srste.in/carbon-components.css\";\r\n        }\r\n        result = (<div ref={innerRef} data-carbon-theme={props.theme} style={styles}>\r\n          <style className=\"basetheme\">\r\n            {`@import \"${carbonStylesUrl}\";`}  {/* DONT REMOVE THIS STYLE AS THIS IS USED FOR THEME */}\r\n          </style>\r\n          {renderNodes(klona(processedNodes), context, processedNodes, theme, designtime, widgetId)}\r\n        </div>)\r\n      } else {\r\n        result = <div> loading... </div>;\r\n      }\r\n    } else {\r\n      result = <div style={{ color: \"var(--cds-text-secondary)\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: \"x-large\" }}> No contents to show!</div>;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  let reRenderContents = useMemo(getRenderedContents, [processedNodes, componentsRegistered]);\r\n  return reRenderContents;\r\n};\r\n\r\nconst isChanged = function (array1, array2) {\r\n  let isChanged = false;\r\n\r\n  array1.forEach((array1Item) => {\r\n    if (array2.indexOf(array1Item) == -1) {\r\n      isChanged = true;\r\n    }\r\n  });\r\n  return isChanged;\r\n}\r\n\r\nconst getNodeProps = function (node, propKeys, nodeContext) {\r\n  let gridItemProps = {};\r\n\r\n  if (propKeys && propKeys.length > 0) {\r\n    propKeys.forEach((propKey) => {\r\n      if (node.props[propKey]) {\r\n        gridItemProps[propKey] = node.props[propKey];\r\n      }\r\n    })\r\n  }\r\n\r\n  if (node.overrides) {\r\n    let overridePropKeys = Object.keys(node.overrides);\r\n\r\n    overridePropKeys.map((nodePropKey) => {\r\n      let nodeVal = node.overrides[nodePropKey];\r\n      if (nodeVal.startsWith(\"[[\") && nodeVal.endsWith(\"]]\")) {\r\n        // remove the expression delimiters from the value\r\n        let expression = nodeVal.slice(2, -2);\r\n        let dynamicFunction = null;\r\n        try {\r\n          dynamicFunction = new Function(\"api\", `with(api) { try { console.log(\"In dynamicFunction\", \"${expression}\"); return ${expression}; }catch(err) { console.error(err) } }`);\r\n          gridItemProps[nodePropKey] = dynamicFunction(nodeContext);\r\n        } catch (err) { console.error(\"expression is \", expression, err); }\r\n      }\r\n    });\r\n  }\r\n\r\n  return gridItemProps;\r\n}\r\n\r\nconst findElement = (key, nestedContents) => {\r\n  for (let element of nestedContents) {\r\n    if (element.elementId === key) {\r\n      return element;\r\n    } else if (element.children) {\r\n      const found = findElement(key, element.children);\r\n      if (found) return found;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nconst findParentElement = (elementId, nestedContents) => {\r\n  const stack = [...nestedContents];\r\n\r\n  while (stack.length > 0) {\r\n    const element = stack.pop();\r\n\r\n    if (element.elementId === elementId) {\r\n      return null; // The provided elementId is already the top-level element, so no parent exists\r\n    }\r\n\r\n    if (element.children) {\r\n      for (let i = 0; i < element.children.length; i++) {\r\n        const childElement = element.children[i];\r\n\r\n        if (childElement.elementId === elementId) {\r\n          return element; // Return the current element as the parent if a match is found\r\n        }\r\n\r\n        if (childElement.children) {\r\n          stack.push(childElement); // Add the child element to the stack for further iteration\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return null; // Return null if no parent element is found\r\n};\r\n\r\nconst getNodesToRender = function (nodes, context, clan, theme, currentRef, designtime, widgetId) {\r\n  let result = [];\r\n  // Compare previous and current node values \r\n  let availableFunctions = {};\r\n  if (widgetId) {\r\n    if (window.__SRS__?.functions && Object.keys(window.__SRS__.functions)) {\r\n      Object.keys(window.__SRS__.functions).map((functionName) => {\r\n        availableFunctions[functionName] = window.__SRS__.functions[functionName];\r\n      })\r\n    }\r\n  } else {\r\n    if (window.__SRS__?.functions && Object.keys(window.__SRS__.functions)) {\r\n      Object.keys(window.__SRS__.functions).map((functionName) => {\r\n        availableFunctions[functionName] = window.__SRS__.functions[functionName];\r\n      })\r\n    }\r\n  }\r\n\r\n  const nodeContext = {\r\n    context,\r\n    clan,\r\n    dispatchEvent: props?.dispatchEvent || (() => { }),\r\n    helper: {\r\n      //add helper methods\r\n      ...availableFunctions,\r\n      findParentElement,\r\n      findElement,\r\n      compress: compressToBase64,\r\n      decompress: decompressFromBase64,\r\n      clone: klona,\r\n      debounce: debounce,\r\n      http: {\r\n        request: axios.request,\r\n        get: axios.get,\r\n        post: axios.post, \r\n        put: axios.put, \r\n        patch: axios.patch,\r\n        options: axios.options,\r\n        head: axios.head, \r\n        delete: axios.delete,\r\n        getUri: axios.getUri\r\n      }\r\n    }\r\n  }\r\n\r\n  nodes && nodes.forEach(node => {\r\n    let NodeTag = node.tag;\r\n    let nodeProps = {};\r\n\r\n    if (node.props) {\r\n      let nodePropKeys = Object.keys(node.props);\r\n      nodePropKeys = nodePropKeys.filter((nodePropKey) => nodePropKey != \"slotname\");\r\n      nodePropKeys.map((nodePropKey) => {\r\n        nodeProps[nodePropKey] = node.props[nodePropKey];\r\n      });\r\n      if (node?.props?.slotname) {\r\n        nodeProps.slot = node.props.slotname;\r\n      }\r\n    }\r\n\r\n    if (node.overrides) {\r\n      let overridePropKeys = Object.keys(node.overrides);\r\n      overridePropKeys.map((nodePropKey) => {\r\n        let nodeVal = node.overrides[nodePropKey];\r\n        if (nodeVal.startsWith(\"[[\") && nodeVal.endsWith(\"]]\")) {\r\n          // remove the expression delimiters from the value\r\n          let dynamicFunction = null;\r\n          let expression = nodeVal.slice(2, -2);\r\n          try {\r\n            dynamicFunction = new Function(\"api\", `with(api) { try { return ${expression}; }catch(err) { console.error(err); } }`);\r\n            nodeProps[nodePropKey] = dynamicFunction(nodeContext);\r\n          } catch (err) { console.error(\"expression is \", expression, err); }\r\n        }\r\n      });\r\n    }\r\n\r\n    let nodeChildren = node.children;\r\n    if (NodeTag == \"mui-grid\" && nodeProps.hasOwnProperty(\"container\") && nodeChildren && nodeChildren.length > 0) {\r\n      let nextLevelNodeChildren = [];\r\n      let gridItemData = [];\r\n      nodeChildren.forEach((nodeChild, indx) => {\r\n        if (nodeChild && nodeChild.children) {\r\n          let gridItemProps = getNodeProps(nodeChild, [\"sx\", \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"spacing\", \"direction\",\r\n            \"justify\", \"alignItems\", \"alignContent\", \"wrap\", \"component\", \"xsAuto\", \"smAuto\", \"mdAuto\", \"lgAuto\", \"xlAuto\", \"zeroMinWidth\"], nodeContext);\r\n          let gridItemSlotName = \"grid-item-\" + (nodeChild.props.elementId || nodeChild.props.name || indx);\r\n          gridItemData.push({ slotname: gridItemSlotName, gridItemProps });\r\n          nodeChild.children.map((nodeGrandChild, indx) => {\r\n            nodeGrandChild.props = nodeGrandChild.props || {};\r\n            nodeGrandChild.props.slotname = gridItemSlotName;\r\n            nextLevelNodeChildren.push(nodeGrandChild);\r\n          });\r\n        }\r\n      });\r\n      nodeChildren = nextLevelNodeChildren;\r\n      nodeProps[\"griditemdata\"] = gridItemData;\r\n    } else if (NodeTag == \"mui-tabs\" && nodeChildren && nodeChildren.length > 0) {\r\n      let nextLevelNodeChildren = [];\r\n      let tabItems = [];\r\n      nodeChildren.forEach((nodeChild, indx) => {\r\n        if (nodeChild && nodeChild.children) {\r\n          let tabItemProps = getNodeProps(nodeChild, [\"label\", \"value\", \"disabled\", \"icon\", \"wrapped\"], nodeContext);\r\n          let tabSlotName = \"tab-item-\" + (nodeChild.props.elementId || nodeChild.props.name || indx);\r\n          tabItems.push({ slotname: tabSlotName, ...tabItemProps });\r\n          nodeChild.children.map((nodeGrandChild, indx) => {\r\n            nodeGrandChild.props = nodeGrandChild.props || {};\r\n            nodeGrandChild.props.slotname = tabSlotName;\r\n            nextLevelNodeChildren.push(nodeGrandChild);\r\n          });\r\n        }\r\n      });\r\n      nodeChildren = nextLevelNodeChildren;\r\n      nodeProps[\"tabitems\"] = tabItems;\r\n    } else if (NodeTag == \"srs-repeater\" && nodeChildren && nodeChildren.length > 0) {\r\n      if (designtime + \"\" != \"true\") {\r\n        let items = [];\r\n        if (typeof nodeProps.items == \"string\") {\r\n          try {\r\n            items = JSON.parse(nodeProps.items);\r\n          } catch (err) {\r\n            // console.error(\"Unable to parse the items of the repeater. Please correct it and try again.\")\r\n          }\r\n        } else {\r\n          items = nodeProps.items || [];\r\n        }\r\n\r\n        if (items && items.length > 0) {\r\n          let currentNodeChildren = klona(node.children || []);\r\n          nodeChildren = [];\r\n          items.forEach((childItemContext, indx) => {\r\n            nodeChildren.push({\r\n              elementId: node.elementId + \"-\" + indx,\r\n              name: node.name + \"-\" + indx,\r\n              tag: \"srs-contentrenderer\",\r\n              props: {\r\n                overrides: {\r\n                  contents: currentNodeChildren,\r\n                  context: { ...context, ...childItemContext },\r\n                  designtime: designtime\r\n                },\r\n                styles: { minHeight: \"100%\", maxHeight: \"100%\", overflow: \"auto\" }\r\n              }\r\n            })\r\n          })\r\n          node.tag = \"mui-box\";\r\n          node.children = nodeChildren;\r\n        } else {\r\n          node.tag = \"mui-box\";\r\n          nodeChildren = [];\r\n          node.children = nodeChildren;\r\n        }\r\n      }\r\n    } else if (NodeTag == \"srs-widget\") {\r\n      let widgetFunctions = node.props?.widgetfunctions || {};\r\n      widgetFunctions = typeof widgetFunctions == \"string\" ? JSON.parse(widgetFunctions) : widgetFunctions;\r\n      if (widgetFunctions && !Array.isArray(widgetFunctions)) {\r\n        if (widgetFunctions && Object.keys(widgetFunctions).length > 0) {\r\n          window.__SRS__ = window.__SRS__ || {};\r\n          window.__SRS__.functions = window.__SRS__.functions || {};\r\n          let functionNames = Object.keys(widgetFunctions);\r\n          nodeProps.widgetfunctions = {};\r\n          functionNames.map((functionName) => {\r\n            nodeProps.widgetfunctions[functionName] = \"\";\r\n            let functionValue = widgetFunctions[functionName];\r\n              if (functionValue) {\r\n                if (typeof functionValue == \"string\") {\r\n                  window.__SRS__.functions[functionName] = new Function(\"try { return \" + functionValue + \" }catch(err) { console.error(err); }\")();\r\n                } else {\r\n                  window.__SRS__.functions[functionName] = functionValue;\r\n                }\r\n              }\r\n          });\r\n        }\r\n      }\r\n    } else if (NodeTag == \"mui-modal\") {\r\n      if (nodeProps.open == false) {\r\n        nodeProps.visible = false;\r\n      } else {\r\n        nodeProps.visible = true;\r\n      }\r\n    }\r\n\r\n    if (!nodeProps.hasOwnProperty(\"visible\") || nodeProps.visible + \"\" == \"true\") {\r\n      let childNodes = getNodesToRender(nodeChildren, context, clan, theme, currentRef, designtime, widgetId);\r\n      node.props = nodeProps;\r\n\r\n      result.push({ ...node, children: childNodes });\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst renderNodes = function (nodes, context, clan, theme, designtime, widgetId) {\r\n  let result = [];\r\n\r\n  nodes && nodes.forEach(node => {\r\n    let childNodes = renderNodes(node.children, context, clan, theme, designtime, widgetId);\r\n    let NodeTag = node.tag;\r\n    result.push(<NodeTag\r\n      key={node.elementId || node.id || node.name}\r\n      elementid={node.elementId || node.id || node.name}\r\n      style={node.props?.hoststyles || {}}\r\n      ref={el => {\r\n        if (!el) return;\r\n        el.context = context;\r\n        el.clan = clan;\r\n        el.theme = theme;\r\n        el.elementid = node.elementId || node.id || node.name;\r\n        el.widgetid = widgetId;\r\n        el.designtime = designtime;\r\n        Object.keys(node.props).forEach(nodePropKey => {\r\n          try {\r\n            if (typeof node.props[nodePropKey] == \"object\") {\r\n              if (Array.isArray(node.props[nodePropKey])) {\r\n                el[nodePropKey] = [...node.props[nodePropKey]];\r\n              } else {\r\n                el[nodePropKey] = { ...node.props[nodePropKey] };\r\n              }\r\n            } else {\r\n              el[nodePropKey] = node.props[nodePropKey];\r\n            }\r\n\r\n          } catch (err) {\r\n            // console.error(err);\r\n          }\r\n        });\r\n      }}>\r\n      {childNodes}\r\n    </NodeTag>);\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n  name: \"overrides\",\r\n  type: \"object\",\r\n  defaultValue: {}\r\n}, {\r\n  name: \"widgetid\",\r\n  type: \"string\",\r\n  defaultValue: \"\"\r\n}, {\r\n  name: \"styles\",\r\n  type: \"object\",\r\n  defaultValue: {}\r\n}]\r\n\r\nconst slots = [];\r\n\r\nexport default ContentRenderer;\r\nconst WrappedComponent = wrapper(React.forwardRef(ContentRenderer), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n"],"names":["ContentRenderer","props","ref","_props$overrides","_props$overrides2","_props$overrides3","_props$overrides4","_props$overrides5","_props$overrides6","_props$overrides7","_props$overrides8","_useState2","_slicedToArray","useState","widgetid","overrides","contents","clan","setContents","_useState4","context","setContext","_useState6","functions","setFunctions","_useState8","designtime","setDesigntime","_useState10","widgetId","_useState12","theme","setTheme","_useState14","componentsRegistered","setComponentsRegistered","_useState16","getUniqueComponentsToRegister","uniqueComponents","setUniqueComponents","_useState18","setComponentPropTypes","innerRef","useRef","_useState20","prevContents","setPrevContents","_useState22","processedNodes","setProcessedNodes","updateFunctions","functionData","Object","keys","length","window","__SRS__","map","functionName","functionValue","Function","prevContext","useEffect","_props$overrides9","_props$overrides10","_props$overrides11","hasOwnProperty","_toConsumableArray","result","getNodesToRender","klona","_props$overrides14","_props$overrides15","_props$overrides16","currentContents","_props$overrides12","_props$overrides13","_objectSpread","prevTheme","updatedUniqueComponents","isChanged","prevVal","register","then","componentPropTypeData","useMemo","_window$__SRS__","_styles","backgroundColor","minHeight","maxHeight","overflow","propStyles","styles","carbonStylesUrl","mode","React","style","className","concat","renderNodes","color","display","flexDirection","alignItems","fontSize","array1","array2","forEach","array1Item","indexOf","getNodeProps","node","propKeys","nodeContext","gridItemProps","propKey","nodePropKey","nodeVal","startsWith","endsWith","expression","slice","dynamicFunction","err","console","error","findElement","key","nestedContents","_step","_iterator","_createForOfIteratorHelper","s","n","done","element","value","elementId","children","found","e","f","findParentElement","stack","pop","i","childElement","push","nodes","currentRef","_window$__SRS__2","_window$__SRS__3","availableFunctions","dispatchEvent","helper","compress","compressToBase64","decompress","decompressFromBase64","clone","debounce","http","request","axios","get","post","put","patch","options","head","delete","getUri","NodeTag","tag","nodeProps","_node$props","nodePropKeys","filter","slotname","slot","nodeChildren","nextLevelNodeChildren","gridItemData","nodeChild","indx","gridItemSlotName","name","nodeGrandChild","_nextLevelNodeChildren","tabItems","tabItemProps","tabSlotName","items","JSON","parse","currentNodeChildren","childItemContext","_node$props2","widgetFunctions","widgetfunctions","Array","isArray","functionNames","open","visible","childNodes","_node$props3","id","elementid","hoststyles","el","_typeof","dispatchedEvents","type","defaultValue","slots","WrappedComponent","wrapper"],"sourceRoot":""}