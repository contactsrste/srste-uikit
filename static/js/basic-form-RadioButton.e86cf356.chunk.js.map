{"version":3,"file":"static/js/basic-form-RadioButton.e86cf356.chunk.js","mappings":"8UAKMA,EAAmB,CAACC,EAAAA,EAAAA,eAKpBC,EAAiB,SAAUC,EAAOC,GAEpC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,IAAW,CACVC,UAAWJ,EAAMK,MACjBC,KAAMN,EAAMM,KACZC,MAAOP,EAAMO,MACbC,GAAIR,EAAMS,UACVC,QAASV,EAAMU,QACfC,SAAU,SAACC,GACPZ,EAAMa,cAAcf,EAAAA,EAAAA,cAAwB,CAAEgB,QAAS,CAACP,MAAOK,EAAKJ,GAAIR,EAAMS,aAC9ET,EAAMe,SAASH,EACnB,GAGR,EAEMI,EAAM,WAGNhB,EAAQ,CAAC,CACXM,KAAM,QACNW,aAAc,QACdC,KAAM,UACP,CACCZ,KAAM,OACNW,aAAc,GACdC,KAAM,UACP,CACCZ,KAAM,QACNW,aAAc,GACdC,KAAM,UACP,CACCZ,KAAM,UACNW,cAAc,EACdC,KAAM,YAGJC,EAAQ,GAERC,GAAmBC,EAAAA,EAAAA,GAAQC,EAAAA,WAAiBvB,GAAiBC,E","sources":["components/basic/form/RadioButton.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport { RadioButton  } from \"carbon-components-react\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\n\r\nconst dispatchedEvents = [EventAPI.RADIO_CHECKED];\r\n\r\n/*\r\n    Example: <srs-radiobutton label=\"Label\" name=\"name\" value=\"\" checked=\"true\"/>\r\n*/\r\nconst SrsRadioButton = function (props, ref) {\r\n\r\n    return (\r\n      <RadioButton \r\n        labelText={props.label}\r\n        name={props.name}\r\n        value={props.value}\r\n        id={props.elementid}\r\n        checked={props.checked}\r\n        onChange={(val) => {\r\n            props.dispatchEvent(EventAPI.RADIO_CHECKED, { payload: {value: val, id: props.elementid} });\r\n            props.setValue(val);\r\n        }}\r\n        />\r\n    );\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n    name: \"label\",\r\n    defaultValue: \"Label\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"name\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"value\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"checked\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsRadioButton), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","EventAPI","SrsRadioButton","props","ref","_jsx","RadioButton","labelText","label","name","value","id","elementid","checked","onChange","val","dispatchEvent","payload","setValue","styles","defaultValue","type","slots","WrappedComponent","wrapper","React"],"sourceRoot":""}