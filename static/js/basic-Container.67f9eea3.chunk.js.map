{"version":3,"file":"static/js/basic-Container.67f9eea3.chunk.js","mappings":"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","sources":["components/basic/Container.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\nimport { Accordion, AccordionItem, AccordionSkeleton } from 'carbon-components-react';\r\n\r\nconst dispatchedEvents = [];\r\n\r\n/*\r\n    <srs-container title=\"Section 1\" collapse=\"true\" layout=\"flex\" direction=\"row\"/>\r\n*/\r\nconst Container = function (props, ref) {\r\n    const [isExpanded, setIsExpanded] = useState(true);\r\n    const handleToggle = () => setIsExpanded(!isExpanded);\r\n\r\n    const { layout, gap, justifyContent, alignItems, direction, wrap, alignContent, columns, rows, areas } = props;\r\n    let propStyles = props.styles || {};\r\n\r\n    function getFractionValue(columns) {\r\n        let numerator = 1;\r\n        let denominator = columns;\r\n        return numerator + 'fr '.repeat(columns - 1) + numerator + 'fr';\r\n    }\r\n\r\n    if (typeof propStyles == \"string\") {\r\n        propStyles = {};\r\n    }\r\n\r\n    let containerStyles = {\r\n        display: \"flex\",\r\n        gap,\r\n        justifyContent,\r\n        alignItems,\r\n        flexDirection: direction,\r\n        flexWrap: wrap,\r\n        alignContent,\r\n        ...propStyles\r\n    };\r\n\r\n    if (layout === \"grid\") {\r\n        containerStyles = {\r\n            ...containerStyles,\r\n            display: \"grid\",\r\n        };\r\n        if (columns) {\r\n            let columnVal = Number.isInteger(columns)? getFractionValue(parseInt(columns)): columns;\r\n            containerStyles = {\r\n                ...containerStyles,\r\n                gridTemplateColumns: columnVal\r\n            }\r\n        }\r\n        if (rows) {\r\n            let rowVal = Number.isInteger(rows)? getFractionValue(parseInt(rows)): rows;\r\n            containerStyles = {\r\n                ...containerStyles,\r\n                gridTemplateRows: rowVal\r\n            }\r\n        }\r\n        if (areas) {\r\n            containerStyles = {\r\n                ...containerStyles,\r\n                gridTemplateAreas: areas\r\n            }\r\n        }\r\n    }\r\n\r\n    return props.collapse ? (<Accordion>\r\n        <AccordionItem title={props.title} onHeadingClick={handleToggle} isExpanded={isExpanded}>\r\n            <div style={containerStyles}>\r\n                <slot />\r\n            </div>\r\n        </AccordionItem>\r\n    </Accordion>) : (<div style={containerStyles}>\r\n        <slot />\r\n    </div>);\r\n}\r\n\r\nconst styles = `\r\n    .cds--accordion__content {\r\n        padding-left: 1rem !important;\r\n        padding-right: 1rem !important;\r\n    }\r\n`\r\nconst props = [{\r\n    name: \"title\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"collapse\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}, {\r\n    name: \"layout\",\r\n    defaultValue: \"flex\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"gap\",\r\n    defaultValue: \"0px\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"justifyContent\",\r\n    defaultValue: \"center\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"alignItems\",\r\n    defaultValue: \"stretch\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"direction\",\r\n    defaultValue: \"column\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"wrap\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"alignContent\",\r\n    defaultValue: \"center\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"columns\",\r\n    defaultValue: \"1fr 1fr\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"rows\",\r\n    defaultValue: \"1fr\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"areas\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"styles\",\r\n    defaultValue: {},\r\n    type: \"object\"\r\n}];\r\n\r\nconst slots = [{ name: \"default\" }];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(Container), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","Container","props","ref","_useState","useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","layout","gap","justifyContent","alignItems","direction","wrap","alignContent","columns","rows","areas","propStyles","styles","getFractionValue","repeat","containerStyles","_objectSpread","display","flexDirection","flexWrap","columnVal","Number","isInteger","parseInt","gridTemplateColumns","rowVal","gridTemplateRows","gridTemplateAreas","collapse","_jsx","Accordion","children","AccordionItem","title","onHeadingClick","style","name","defaultValue","type","slots","WrappedComponent","wrapper","React"],"sourceRoot":""}