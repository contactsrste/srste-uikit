{"version":3,"file":"static/js/basic-form-Toggle.ab9f95ea.chunk.js","mappings":"yVAKMA,EAAmB,CAACC,EAAAA,EAAAA,gBAKpBC,EAAY,SAAUC,EAAOC,GAC/B,IAAAC,GAAoCC,EAAAA,EAAAA,UAASH,EAAMI,QAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA3DK,EAAUF,EAAA,GAAEG,EAAaH,EAAA,IAChCI,EAAAA,EAAAA,YAAU,WACND,EAAcR,EAAMI,QAAS,EACjC,GAAG,CAACJ,IAeJ,OACIU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC3BF,EAAAA,EAAAA,KAACG,EAAAA,IAAM,CAACC,GAAId,EAAMe,UAAWC,QAAST,EAAYU,OAAQjB,EAAMkB,MAAOC,OAAQnB,EAAMkB,MAAOE,SAf/E,SAACC,GAClBrB,EAAMsB,cAAcxB,EAAAA,EAAAA,eAAyB,CAAEyB,QAAS,CAAEnB,MAAOiB,EAAKP,GAAId,EAAMe,aAChFP,EAAca,GACdrB,EAAMwB,SAASH,GACZrB,EAAMyB,UACLzB,EAAMyB,SAASJ,EAEvB,KAWJ,EAEMK,EAAM,WAGN1B,EAAQ,CAAC,CACX2B,KAAM,QACNC,aAAc,eACdC,KAAM,UACP,CACCF,KAAM,QACNC,cAAc,EACdC,KAAM,YAGJC,EAAQ,GAERC,GAAmBC,EAAAA,EAAAA,GAAQC,EAAAA,WAAiBlC,GAAYC,E","sources":["components/basic/form/Toggle.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport { Toggle } from \"carbon-components-react\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\n\r\nconst dispatchedEvents = [EventAPI.TOGGLE_CHANGED];\r\n\r\n/*\r\n    Example: <srs-toggle status=\"error\" content=\"Please contact system administrator.\" prefix=\"error\"/>\r\n*/\r\nconst SrsToggle = function (props, ref) {\r\n    const [inputValue, setInputValue] = useState(props.value || false);\r\n    useEffect(() => {\r\n        setInputValue(props.value || false);\r\n    }, [props]);\r\n\r\n    const handleChange = (val) => {\r\n        props.dispatchEvent(EventAPI.TOGGLE_CHANGED, { payload: { value: val, id: props.elementid } });\r\n        setInputValue(val);\r\n        props.setValue(val);\r\n        if(props.onChange) {\r\n            props.onChange(val);\r\n        }\r\n    };\r\n\r\n    const handleClick = (evt, payload) => {\r\n        console.log(evt, payload);\r\n    };\r\n\r\n    return (\r\n        <div className=\"cds--form-item\">\r\n            <Toggle id={props.elementid} toggled={inputValue} labelA={props.label} labelB={props.label} onToggle={handleChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n    name: \"label\",\r\n    defaultValue: \"Toggle Label\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"value\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsToggle), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","EventAPI","SrsToggle","props","ref","_useState","useState","value","_useState2","_slicedToArray","inputValue","setInputValue","useEffect","_jsx","className","children","Toggle","id","elementid","toggled","labelA","label","labelB","onToggle","val","dispatchEvent","payload","setValue","onChange","styles","name","defaultValue","type","slots","WrappedComponent","wrapper","React"],"sourceRoot":""}