{"version":3,"file":"static/js/RichText.505a3c7f.chunk.js","mappings":"4JAAO,IAAMA,EAA6B,SAAUC,GAChD,IAAIC,EAAS,CAAC,EAWd,OAVeC,OAAOC,KAAKH,GAClBI,KAAI,SAACC,GACV,GAA4B,iBAAlBL,EAAMK,GACZ,IACIJ,EAAOI,GAAWC,KAAKC,MAAMP,EAAMK,GACvC,CAAC,MAAMG,GACHP,EAAOI,GAAWL,EAAMK,EAC5B,CAER,IACOJ,CACX,EAEaQ,EAAqB,WAC9B,MAAO,mCAAmCC,QAAQ,SAAS,SAASC,GAChE,IAAIC,EAAkB,GAAdC,KAAKC,SAAY,EACzB,OADqC,KAALH,EAAWC,EAAO,EAAFA,EAAM,GAC7CG,SAAS,GACtB,GACJ,C,4MCXMC,EAAW,SAAShB,EAAOiB,GAc7B,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAIC,GAASpB,EAAAA,EAAAA,GAA2BC,GACrCmB,EAAOC,gBACND,EAAOC,eAAehB,KAAI,SAACiB,GACvB,IAAIC,EAAgBD,EAAaC,cACvBL,EAAIM,QACYD,cAAcA,GACxBE,iBAAiBH,EAAaI,iBAAmB,SAAS,SAACC,GACvE1B,EAAM2B,cAAcN,EAAaO,gBAAiB,CAACC,QAASH,EAAEI,QAClE,GACJ,GAER,GAAG,CAAC9B,EAAM+B,YAAa/B,EAAMoB,kBACrBY,EAAAA,EAAAA,KAAA,OAAAC,UACFC,EAAAA,EAAAA,IAAiBlC,EAAM+B,cAEjC,EAEMI,EAAM,WAINnC,EAAQ,CAAC,CACXoC,KAAM,cACNC,aAAc,GACdC,KAAM,UACP,CACCF,KAAM,iBACNC,aAAc,GACdC,KAAM,WAGJC,GAAmBC,EAAAA,EAAAA,GAAQC,EAAAA,WAAiBzB,GAAWhB,E","sources":["commons/CommonUtils.js","components/RichText.js"],"sourcesContent":["export const processComponentProperties = function (props) {        \r\n    let result = {};\r\n    let propKeys = Object.keys(props);\r\n    propKeys.map((propKey) => {\r\n        if(typeof props[propKey] == \"string\") {\r\n            try {\r\n                result[propKey] = JSON.parse(props[propKey]);\r\n            }catch(err) {\r\n                result[propKey] = props[propKey];\r\n            } \r\n        }\r\n    });   \r\n    return result;\r\n}\r\n\r\nexport const getUniqueElementId = () => {\r\n    return 'xxxxyyyyxxxxyyyyxyxyyxyxxyxyyxyx'.replace(/[xy]/g, function(c) {\r\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n        return v.toString(16);\r\n    });\r\n}","// src/components/Home.js\r\nimport React, {useRef, useEffect} from \"react\";\r\nimport ReactHtmlParser from 'react-html-parser'; \r\nimport { processComponentProperties } from \"../commons/CommonUtils.js\";\r\nimport wrapper from \"../commons/WebComponentWrapper\";\r\n\r\n/*\r\n    <srs-richtext html_string=`<div/>` event_handlers=[{querySelector: \".element\", sourceEventName: \"INPUT#clicked\", targetEventName: \"RICHTEXT#clicked\"}, {...}]/>\r\n*/\r\nconst RichText = function(props, ref) {\r\n    useEffect(() => {\r\n        let uProps = processComponentProperties(props);\r\n        if(uProps.event_handlers) {\r\n            uProps.event_handlers.map((eventHandler) => {\r\n                let querySelector = eventHandler.querySelector;\r\n                let div = ref.current;\r\n                let matchedElements = div.querySelector(querySelector);\r\n                matchedElements.addEventListener(eventHandler.sourceEventName || \"click\", (e) => {\r\n                    props.dispatchEvent(eventHandler.targetEventName, {payload: e.target});\r\n                });\r\n            });\r\n        }\r\n    }, [props.html_string, props.event_handlers])\r\n    return (<div> \r\n        { ReactHtmlParser (props.html_string) }\r\n    </div>);\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\n\r\nconst props = [{\r\n    name: \"html_string\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"event_handlers\",\r\n    defaultValue: [],\r\n    type: \"object\"\r\n}]\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(RichText), props);\r\nexport {WrappedComponent, styles, props};"],"names":["processComponentProperties","props","result","Object","keys","map","propKey","JSON","parse","err","getUniqueElementId","replace","c","r","Math","random","toString","RichText","ref","useEffect","uProps","event_handlers","eventHandler","querySelector","current","addEventListener","sourceEventName","e","dispatchEvent","targetEventName","payload","target","html_string","_jsx","children","ReactHtmlParser","styles","name","defaultValue","type","WrappedComponent","wrapper","React"],"sourceRoot":""}