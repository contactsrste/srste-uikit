{"version":3,"file":"static/js/ui-studio-Element.3c72babe.chunk.js","mappings":";qKAAO,IAAMA,EAA6B,SAAUC,GAChD,IAAIC,EAAS,CAAC,EAWd,OAVeC,OAAOC,KAAKH,GAClBI,KAAI,SAACC,GACV,GAA4B,iBAAlBL,EAAMK,GACZ,IACIJ,EAAOI,GAAWC,KAAKC,MAAMP,EAAMK,GACvC,CAAC,MAAMG,GACHP,EAAOI,GAAWL,EAAMK,EAC5B,CAER,IACOJ,CACX,EAEaQ,EAAqB,WAC9B,MAAO,mCAAmCC,QAAQ,SAAS,SAASC,GAChE,IAAIC,EAAkB,GAAdC,KAAKC,SAAY,EACzB,OADqC,KAALH,EAAWC,EAAO,EAAFA,EAAM,GAC7CG,SAAS,GACtB,GACJ,sxCCfA,IAAMC,EAAmB,CAACC,EAAAA,EAAAA,kBAKpBC,EAAc,SAAUlB,EAAOmB,GACjC,IAAiFC,EAAAC,GAA/CC,EAAAA,EAAAA,UAAStB,EAAMuB,SAAWvB,EAAMwB,QAAS,GAAM,GAA1EC,EAASL,EAAA,GAAEM,EAAYN,EAAA,GAM9B,OAJAO,EAAAA,EAAAA,YAAU,WACND,EAAa1B,EAAMuB,SAAWvB,EAAMwB,QAAS,GAC7CxB,EAAM4B,SAAS5B,EAAMuB,SAAWvB,EAAMwB,QAAS,EACnD,GAAG,CAACxB,IACGA,EAAM6B,UACXC,EAAAA,cAACC,EAAAA,IAAQ,CACPC,UAAWhC,EAAMiC,MACjBV,QAASE,EACTS,GAAIlC,EAAM6B,UACVM,SAAU,SAACC,EAAKC,GACZX,EAAaW,EAAQd,SACrBvB,EAAM4B,SAASS,EAAQd,SACpBvB,EAAMmC,SACLnC,EAAMmC,SAASE,EAAQd,SAEvBvB,EAAMsC,cAAcrB,EAAAA,EAAAA,iBAA2B,CAACoB,QAAS,CAAEb,MAAOa,EAAQd,QAASW,GAAIlC,EAAM6B,YAErG,IAED,IACP,EAEMU,EAAM,WAGNvC,EAAQ,CAAC,CACXwC,KAAM,QACNC,aAAc,QACdC,KAAM,UACP,CACCF,KAAM,UACNC,cAAc,EACdC,KAAM,WACP,CACCF,KAAM,QACNC,cAAc,EACdC,KAAM,YAGJC,EAAQ,GAERC,GAAmBC,EAAAA,EAAAA,GAAQf,EAAAA,WAAiBZ,GAAclB,uxCCjDhE,IAAMgB,EAAmB,CAACC,EAAAA,EAAAA,kBAKpB6B,EAAc,SAAU9C,EAAOmB,GACjC,IAA+DC,EAAAC,GAA3BC,EAAAA,EAAAA,UAAStB,EAAMwB,OAAS,IAAG,GAAxDuB,EAAU3B,EAAA,GAAE4B,EAAa5B,EAAA,IAChCO,EAAAA,EAAAA,YAAU,WACNqB,EAAchD,EAAMwB,OACpBxB,EAAM4B,SAAS5B,EAAMwB,MACzB,GAAG,CAACxB,IAOJ,OACI8B,EAAAA,cAAA,OAAKmB,MANU,CACf,2BAA4B,SAC5B,6BAA8B,MAK1BnB,EAAAA,cAACoB,EAAAA,IAAQ,CACLhB,GAAIlC,EAAM6B,UACVG,UAAWhC,EAAMiC,MACjBkB,KAAMnD,EAAMmD,KACZC,KAAMpD,EAAMoD,KACZ5B,MAAOuB,EACPM,SAAUrD,EAAMqD,SAChBC,YAAatD,EAAMsD,YACnBC,SAAUvD,EAAMwD,SAChBC,OAAQ,SAACrB,GACe,IAADsB,EAAhB1D,EAAMmC,UACLnC,EAAMmC,UAAmB,QAAVuB,EAAAtB,EAAIuB,cAAM,IAAAD,OAAA,EAAVA,EAAYlC,QAAS,GAE5C,EACAW,SAAU,SAACC,GAAS,IAADwB,EAAAC,EAAAC,EACfd,GAAwB,QAAVY,EAAAxB,EAAIuB,cAAM,IAAAC,OAAA,EAAVA,EAAYpC,QAAS,IACnCxB,EAAMsC,cAAcrB,EAAAA,EAAAA,iBAA2B,CAAEoB,QAAS,CAACb,OAAiB,QAAVqC,EAAAzB,EAAIuB,cAAM,IAAAE,OAAA,EAAVA,EAAYrC,QAAS,GAAIU,GAAIlC,EAAM6B,aACrG7B,EAAM4B,UAAmB,QAAVkC,EAAA1B,EAAIuB,cAAM,IAAAG,OAAA,EAAVA,EAAYtC,QAAS,GACxC,IAGhB,EAEMe,EAAM,sRAYNvC,EAAQ,CAAC,CACXwC,KAAM,QACNC,aAAc,QACdC,KAAM,UACP,CACCF,KAAM,OACNC,aAAc,EACdC,KAAM,UACP,CACCF,KAAM,OACNC,aAAc,IACdC,KAAM,UACP,CACCF,KAAM,QACNC,aAAc,GACdC,KAAM,UACP,CACCF,KAAM,WACNC,cAAc,EACdC,KAAM,WACP,CACCF,KAAM,cACNC,aAAc,iBACdC,KAAM,UACP,CACCF,KAAM,WACNC,cAAc,EACdC,KAAM,YAGJC,EAAQ,GAERC,GAAmBC,EAAAA,EAAAA,GAAQf,EAAAA,WAAiBgB,GAAc9C,qlGC/EzD,IAAM+D,EAAU,SAAHC,GAC+I,IAADC,EAAAC,EADxIC,EAAWH,EAAXG,YAAaC,EAAKJ,EAALI,MAAOC,EAAQL,EAARK,SAAUC,EAAeN,EAAfM,gBAAiBC,EAAeP,EAAfO,gBAAiBC,EAAUR,EAAVQ,WAAYC,EAAcT,EAAdS,eAAgBC,EAAkBV,EAAlBU,mBAAoBC,EAAgBX,EAAhBW,iBACxIC,EAAiBZ,EAAjBY,kBAAmBC,EAAmBb,EAAnBa,oBAAqBC,EAAmBd,EAAnBc,oBAAqBC,EAAoBf,EAApBe,qBAAsBC,EAAehB,EAAfgB,gBAAiBC,EAAiBjB,EAAjBiB,kBAAmBC,EAAKlB,EAALkB,MAAoBC,GAAFnB,EAAXoB,YAA2BpB,EAAdmB,gBAC1F/D,EAAAC,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA1C+D,EAASjE,EAAA,GAAEkE,EAAYlE,EAAA,GACxBmE,EAAUpB,EACVqB,GAAkBC,EAAAA,EAAAA,QAAO,MAgB/B,IAAIF,EAAS,OAAO,KAEpB,IACIG,EAAYC,EAAqBJ,EAAS,CAAEF,UAAAA,EAAWjB,MAAAA,EAAOwB,eAD7C,CAAEtB,gBAAAA,EAAiBC,gBAAAA,EAAiBC,WAAAA,EAAYC,eAAAA,EAAgBC,mBAAAA,EAAoBC,iBAAAA,EAAkBC,kBAAAA,EAAmBC,oBAAAA,EAAqBC,oBAAAA,EAAqBC,qBAAAA,EAAsBC,gBAAAA,EAAiBa,kBAhBrM,WACxBP,GAAa,EACf,EAckPQ,WAb/N,SAACC,GAClBT,GAAa,GACbP,EAAqBX,EAAO2B,EAAMpC,OAAOqC,YAC3C,EAU8Pf,kBAAAA,EAAmBC,MAAAA,EAAOC,eAAAA,GACtMc,gBAAiBhB,GAAyB,OAAPM,QAAO,IAAPA,OAAO,EAAPA,EAAS7C,OAAQ,MACtI,OACEZ,EAAAA,cAAA,OAAKoE,UAAW7B,EAAW,wCAA0C,oBAAqB,aAAYD,EAAOjD,IAAKqE,GAChH1D,EAAAA,cAAA,MAAAqE,EAAA,CAAKC,WAAW,GARH,CAAC,EASE,CACdC,WAAY,SAACN,GAAK,OAAKtB,EAAesB,EAAO3B,EAAM,EACnDkC,YAAatB,EAAiBkB,UAAU,oBACxCpE,EAAAA,cAAA,OAAKoE,UAAU,WACZR,IAIa,oBAAjBH,EAAQ7C,KACNZ,EAAAA,cAAA,OAAKoE,UAAU,gBAAgBjD,MAAO,CAAEsD,OAAQlC,EAAW,IAAOmC,SAAS,IAAMpC,EAAMqC,WAAW,IAAK,MACtGC,QAAS,SAACtE,GACkBA,EAAIuB,OAAOgD,QAAQ,sBAAsBC,aAAa,eACrDxC,GACzBM,EAAmBa,EAEvB,GACAzD,EAAAA,cAAA,OAAKoE,UAAU,kBAAkBjD,MAAO,CAAEsD,OAAQC,SAAS,IAAMpC,EAAMqC,WAAW,IAAK,KAAO,IAC5F3E,EAAAA,cAAC+E,EAAAA,GAAK,CAACC,KAAK,KAAKJ,QAAS,kBAAM5B,EAAoBV,EAAM,EAAEnB,MAAO,CAAE8D,OAAQ,6BAA8BC,aAAc,MAAOC,gBAAiB,4BAA6BC,MAAO,mCACrLpF,EAAAA,cAACqF,EAAiB,CAACC,YAAa7B,EAAQ7C,KAAM2E,aAAc9B,EAAQvF,MAAOqE,SAAUA,EAAUM,iBAAkBA,EAAkBE,oBAAqBA,EAAqBH,mBAAoBA,EAAoBN,MAAOA,EAAOkD,SAAUrC,EAAmBsC,OAAO,EAAOrC,MAAOA,EAAOC,eAAgBA,IAC5SrD,EAAAA,cAACqF,EAAiB,CAACC,YAAY,GAAGC,aAAc,CAAC,EAAGG,cAAejC,EAASlB,SAAUA,EAAUM,iBAAkBA,EAAkBE,oBAAqBA,EAAqBH,mBAAoBA,EAAoBN,MAAOA,EAAOkD,SAAUrC,EAAmBsC,OAAO,EAAMrC,MAAOA,EAAOC,eAAgBA,EAAgBsC,aAAa,EAAOC,OAAwB,mBAAhBnC,EAAQ7C,KAA2BiF,aAA0B,QAAb1D,EAAAsB,EAAQvF,aAAK,IAAAiE,OAAA,EAAbA,EAAe2D,eAAgB,CAAC,IACxa9F,EAAAA,cAAC+F,EAAU,CAACrG,MAAO+D,EAASuC,iBAjCb,SAACC,GACxBlD,EAAoBT,EAAO2D,EAAmB/H,MAAO+H,EAAmBC,SAAUD,EAAmBrF,KACvG,EA+B0EgC,mBAAoBA,EAAoBQ,MAAOA,MAExGpD,EAAAA,cAAA,OAAKoE,UAAU,uBAAuBjD,MAAO,CAAEsD,OAAQlC,EAAW,IAAOmC,SAAS,IAAMpC,EAAMqC,WAAW,IAAK,KAAO,GAC9HC,QAAS,SAACtE,GACkBA,EAAIuB,OAAOgD,QAAQ,sBAAsBC,aAAa,eACrDxC,GACzBM,EAAmBa,EAEvB,GACAzD,EAAAA,cAACqF,EAAiB,CAACC,YAAY,GAAGC,aAAc,CAAC,EAAGG,cAAejC,EAASlB,SAAUA,EAAUM,iBAAkBA,EAAkBE,oBAAqBA,EAAqBH,mBAAoBA,EAAoBN,MAAOA,EAAOkD,SAAUrC,EAAmBsC,OAAO,EAAMrC,MAAOA,EAAOC,eAAgBA,EAAgBsC,aAAa,EAAOC,OAAwB,mBAAhBnC,EAAQ7C,KAA2BiF,aAA0B,QAAbzD,EAAAqB,EAAQvF,aAAK,IAAAkE,OAAA,EAAbA,EAAe0D,eAAgB,CAAC,KAKlb,EAEMC,EAAa,SAAHI,GAA8D,IAAzDzG,EAAKyG,EAALzG,MAAOsG,EAAgBG,EAAhBH,iBAAkBpD,EAAkBuD,EAAlBvD,mBAAoBQ,EAAK+C,EAAL/C,MACzBgD,EAAA7G,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAhC6G,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACiCG,EAAAhH,GAAfC,EAAAA,EAAAA,UAASE,GAAM,GAA9C2C,EAAWkE,EAAA,GAAEC,EAAcD,EAAA,GACiBE,EAAAlH,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA5CkH,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAO1BG,EAAe,SAACtG,GACpBgG,GAAQ,GACR1D,EAAmB,MACnBtC,GAAOA,EAAIuG,iBACb,EAYIC,GAAiBC,EAAAA,EAAAA,GAAWC,EAAAA,OAAXD,CAA8B/F,EAAAA,kBAEnD,OAAQhB,EAAAA,cAACiH,EAAAA,IAAO,CACdC,WAAW,EACXC,OAAO,EACPC,YAAY,EACZC,cAAc,EACdhB,KAAMA,EACNzB,QAAS,SAACtE,GAAG,OAAKA,EAAIuG,iBAAiB,EACvCS,QAAS,kBAAMhB,GAASD,EAAK,GAC7BrG,EAAAA,cAACuH,EAAAA,GAAI,CAACvC,KAAM,GAAIJ,QAAS,SAACtE,GAAG,OA/BX,SAACA,GACnBgG,GAAQ,GACRhG,GAAOA,EAAIuG,iBACb,CA4BoCW,CAAYlH,EAAI,EAAEa,MAAO,CAAE8D,OAAQ,6BAA8BC,aAAc,MAAOC,gBAAiB,4BAA6BC,MAAO,mCAC7KpF,EAAAA,cAACyH,EAAAA,IAAc,CAACrD,UAAWsC,EAAY,qCAAsC,mBAC3E1G,EAAAA,cAAA,OAAKoE,UAAU,2BACbpE,EAAAA,cAAA,OAAKoE,UAAU,0BAAyB,gBACxCpE,EAAAA,cAAC+E,EAAAA,GAAK,CAACC,KAAK,KACV7D,MAAO,CAAEuG,SAAU,WAAYC,MAAO,EAAGC,IAAK,EAAGxC,MAAO,iCACxDR,QAAS,SAACtE,GACRsG,IACAtG,EAAIuG,iBACN,IAEEH,EAAa1G,EAAAA,cAAC6H,EAAAA,GAAQ,CAAC7C,KAAK,KAC5B7D,MAAO,CAAEuG,SAAU,WAAYC,MAAO,GAAIC,IAAK,EAAGxC,MAAO,iCACzDR,QAAS,SAACtE,GACRqG,GAAc,SAACmB,GAAS,OAAK,CAAK,IAClCxH,EAAIuG,iBACN,IAAS7G,EAAAA,cAAC+H,EAAAA,GAAQ,CAAC/C,KAAK,KACxB7D,MAAO,CAAEuG,SAAU,WAAYC,MAAO,GAAIC,IAAK,EAAGxC,MAAO,iCACzDR,QAAS,SAACtE,GACRqG,GAAc,SAACmB,GAAS,OAAK,CAAI,IACjCxH,EAAIuG,iBACN,KAGN7G,EAAAA,cAAA,OAAKoE,UAAU,uBACbpE,EAAAA,cAACgI,EAAAA,IAAM,CAACC,KAAK,QAAQrD,QAAS,SAACtE,GA7Cb,IAAC4H,EA8CblC,IA9CakC,EA8CoB7F,GAAe,CAAC,GA7C9C8F,UAAYD,EAAaC,YAAaxJ,EAAAA,EAAAA,KAChDuJ,EAAahC,UACdgC,EAAahC,SAAS5H,KAAI,SAAC8J,GACzBA,EAAYD,UAAYC,EAAYD,YAAaxJ,EAAAA,EAAAA,IACnD,IAEKuJ,IAwCGtB,IACAtG,EAAIuG,iBACN,GAAG,UAET7G,EAAAA,cAAA,OAAKoE,UAAU,cACbpE,EAAAA,cAAC8G,EAAc,CAAC3G,MAAM,eAAeqB,YAAahD,KAAK6J,UAAU,CAAC,CAACzH,KAAM,gBAAiB1C,MAAO,CAACoK,MAAO,cAAepC,SAAU,KAAM,KAAM,GAC5I7E,KAAM,GACN3B,MAAOlB,KAAK6J,UAAUhG,GAAe,CAAC,EAAG,KAAM,GAC/ChC,SAAU,SAACX,GACT8G,GAAe,SAAC+B,GACd,IAAIpK,EAASoK,EACb,IACEpK,EAASK,KAAKC,MAAMiB,GAAS,GAC/B,CAAC,MAAMhB,GACL8J,QAAQC,MAAM,wDAChB,CACA,OAAOtK,CACT,GACF,EACAiF,MAAOA,MAIjB,EAEMS,EAAuB,SAACJ,EAAOiF,GAA6D,IAAzDnF,EAASmF,EAATnF,UAAWjB,EAAKoG,EAALpG,MAAOwB,EAAc4E,EAAd5E,eAAgBK,EAAeuE,EAAfvE,gBACjE3B,EAAwJsB,EAAxJtB,gBAAiBK,EAAuIiB,EAAvIjB,iBAAqCE,GAAkGe,EAArHhB,kBAAqHgB,EAAlGf,qBAAqBiB,EAA6EF,EAA7EE,WAAYpB,EAAiEkB,EAAjElB,mBAAoBO,EAA6CW,EAA7CX,kBAAmBC,EAA0BU,EAA1BV,MAAOC,EAAmBS,EAAnBT,eACzIsF,EAAoB,KACpBC,GAAiB,OAAPnF,QAAO,IAAPA,OAAO,EAAPA,EAAS7C,OAAQ,GAC/B,GAAoB,WAAhB6C,EAAQ7C,KACV+H,EAAoB3I,EAAAA,cAAA,OAAKoE,UAAU,qBAE9BX,EAAQyC,UAAuC,GAA3BzC,EAAQyC,SAAS2C,OAGvB,KAHsC7I,EAAAA,cAAAA,EAAAA,SAAA,KACnDA,EAAAA,cAAA,OAAKoE,UAAU,uBACbpE,EAAAA,cAACqF,EAAiB,CAACC,YAAa7B,EAAQ7C,KAAMiC,iBAAkBA,EAAkBE,oBAAqBA,EAAqBH,mBAAoBA,EAAoBN,MAAOA,EAAOkD,SAAUrC,EAAmBsC,OAAO,EAAMrC,MAAOA,EAAOC,eAAgBA,EAAgBsC,aAAa,MAG7R3F,EAAAA,cAAA,OAAKoE,UAAU,mBACbpE,EAAAA,cAAA,OAAKoE,UAAU,gBACZX,EAAQyC,SAAS5H,KAAI,SAACwK,EAAcC,GAAU,OAC7C/I,EAAAA,cAACiC,EAAOoC,EAAA,CAAC2E,IAAG,GAAAC,OAAK3G,EAAK,KAAA2G,OAAIF,GAAc1G,YAAayG,EAAcvG,SAAUuG,EAAaX,aAA6B,OAAf3F,QAAe,IAAfA,OAAe,EAAfA,EAAiB2F,YAAa,MAAOe,YAAW,GAAAD,OAAK3G,GAASA,MAAK,GAAA2G,OAAK3G,EAAK,KAAA2G,OAAIF,IAAkBjF,GAAkB,WAKhO,CACL,IAAIqF,EAAkB,GACtB,GAAIhF,EAAgBtD,OAASsD,EAAgBtD,MAAMgI,OAAS,EAAG,CAC7D,IAAIO,EAAcC,EAAOlF,EAAgBtD,OACrCyI,EAA0B,GAC1BC,EAAuB,GAEvB9F,EAAQyC,UACVzC,EAAQyC,SAAS5H,KAAI,SAACwK,GAQZ,IAADU,EAC6BC,EARX,mBAArBX,EAAalI,MAEbwI,EADEN,EAAa5K,MAAMwL,SACJN,EAAeO,QAAO,SAACC,GAAC,OAAKA,EAAElJ,MAAQoI,EAAa5K,MAAMwL,QAAQ,IAElEN,EAAeO,QAAO,SAACC,GAAC,MAAe,WAAVA,EAAElJ,IAAiB,IAEnE4I,EAAwBO,KAAKf,IAEP,QAAtBU,EAAIV,EAAa5K,aAAK,IAAAsL,GAAlBA,EAAoBE,SACtBH,EAAqBM,KAAuB,QAAnBJ,EAACX,EAAa5K,aAAK,IAAAuL,OAAA,EAAlBA,EAAoBC,UAE9CH,EAAqBM,KAAK,CAAEnJ,KAAM,WAGxC,IAGE4I,EAAwBT,OAAS,EACnCS,EAAwBhL,KAAI,SAACwK,EAAcC,GACzCI,EAAgBU,KAAK7J,EAAAA,cAACiC,EAAOoC,EAAA,CAAC2E,IAAG,GAAAC,OAAK3G,EAAK,KAAA2G,OAAIF,GAAc1G,YAAayG,EAAcvG,SAAUuG,EAAaX,cAA8B,OAAf3F,QAAe,IAAfA,OAAe,EAAfA,EAAiB2F,YAAa,MAAOe,YAAW,GAAAD,OAAK3G,GAASA,MAAK,GAAA2G,OAAK3G,EAAK,KAAA2G,OAAIF,IAAkBjF,IACnO,IAEAL,EAAQyC,UAAYzC,EAAQyC,SAAS5H,KAAI,SAACwK,EAAcC,GACtDI,EAAgBU,KAAK7J,EAAAA,cAACiC,EAAOoC,EAAA,CAAC2E,IAAG,GAAAC,OAAK3G,EAAK,KAAA2G,OAAIF,GAAc1G,YAAayG,EAAcvG,SAAUuG,EAAaX,aAA6B,OAAf3F,QAAe,IAAfA,OAAe,EAAfA,EAAiB2F,YAAa,MAAOe,YAAW,GAAAD,OAAK3G,GAASA,MAAK,GAAA2G,OAAK3G,EAAK,KAAA2G,OAAIF,IAAkBjF,IAClO,GAEJ,CAEA6E,EAAoB3I,EAAAA,cAAA,OAClBmB,MAAO,CAAE2I,MAAO,OAAQC,cAAe,OAEvCpI,OAAQqC,EACRgG,gBAAiBzG,EACjBqB,QAAS,SAACtE,GACkBA,EAAIuB,OAAOgD,QAAQ,sBAAsBC,aAAa,eACrDxC,GACzBM,EAAmBa,EAEvB,GACAzD,EAAAA,cAAC4I,EAAYnF,EAAQvF,MAClBiL,GAGP,CAEA,OAAOR,CACT,EAEMsB,EAAc,SAACpE,EAAaH,GAChC,GAAwB,aAApBG,EAAYnF,KACd,OAAOmF,EAAYnF,IAIvB,EAEa2E,EAAoB,SAAH6E,GACiD,IAADC,EAAAD,EAD1C5E,YAAAA,OAAW,IAAA6E,EAAG,GAAEA,EAAwB5H,GAAxB2H,EAAExE,cAA8BwE,EAAR3H,UAAUM,EAAgBqH,EAAhBrH,iBAAkBE,EAAmBmH,EAAnBnH,oBAAqBH,EAAkBsH,EAAlBtH,mBAAoBN,EAAK4H,EAAL5H,MAAOkD,EAAQ0E,EAAR1E,SAAQ4E,EAAAF,EAAE3E,aAAAA,OAAY,IAAA6E,EAAG,GAAEA,EAAAC,EAAAH,EACjLzE,MAAAA,OAAK,IAAA4E,GAAOA,EAAEjH,EAAK8G,EAAL9G,MAAOC,EAAc6G,EAAd7G,eAAgBsC,EAAWuE,EAAXvE,YAAaC,EAAMsE,EAANtE,OAAQC,EAAWqE,EAAXrE,YACnByE,EAAA/K,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAhC6G,EAAIiE,EAAA,GAAEhE,EAAOgE,EAAA,GACsCC,EAAAhL,GAAlCC,EAAAA,EAAAA,UAASiG,EAAQ,OAAS,SAAQ,GAAnD+E,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,EAAa9E,EAAS,CAAE8D,SAAUO,EAAYpE,IAAgC,CAAC,EACf8E,EAAApL,GAA5CC,EAAAA,EAAAA,UAAQoL,EAAAA,EAAC,CAAC,EAAIrF,GAAiBmF,IAAa,GAA/DxM,EAAKyM,EAAA,GAC2CE,GADjCF,EAAA,GACiCpL,GAAfC,EAAAA,EAAAA,UAAS8C,GAAM,IAAhDwI,EAAYD,EAAA,GACwDE,GADvCF,EAAA,GACuCtL,GAArBC,EAAAA,EAAAA,UAAS8F,GAAY,IAApE0F,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,IAElDlL,EAAAA,EAAAA,YAAU,WAER4K,EAAQhF,EAAQ,OAAS,QAC3B,GAAG,CAAClD,IAEJ,IA0CMqE,EAAe,WACnB6D,EAAQhF,EAAQ,OAAS,SACzBa,GAAQ,GACRjD,GAAe,GACfT,EAAmB,KACrB,EAEM4E,EAAc,SAAClH,GACnBgG,GAAQ,GACRjD,GAAe,GACf/C,GAAOA,EAAIuG,iBACb,EAEIqE,EAAgBlL,EAAAA,cAACmL,EAAgB,CAACC,UAvBpB,SAACxK,GACjBqK,EAAuBrK,GACvB6J,EAAQ,QACV,EAoB4D7D,aAAcA,IACtEyE,EAxDwB,SAACzK,GAAU,IAAD0K,EACpC,OAAO9F,GAAYA,EAAS5E,KAAsB,QAAd0K,EAAA9F,EAAS5E,UAAK,IAAA0K,OAAA,EAAdA,EAAgBpN,QAAc,EACpE,CAsDgBqN,CAAoBP,GAChCQ,EAAexL,EAAAA,cAACyL,EAAe,CAACjJ,gBAAiB,CAAE5B,KAAMoK,EAAqBU,KAAML,EAAWnN,MAAAA,EAAOkF,MAAAA,GACxGuI,YAtDgC,SAAC/K,EAAM0B,EAAO+I,GAC9C,OAAO,SAACnN,GAGN,GAFAoI,GAAQ,GACRmE,EAAQhF,EAAQ,OAAS,SACrBA,EACF,GAAIE,EACF9C,EAAiBjC,EAAM0B,EAAO,KAAM+I,EAAWnN,OAC1C,CACL,IAAM0N,EAAYtJ,EAAMuJ,YAAY,KAChCC,EAAaxJ,EAAMyJ,MAAM,EAAGH,GAC5BI,EAAW1J,EAAMyJ,MAAMH,EAAY,IACrB,GAAdA,GACFE,EAAa,GACbE,EAAW,KAEXA,EAAYtH,SAASsH,GAAY,EAAK,GAGxCnJ,EAAiBjC,EAAMkL,EAAYE,EAAUX,EAAWnN,EAC1D,MAEA6E,EAAoBT,EAAOpE,GAE7BmF,GAAe,GACfT,GAAsBA,EAAmB,KAC3C,CACF,CA4BeqJ,CAA0BjB,EAAqBF,EAAcO,GAC1EzE,aAAcA,EACdsF,gBAvBsB,WACtBjB,EAAuB,IACvBR,EAAQ,OACV,IAsBA,OAAQzK,EAAAA,cAACiH,EAAAA,IAAO,CACdC,WAAW,EACXC,OAAO,EACPC,YAAY,EACZC,cAAc,EACdhB,KAAMA,EACNzB,QAAS,SAACtE,GAAG,OAAKA,EAAIuG,iBAAiB,EACvCS,QAAS,kBAAMhB,GAASD,EAAK,GACpB,QAARmE,EACExK,EAAAA,cAACmM,EAAAA,GAAG,CAACnH,KAAM,GAAIJ,QAAS,SAACtE,GAAG,OAAKkH,EAAYlH,EAAI,EAAEa,MAAO,CAAE8D,OAAQ,6BAA8BC,aAAc,MAAOC,gBAAiB,4BAA6BC,MAAO,mCAC5KpF,EAAAA,cAACoM,EAAAA,GAAI,CAACpH,KAAM,GAAIJ,QAAS,SAACtE,GAAG,OAAKkH,EAAYlH,EAAI,EAAEa,MAAO,CAAE8D,OAAQ,6BAA8BC,aAAc,MAAOC,gBAAiB,4BAA6BC,MAAO,mCAGtK,QAARoF,EAAiBU,EAAeM,EAGtC,EAEMC,EAAkB,SAAHY,GAAyE,IAAnE7J,EAAe6J,EAAf7J,gBAAiBmJ,EAAWU,EAAXV,YAAa/E,EAAYyF,EAAZzF,aAAcsF,EAAeG,EAAfH,gBACQI,EAAA/M,GAArCC,EAAAA,EAAAA,UAASgD,EAAgBtE,OAAS,CAAC,GAAE,GAAtEqH,EAAY+G,EAAA,GAAEC,EAAeD,EAAA,GACeE,EAAAjN,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA5CkH,EAAU8F,EAAA,GAAE7F,EAAa6F,EAAA,GAEhC,GAAuB,MAAnBhK,EACF,OAAO,KAGT,IAAI6I,EAAShC,EAAO7G,EAAgBkJ,MAChCe,EAAgB,GAOpB,OANApB,EAAU/M,KAAI,SAACoO,GACiK,GAA1KD,EAAc9C,QAAO,SAACgD,GAAY,OAAKA,EAAajM,MAAQgM,EAAShM,MAAyB,WAAjBgM,EAAShM,MAAsC,SAAjBgM,EAAShM,MAAoC,QAAjBgM,EAAShM,IAAc,IAAEmI,QAClK4D,EAAc5C,KAAK6C,EAEvB,IAGE1M,EAAAA,cAACyH,EAAAA,IAAc,CAACrD,UAAWsC,EAAY,qCAAsC,mBAC3E1G,EAAAA,cAAA,OAAKoE,UAAU,2BACbpE,EAAAA,cAAA,OAAKoE,UAAU,0BAAyB,cACxCpE,EAAAA,cAAC+E,EAAAA,GAAK,CAACC,KAAK,KACV7D,MAAO,CAAEuG,SAAU,WAAYC,MAAO,EAAGC,IAAK,EAAGxC,MAAO,iCACxDR,QAAS,SAACtE,GACRsG,IACAtG,EAAIuG,iBACN,IAEEH,EAAa1G,EAAAA,cAAC6H,EAAAA,GAAQ,CAAC7C,KAAK,KAC5B7D,MAAO,CAAEuG,SAAU,WAAYC,MAAO,GAAIC,IAAK,EAAGxC,MAAO,iCACzDR,QAAS,SAACtE,GACRqG,GAAc,SAACmB,GAAS,OAAK,CAAK,IAClCxH,EAAIuG,iBACN,IAAS7G,EAAAA,cAAC+H,EAAAA,GAAQ,CAAC/C,KAAK,KACxB7D,MAAO,CAAEuG,SAAU,WAAYC,MAAO,GAAIC,IAAK,EAAGxC,MAAO,iCACzDR,QAAS,SAACtE,GACRqG,GAAc,SAACmB,GAAS,OAAK,CAAI,IACjCxH,EAAIuG,iBACN,KAGN7G,EAAAA,cAAA,OAAKoE,UAAU,oBACbpE,EAAAA,cAAA,OAAKoE,UAAU,4BACbpE,EAAAA,cAACgI,EAAAA,IAAM,CAACC,KAAK,QAAQrD,QAAS,SAACtE,GAC7BqL,EAAYpG,GACZjF,EAAIuG,iBACN,GAAG,SACH7G,EAAAA,cAACgI,EAAAA,IAAM,CAACC,KAAK,QAAQrD,QAAS,SAACtE,GAC7B4L,IACA5L,EAAIuG,iBACN,GAAG,aAEL7G,EAAAA,cAAA,SAAG,YAAUwC,EAAgB5B,MAE3B6L,EAAcnO,KAAI,SAACsO,GACjB,IAAI9F,EAAiB,KACrB,OAAQ8F,EAAoBhM,MAC1B,IAAK,SACL,IAAK,SAEH,OADAkG,GAAiBC,EAAAA,EAAAA,GAAW8F,EAAAA,OAAX9F,CAA2B+F,EAAAA,kBACpC9M,EAAAA,cAAC8G,EAAc,CACrB/G,UAAW6M,EAAoBlM,KAC/BP,MAAOyM,EAAoBlM,KAC3BhB,MAAO6F,EAAaqH,EAAoBlM,OAAS,GACjDL,SAAU,SAACX,GACT6M,GAAgB,SAACQ,GACf,OAAAnC,EAAAA,EAAA,GAAYmC,GAAS,GAAAC,EAAA,GAAGJ,EAAoBlM,KAAOhB,GACrD,GACF,EACA0D,MAAOlF,EAAAA,MAAAA,QAEX,IAAK,UACHsK,QAAQyE,IAAI,aAAc7N,EAAAA,kBAC1B0H,GAAiBC,EAAAA,EAAAA,GAAWmG,EAAAA,OAAXnG,CAA8B3H,EAAAA,kBAC/C,IAAI+N,GAAM5H,EAAa6H,eAAeR,EAAoBlM,OAAO6E,EAAaqH,EAAoBlM,MAClG,OAAQV,EAAAA,cAAC8G,EAAc,CACrB/G,UAAW6M,EAAoBlM,KAC/BP,MAAOyM,EAAoBlM,KAC3BhB,MAAOyN,EACP9M,SAAU,SAACX,GACT6M,GAAgB,SAACQ,GACf,OAAAnC,EAAAA,EAAA,GAAYmC,GAAS,GAAAC,EAAA,GAAGJ,EAAoBlM,KAAOhB,GACrD,GACF,EACA0D,MAAOlF,EAAAA,MAAAA,QAEX,IAAK,SAEH,OADA4I,GAAiBC,EAAAA,EAAAA,GAAWC,EAAAA,OAAXD,CAA8B/F,EAAAA,kBACvChB,EAAAA,cAAC8G,EAAc,CACrB3G,MAAOyM,EAAoBlM,KAC3Bc,YAAahD,KAAK6J,UAAU,CAACgF,QAAS,EAAGpI,OAAQ,mBAAoB,KAAM,GAC3EvF,MAAO6F,EAAaqH,EAAoBlM,OAAS,GACjDL,SAAU,SAACX,GACT6M,GAAgB,SAACQ,GACf,OAAAnC,EAAAA,EAAA,GAAYmC,GAAS,GAAAC,EAAA,GAAGJ,EAAoBlM,KAAOhB,GACrD,GACF,EACA0D,MAAOlF,EAAAA,MAAAA,QAGf,KAKV,EAEMiN,EAAmB,SAAHmC,GAAqC,IAA/BlC,EAASkC,EAATlC,UAAWxE,EAAY0G,EAAZ1G,aACc2G,EAAAhO,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA5CkH,EAAU6G,EAAA,GAAE5G,EAAa4G,EAAA,GACQC,EAAAjO,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAjCmK,EAAM6D,EAAA,GAAEC,EAASD,EAAA,GAEpBE,EAAetP,OAAOC,KAAKsP,EAAAA,GAC3BC,EAAiB,GACrBF,EAAapP,KAAI,SAACuP,GAChBD,EAAe/D,KAAK,CAACnJ,KAAMmN,EAAa1N,MAAOwN,EAAAA,EAAgBE,GAAa1N,MAAO2N,MAAOH,EAAAA,EAAgBE,GAAaC,OACzH,IAWA,IAAIC,GARJH,GADAA,EAAiBA,EAAeI,MAAK,SAACC,EAAGC,GAAC,OAAMD,EAAEH,MAAQI,EAAEJ,MAAS,GAAK,CAAC,KAC3CnE,QAAO,SAACwE,GACtC,OAAGxE,IACMwE,EAAGzN,KAAK0N,cAAcC,QAAQ1E,EAAOyE,gBAAkB,GAAKD,EAAGhO,MAAMiO,cAAcC,QAAQ1E,EAAOyE,gBAAkB,EAI/H,KAEiC9P,KAAI,SAACmF,GACpC,OAAQzD,EAAAA,cAACgI,EAAAA,IAAM,CAACC,KAAK,QAAQrD,QAAS,kBAAMwG,EAAU3H,EAAQ/C,KAAK,EAAE0D,UAAU,eAAeX,EAAQtD,MACxG,IAEA,OACEH,EAAAA,cAACyH,EAAAA,IAAc,CAACrD,UAAWsC,EAAY,qCAAsC,mBAC3E1G,EAAAA,cAAA,OAAKoE,UAAU,2BACbpE,EAAAA,cAAA,OAAKoE,UAAU,0BAAyB,qBACxCpE,EAAAA,cAAC+E,EAAAA,GAAK,CAACC,KAAK,KACV7D,MAAO,CAAEuG,SAAU,WAAYC,MAAO,EAAGC,IAAK,EAAGxC,MAAO,iCACxDR,QAAS,SAACtE,GACRsG,IACAtG,EAAIuG,iBACN,IAEEH,EAAa1G,EAAAA,cAAC6H,EAAAA,GAAQ,CAAC7C,KAAK,KAC5B7D,MAAO,CAAEuG,SAAU,WAAYC,MAAO,GAAIC,IAAK,EAAGxC,MAAO,iCACzDR,QAAS,SAACtE,GACRqG,GAAc,SAACmB,GAAS,OAAK,CAAK,IAClCxH,EAAIuG,iBACN,IAAS7G,EAAAA,cAAC+H,EAAAA,GAAQ,CAAC/C,KAAK,KACxB7D,MAAO,CAAEuG,SAAU,WAAYC,MAAO,GAAIC,IAAK,EAAGxC,MAAO,iCACzDR,QAAS,SAACtE,GACRqG,GAAc,SAACmB,GAAS,OAAK,CAAI,IACjCxH,EAAIuG,iBACN,KAGN7G,EAAAA,cAAA,OAAKoE,UAAU,gBACbpE,EAAAA,cAACsO,EAAAA,IAAM,CAACtJ,KAAK,KAAKrE,aAAa,GAAGT,UAAU,GAAGqO,qBAAqB,qBAAqBnO,GAAG,WAC1Fe,MAAO,CAAEiE,MAAO,mCAChB/E,SAAU,SAACC,GAETmN,GAAU,SAACe,GAAO,OAAKlO,EAAIuB,OAAOnC,KAAK,GACzC,KAEJM,EAAAA,cAAA,OAAKoE,UAAU,yBACX2J,GAIV,wlEC3fAU,EAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAvQ,OAAAwQ,UAAAC,EAAAF,EAAAvB,eAAA0B,EAAA1Q,OAAA0Q,gBAAA,SAAAC,EAAA/F,EAAAgG,GAAAD,EAAA/F,GAAAgG,EAAAtP,KAAA,EAAAuP,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAA/F,EAAAtJ,GAAA,OAAAtB,OAAA0Q,eAAAC,EAAA/F,EAAA,CAAAtJ,MAAAA,EAAAgQ,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAA/F,EAAA,KAAAyG,EAAA,aAAA/Q,GAAA+Q,EAAA,SAAAV,EAAA/F,EAAAtJ,GAAA,OAAAqP,EAAA/F,GAAAtJ,CAAA,WAAAmQ,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAnB,qBAAAuB,EAAAJ,EAAAI,EAAAC,EAAAhS,OAAAiS,OAAAH,EAAAtB,WAAA0B,EAAA,IAAAC,EAAAN,GAAA,WAAAnB,EAAAsB,EAAA,WAAA1Q,MAAA8Q,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA3B,EAAA4B,GAAA,WAAA/P,KAAA,SAAA+P,IAAAD,EAAAE,KAAA7B,EAAA4B,GAAA,OAAAjS,GAAA,OAAAkC,KAAA,QAAA+P,IAAAjS,EAAA,EAAAgQ,EAAAmB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAvB,EAAAuB,EAAA7B,GAAA,8BAAA8B,EAAA7S,OAAA8S,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAxC,GAAAE,EAAA+B,KAAAO,EAAAhC,KAAA6B,EAAAG,GAAA,IAAAE,EAAAN,EAAAnC,UAAAuB,EAAAvB,UAAAxQ,OAAAiS,OAAAW,GAAA,SAAAM,EAAA1C,GAAA,0BAAA2C,SAAA,SAAAC,GAAA/B,EAAAb,EAAA4C,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,EAAA,gBAAAe,EAAAtB,EAAAuB,GAAA,SAAAC,EAAAJ,EAAAb,EAAAkB,EAAAC,GAAA,IAAAC,EAAAtB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAoB,EAAAnR,KAAA,KAAAzC,EAAA4T,EAAApB,IAAAjR,EAAAvB,EAAAuB,MAAA,OAAAA,GAAA,UAAAsS,EAAAtS,IAAAmP,EAAA+B,KAAAlR,EAAA,WAAAiS,EAAAE,QAAAnS,EAAAuS,SAAAC,MAAA,SAAAxS,GAAAkS,EAAA,OAAAlS,EAAAmS,EAAAC,EAAA,aAAApT,GAAAkT,EAAA,QAAAlT,EAAAmT,EAAAC,EAAA,IAAAH,EAAAE,QAAAnS,GAAAwS,MAAA,SAAAC,GAAAhU,EAAAuB,MAAAyS,EAAAN,EAAA1T,EAAA,aAAAsK,GAAA,OAAAmJ,EAAA,QAAAnJ,EAAAoJ,EAAAC,EAAA,IAAAA,EAAAC,EAAApB,IAAA,KAAAyB,EAAAtD,EAAA,gBAAApP,MAAA,SAAA8R,EAAAb,GAAA,SAAA0B,IAAA,WAAAV,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAb,EAAAkB,EAAAC,EAAA,WAAAM,EAAAA,EAAAA,EAAAF,KAAAG,EAAAA,GAAAA,GAAA,aAAA7B,EAAAV,EAAAE,EAAAM,GAAA,IAAAgC,EAAA,iCAAAd,EAAAb,GAAA,iBAAA2B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAd,EAAA,MAAAb,EAAA,OAAA6B,GAAA,KAAAlC,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,KAAA8B,EAAAnC,EAAAmC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAnC,GAAA,GAAAoC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,CAAA,cAAApC,EAAAkB,OAAAlB,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAc,EAAA,MAAAA,EAAA,YAAAhC,EAAAK,IAAAL,EAAAwC,kBAAAxC,EAAAK,IAAA,gBAAAL,EAAAkB,QAAAlB,EAAAyC,OAAA,SAAAzC,EAAAK,KAAA2B,EAAA,gBAAAP,EAAAtB,EAAAX,EAAAE,EAAAM,GAAA,cAAAyB,EAAAnR,KAAA,IAAA0R,EAAAhC,EAAA0C,KAAA,6BAAAjB,EAAApB,MAAAE,EAAA,gBAAAnR,MAAAqS,EAAApB,IAAAqC,KAAA1C,EAAA0C,KAAA,WAAAjB,EAAAnR,OAAA0R,EAAA,YAAAhC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAA,YAAAgC,EAAAF,EAAAnC,GAAA,IAAA2C,EAAA3C,EAAAkB,OAAAA,EAAAiB,EAAArD,SAAA6D,GAAA,QAAAC,IAAA1B,EAAA,OAAAlB,EAAAmC,SAAA,eAAAQ,GAAAR,EAAArD,SAAA+D,SAAA7C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAAuC,EAAAP,EAAAF,EAAAnC,GAAA,UAAAA,EAAAkB,SAAA,WAAAyB,IAAA3C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAyC,UAAA,oCAAAH,EAAA,aAAApC,EAAA,IAAAkB,EAAAtB,EAAAe,EAAAiB,EAAArD,SAAAkB,EAAAK,KAAA,aAAAoB,EAAAnR,KAAA,OAAA0P,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAAL,EAAAmC,SAAA,KAAA5B,EAAA,IAAAwC,EAAAtB,EAAApB,IAAA,OAAA0C,EAAAA,EAAAL,MAAA1C,EAAAmC,EAAAa,YAAAD,EAAA3T,MAAA4Q,EAAAiD,KAAAd,EAAAe,QAAA,WAAAlD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAuC,GAAA5C,EAAAmC,SAAA,KAAA5B,GAAAwC,GAAA/C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAyC,UAAA,oCAAA9C,EAAAmC,SAAA,KAAA5B,EAAA,UAAA4C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAnK,KAAA8J,EAAA,UAAAM,EAAAN,GAAA,IAAA5B,EAAA4B,EAAAO,YAAA,GAAAnC,EAAAnR,KAAA,gBAAAmR,EAAApB,IAAAgD,EAAAO,WAAAnC,CAAA,UAAAxB,EAAAN,GAAA,KAAA+D,WAAA,EAAAJ,OAAA,SAAA3D,EAAAsB,QAAAkC,EAAA,WAAAU,OAAA,YAAA/C,EAAAgD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAjF,GAAA,GAAAkF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAAvL,QAAA,KAAA0L,GAAA,EAAAhB,EAAA,SAAAA,IAAA,OAAAgB,EAAAH,EAAAvL,QAAA,GAAAgG,EAAA+B,KAAAwD,EAAAG,GAAA,OAAAhB,EAAA7T,MAAA0U,EAAAG,GAAAhB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA7T,WAAAwT,EAAAK,EAAAP,MAAA,EAAAO,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAf,EAAA,UAAAA,IAAA,OAAA9S,WAAAwT,EAAAF,MAAA,UAAAlC,EAAAlC,UAAAmC,EAAAjC,EAAAuC,EAAA,eAAA3R,MAAAqR,EAAApB,cAAA,IAAAb,EAAAiC,EAAA,eAAArR,MAAAoR,EAAAnB,cAAA,IAAAmB,EAAA0D,YAAA/E,EAAAsB,EAAAxB,EAAA,qBAAAb,EAAA+F,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAA7D,GAAA,uBAAA6D,EAAAH,aAAAG,EAAAjU,MAAA,EAAAgO,EAAAmG,KAAA,SAAAH,GAAA,OAAAtW,OAAA0W,eAAA1W,OAAA0W,eAAAJ,EAAA3D,IAAA2D,EAAAK,UAAAhE,EAAAtB,EAAAiF,EAAAnF,EAAA,sBAAAmF,EAAA9F,UAAAxQ,OAAAiS,OAAAgB,GAAAqD,CAAA,EAAAhG,EAAAsG,MAAA,SAAArE,GAAA,OAAAsB,QAAAtB,EAAA,EAAAW,EAAAI,EAAA9C,WAAAa,EAAAiC,EAAA9C,UAAAS,GAAA,0BAAAX,EAAAgD,cAAAA,EAAAhD,EAAAuG,MAAA,SAAAnF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,IAAAA,EAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAAjD,EAAA+F,oBAAA1E,GAAAoF,EAAAA,EAAA5B,OAAArB,MAAA,SAAA/T,GAAA,OAAAA,EAAA6U,KAAA7U,EAAAuB,MAAAyV,EAAA5B,MAAA,KAAAjC,EAAAD,GAAA5B,EAAA4B,EAAA9B,EAAA,aAAAE,EAAA4B,EAAAlC,GAAA,0BAAAM,EAAA4B,EAAA,qDAAA3C,EAAArQ,KAAA,SAAA8O,GAAA,IAAAiI,EAAAhX,OAAA+O,GAAA9O,EAAA,WAAA2K,KAAAoM,EAAA/W,EAAAwL,KAAAb,GAAA,OAAA3K,EAAAgX,UAAA,SAAA9B,IAAA,KAAAlV,EAAAwK,QAAA,KAAAG,EAAA3K,EAAAiX,MAAA,GAAAtM,KAAAoM,EAAA,OAAA7B,EAAA7T,MAAAsJ,EAAAuK,EAAAP,MAAA,EAAAO,CAAA,QAAAA,EAAAP,MAAA,EAAAO,CAAA,GAAA7E,EAAA0C,OAAAA,EAAAb,EAAA3B,UAAA,CAAAgG,YAAArE,EAAA4D,MAAA,SAAAoB,GAAA,QAAAC,KAAA,OAAAjC,KAAA,OAAAX,KAAA,KAAAC,WAAAK,EAAA,KAAAF,MAAA,OAAAP,SAAA,UAAAjB,OAAA,YAAAb,SAAAuC,EAAA,KAAAc,WAAAzC,QAAA0C,IAAAsB,EAAA,QAAA7U,KAAA,WAAAA,EAAA+U,OAAA,IAAA5G,EAAA+B,KAAA,KAAAlQ,KAAA4T,OAAA5T,EAAAqL,MAAA,WAAArL,QAAAwS,EAAA,EAAAwC,KAAA,gBAAA1C,MAAA,MAAA2C,EAAA,KAAA3B,WAAA,GAAAE,WAAA,aAAAyB,EAAA/U,KAAA,MAAA+U,EAAAhF,IAAA,YAAAiF,IAAA,EAAA9C,kBAAA,SAAA+C,GAAA,QAAA7C,KAAA,MAAA6C,EAAA,IAAAvF,EAAA,cAAAwF,EAAAC,EAAAC,GAAA,OAAAjE,EAAAnR,KAAA,QAAAmR,EAAApB,IAAAkF,EAAAvF,EAAAiD,KAAAwC,EAAAC,IAAA1F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAuC,KAAA8C,CAAA,SAAAzB,EAAA,KAAAP,WAAAnL,OAAA,EAAA0L,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAAxC,EAAA4B,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAkC,EAAA,UAAAnC,EAAAC,QAAA,KAAA4B,KAAA,KAAAS,EAAApH,EAAA+B,KAAA+C,EAAA,YAAAuC,EAAArH,EAAA+B,KAAA+C,EAAA,iBAAAsC,GAAAC,EAAA,SAAAV,KAAA7B,EAAAE,SAAA,OAAAiC,EAAAnC,EAAAE,UAAA,WAAA2B,KAAA7B,EAAAG,WAAA,OAAAgC,EAAAnC,EAAAG,WAAA,SAAAmC,GAAA,QAAAT,KAAA7B,EAAAE,SAAA,OAAAiC,EAAAnC,EAAAE,UAAA,YAAAqC,EAAA,UAAA3D,MAAA,kDAAAiD,KAAA7B,EAAAG,WAAA,OAAAgC,EAAAnC,EAAAG,WAAA,KAAAf,OAAA,SAAAnS,EAAA+P,GAAA,QAAA4D,EAAA,KAAAP,WAAAnL,OAAA,EAAA0L,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,QAAA,KAAA4B,MAAA3G,EAAA+B,KAAA+C,EAAA,oBAAA6B,KAAA7B,EAAAG,WAAA,KAAAqC,EAAAxC,EAAA,OAAAwC,IAAA,UAAAvV,GAAA,aAAAA,IAAAuV,EAAAvC,QAAAjD,GAAAA,GAAAwF,EAAArC,aAAAqC,EAAA,UAAApE,EAAAoE,EAAAA,EAAAjC,WAAA,UAAAnC,EAAAnR,KAAAA,EAAAmR,EAAApB,IAAAA,EAAAwF,GAAA,KAAA3E,OAAA,YAAA+B,KAAA4C,EAAArC,WAAAjD,GAAA,KAAAuF,SAAArE,EAAA,EAAAqE,SAAA,SAAArE,EAAAgC,GAAA,aAAAhC,EAAAnR,KAAA,MAAAmR,EAAApB,IAAA,gBAAAoB,EAAAnR,MAAA,aAAAmR,EAAAnR,KAAA,KAAA2S,KAAAxB,EAAApB,IAAA,WAAAoB,EAAAnR,MAAA,KAAAgV,KAAA,KAAAjF,IAAAoB,EAAApB,IAAA,KAAAa,OAAA,cAAA+B,KAAA,kBAAAxB,EAAAnR,MAAAmT,IAAA,KAAAR,KAAAQ,GAAAlD,CAAA,EAAAwF,OAAA,SAAAvC,GAAA,QAAAS,EAAA,KAAAP,WAAAnL,OAAA,EAAA0L,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAG,aAAAA,EAAA,YAAAsC,SAAAzC,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAA9C,CAAA,GAAAyF,MAAA,SAAA1C,GAAA,QAAAW,EAAA,KAAAP,WAAAnL,OAAA,EAAA0L,GAAA,IAAAA,EAAA,KAAAZ,EAAA,KAAAK,WAAAO,GAAA,GAAAZ,EAAAC,SAAAA,EAAA,KAAA7B,EAAA4B,EAAAO,WAAA,aAAAnC,EAAAnR,KAAA,KAAA2V,EAAAxE,EAAApB,IAAAsD,EAAAN,EAAA,QAAA4C,CAAA,YAAAhE,MAAA,0BAAAiE,cAAA,SAAApC,EAAAd,EAAAE,GAAA,YAAAf,SAAA,CAAArD,SAAAgC,EAAAgD,GAAAd,WAAAA,EAAAE,QAAAA,GAAA,cAAAhC,SAAA,KAAAb,SAAAuC,GAAArC,CAAA,GAAAnC,CAAA,UAAA+H,EAAAC,EAAA7E,EAAAC,EAAA6E,EAAAC,EAAA5N,EAAA2H,GAAA,QAAA0C,EAAAqD,EAAA1N,GAAA2H,GAAAjR,EAAA2T,EAAA3T,KAAA,OAAA+I,GAAA,YAAAqJ,EAAArJ,EAAA,CAAA4K,EAAAL,KAAAnB,EAAAnS,GAAAwV,QAAArD,QAAAnS,GAAAwS,KAAAyE,EAAAC,EAAA,UAAAC,EAAAnG,GAAA,sBAAAV,EAAA,KAAA8G,EAAAC,UAAA,WAAA7B,SAAA,SAAArD,EAAAC,GAAA,IAAA4E,EAAAhG,EAAAsG,MAAAhH,EAAA8G,GAAA,SAAAH,EAAAjX,GAAA+W,EAAAC,EAAA7E,EAAAC,EAAA6E,EAAAC,EAAA,OAAAlX,EAAA,UAAAkX,EAAAlY,GAAA+X,EAAAC,EAAA7E,EAAAC,EAAA6E,EAAAC,EAAA,QAAAlY,EAAA,CAAAiY,OAAAzD,EAAA,cAAA3T,EAAA0X,EAAA1C,GAAA,gBAAA0C,GAAA,GAAAC,MAAAC,QAAAF,GAAA,OAAAA,CAAA,CAAAG,CAAAH,IAAA,SAAAA,EAAA1C,GAAA,IAAA8C,EAAA,MAAAJ,EAAA,yBAAA/H,QAAA+H,EAAA/H,OAAAE,WAAA6H,EAAA,uBAAAI,EAAA,KAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,GAAAC,GAAA,EAAAC,GAAA,SAAAJ,GAAAH,EAAAA,EAAAzG,KAAAqG,IAAA1D,KAAA,IAAAgB,EAAA,IAAAnW,OAAAiZ,KAAAA,EAAA,OAAAM,GAAA,cAAAA,GAAAL,EAAAE,EAAA5G,KAAAyG,IAAArE,QAAA0E,EAAA7N,KAAAyN,EAAA5X,OAAAgY,EAAA7O,SAAA0L,GAAAoD,GAAA,UAAAjZ,GAAAkZ,GAAA,EAAAL,EAAA7Y,CAAA,iBAAAiZ,GAAA,MAAAN,EAAAlE,SAAAsE,EAAAJ,EAAAlE,SAAA/U,OAAAqZ,KAAAA,GAAA,kBAAAG,EAAA,MAAAL,CAAA,SAAAG,CAAA,EAAAG,CAAAZ,EAAA1C,IAAAuD,EAAAb,EAAA1C,IAAA,qBAAAnB,UAAA,6IAAA2E,EAAA,UAAAD,EAAAE,EAAAC,GAAA,GAAAD,EAAA,sBAAAA,EAAA,OAAAE,EAAAF,EAAAC,GAAA,IAAAE,EAAA/Z,OAAAwQ,UAAA3P,SAAA2R,KAAAoH,GAAAjM,MAAA,uBAAAoM,GAAAH,EAAApD,cAAAuD,EAAAH,EAAApD,YAAAlU,MAAA,QAAAyX,GAAA,QAAAA,EAAAjB,MAAAkB,KAAAJ,GAAA,cAAAG,GAAA,2CAAAE,KAAAF,GAAAD,EAAAF,EAAAC,QAAA,YAAAC,EAAAjB,EAAAqB,IAAA,MAAAA,GAAAA,EAAArB,EAAApO,UAAAyP,EAAArB,EAAApO,QAAA,QAAA0L,EAAA,EAAAgE,EAAA,IAAArB,MAAAoB,GAAA/D,EAAA+D,EAAA/D,IAAAgE,EAAAhE,GAAA0C,EAAA1C,GAAA,OAAAgE,CAAA,CAQA,IAAMrZ,EAAmB,GAazB,SAASsZ,EAAYvU,IAXrB,SAA8BA,GACtBA,EAAMwU,UACNra,OAAO0Q,eAAe7K,EAAO,SAAU,CACnCvE,MAAOuE,EAAMyU,eAAe,GAC5B9I,UAAU,EACVF,YAAY,EACZC,cAAc,GAG1B,CAGIgJ,CAAqB1U,EACzB,CA2BA,IAAM2U,EAAc,SAAU1a,EAAOmB,GACjC,IAAuDC,EAAAC,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAhDqZ,EAAYvZ,EAAA,GAAEwZ,EAAexZ,EAAA,GACwB8G,EAAA7G,GAAdC,EAAAA,EAAAA,UAAS,MAAK,GAArDgD,EAAe4D,EAAA,GAAE2S,EAAkB3S,EAAA,GAC6BG,EAAAhH,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAhEwZ,EAAoBzS,EAAA,GAAE0S,EAAuB1S,EAAA,GACUE,EAAAlH,GAAZC,EAAAA,EAAAA,UAAS,CAAC,GAAE,GAAvD2D,EAAiBsD,EAAA,GAAEyS,EAAoBzS,EAAA,GACM6D,EAAA/K,GAAdC,EAAAA,EAAAA,WAAS,GAAK,GAA7C8D,EAAWgH,EAAA,GAAEjH,EAAciH,EAAA,GAE9B6O,EAAkB,KA2BpB5O,EAAAhL,GAzB8BC,EAAAA,EAAAA,UAAS,CACrC,CAAE2I,WAAWxJ,EAAAA,EAAAA,KAAsBiC,KAAM,YAAa1C,MAAO,CAAEiC,MAAO,UACtE,CACIgI,WAAWxJ,EAAAA,EAAAA,KACXiC,KAAM,gBACN1C,MAAO,CACHuC,OAAQ,CACJwE,OAAQ,gBACRoI,QAAS,KAGjBnH,SAAU,CACN,CACIiC,WAAWxJ,EAAAA,EAAAA,KACXiC,KAAM,YAAa1C,MAAO,CACtBsD,YAAa,4BAGrB,CACI2G,WAAWxJ,EAAAA,EAAAA,KACXiC,KAAM,YAAa1C,MAAO,CACtBwB,MAAO,iCAIzB,GAzBK0Z,EAAQ7O,EAAA,GAAE8O,EAAW9O,EAAA,IA2B5B1K,EAAAA,EAAAA,YAAU,WA7Dd,IAAsBsO,EAsEd,OARK0K,KA9DS1K,EAgEG9O,EAAIia,WA9DzBnL,EAAGoL,iBAAiB,UAAWf,GAC/BrK,EAAGoL,iBAAiB,YAAaf,GACjCrK,EAAGoL,iBAAiB,YAAaf,GACjCrK,EAAGoL,iBAAiB,aAAcf,GAClCrK,EAAGoL,iBAAiB,aAAcf,GAElCrK,EAAGoL,iBAAiB,aAAcf,GAClCrK,EAAGoL,iBAAiB,YAAaf,GACjCrK,EAAGoL,iBAAiB,WAAYf,IAuDxBM,GAAgB,GAChBU,IAAwBtH,MAAK,kBAAM+G,GAAwB,EAAK,KAI7D,YA1Df,SAAyB9K,GAChBA,IACLA,EAAGsL,oBAAoB,UAAWjB,GAClCrK,EAAGsL,oBAAoB,YAAajB,GACpCrK,EAAGsL,oBAAoB,YAAajB,GACpCrK,EAAGsL,oBAAoB,aAAcjB,GACrCrK,EAAGsL,oBAAoB,aAAcjB,GAErCrK,EAAGsL,oBAAoB,aAAcjB,GACrCrK,EAAGsL,oBAAoB,YAAajB,GACpCrK,EAAGsL,oBAAoB,WAAYjB,GACvC,CAgDYkB,CAAgBra,EAAIia,QACxB,CACJ,GAAG,CAACpb,EAAM6B,YAEV,IAAMyZ,EAAqB,eAAAtX,EAAA2U,EAAApI,IAAAoG,MAAG,SAAA8E,IAAA,OAAAlL,IAAAoB,MAAA,SAAA+J,GAAA,cAAAA,EAAApE,KAAAoE,EAAArG,MAAA,cAAAqG,EAAArG,KAAA,EACpBsG,IAAyB,KAAD,SAAAD,EAAA7G,OAAA,UACvB+G,EAAAA,EAAAA,GAAS1b,OAAOC,KAAKsP,EAAAA,KAAiB,wBAAAiM,EAAAlE,OAAA,GAAAiE,EAAA,KAChD,kBAH0B,OAAAzX,EAAA8U,MAAA,KAAAD,UAAA,KAKrB8C,EAAsB,eAAA1T,EAAA0Q,EAAApI,IAAAoG,MAAG,SAAAkF,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/L,IAAAoB,MAAA,SAAA4K,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAlH,MAAA,OACvByG,EAAiB5b,OAAOC,KAAKsP,EAAAA,GAC7BsM,EAAqB,CAAC,EAACQ,EAAAC,GAAAjM,IAAApQ,KACG2b,GAAc,WAAAS,EAAAE,GAAAF,EAAAC,MAAA1H,KAAC,CAADyH,EAAAlH,KAAA,SACa,OADhD2G,EAAiBO,EAAAE,GAAAjb,MAClBya,EAAgBH,EAAeE,GAAkBO,EAAAlH,KAAA,EAC3B,SAAO,KAADtK,OAAqB0E,EAAAA,EAAgBwM,GAAeS,YAAa,KAAD,EAA5FR,EAAaK,EAAA7H,KACbyH,EAAaD,EAAsB,OACnCE,EAAYF,EAAqB,MACjCG,EAAaH,EAAgC,iBAC7CI,EAAYJ,EAAqB,MACrCH,EAAmBE,GAAiB,CAAE1Z,OAAQ4Z,EAAYnc,MAAOoc,EAAWpb,iBAAkBqb,EAAY1Z,MAAO2Z,GAAYC,EAAAlH,KAAA,gBAEjI2F,EAAqBe,GAAoB,yBAAAQ,EAAA/E,OAAA,GAAAqE,EAAA,KAC5C,kBAb2B,OAAA5T,EAAA6Q,MAAA,KAAAD,UAAA,KAsBtB8D,EAAa,SAACja,GAAyF,IAAnFsI,EAAW6N,UAAAlO,OAAA,QAAAqK,IAAA6D,UAAA,GAAAA,UAAA,GAAG,KAAuB+D,EAAgB/D,UAAAlO,OAAA,QAAAqK,IAAA6D,UAAA,GAAAA,UAAA,GAAG,GAAIxR,EAAYwR,UAAAlO,OAAA,QAAAqK,IAAA6D,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5FgE,EAAa,CAAE5S,WAAWxJ,EAAAA,EAAAA,KAAsBiC,KAAMA,EAAM1C,MAAOqH,EAAcmG,KAAM,IAChF,YAAT9K,EACAma,EAAW7U,SAAW,IAEtB6U,EAAWrP,KAAOoP,EAClBA,GAAoBA,EAAiBxc,KAAI,SAAC0c,GACtCD,EAAW7c,MAAM8c,EAAYta,MAAQ6E,EAAayV,EAAYta,OAASsa,EAAYra,YACvF,IAEIwC,EAAkBvC,GAAMC,OAASsC,EAAkBvC,GAAMC,MAAMgI,OAAS,IACxEkS,EAAW7U,SAAW,GACtB/C,EAAkBvC,GAAMC,MAAMvC,KAAI,SAAC2c,GAC/B,IAAIC,EAAc,CAAEta,KAAM,kBAAmB1C,MAAO,CAAE4H,aAAcmV,GAAiBvP,KAAM,CAAC,CAAEhL,KAAM,eAAgBE,KAAM,SAAUD,aAAc,CAAED,KAAM,cAC1Jqa,EAAW7U,SAAS2D,KAAKqR,EAC7B,MAKR7B,GAAY,SAAC8B,GAET,OADoBC,EAAkB/R,EAAK8R,GAE/C,IAGI9B,EADgB,OAAhBnQ,EACY,SAACiS,GAAY,SAAAlS,OAAAI,EAAS8R,GAAY,CAAEJ,GAAa,EAEjD,SAACI,GACT,IAAME,EAAWhS,EAAO8R,GACxB,GAAIjS,EAAa,CACb,IAAMxD,EAAgB4V,EAAkBpS,EAAamS,GACrD3V,EAAcQ,SAAWR,EAAcQ,UAAY,GACnDR,EAAcQ,SAAS2D,KAAKkR,GAC5BrV,EAAcQ,SAAWkV,EAAmB1V,EAAcQ,SAC9D,MACImV,EAAYxR,KAAKkR,GAErB,OAAOM,CACX,EAER,EAuEMC,EAAoB,SAAChZ,EAAO8W,GAC9B,IAAMmC,EAAUjZ,EAAMkZ,MAAM,KAAKld,KAAI,SAAAiW,GAAC,OAAI7P,SAAS6P,EAAE,IACjDpW,EAAS,KAeb,OAbiB,SAAXsd,EAAYxE,EAAKyE,GACnB,IACMvN,EAAK8I,EADDyE,EAAIC,SAGK,IAAfD,EAAI7S,OACJ1K,EAASgQ,EAETsN,EAAStN,EAAGjI,SAAUwV,EAE9B,CAEAD,CAASrC,EAAUmC,GAEZpd,CACX,EAEM0E,EAAmB,SAACjC,GACtBia,EAAWja,EAD4BmW,UAAAlO,OAAA,QAAAqK,IAAA6D,UAAA,GAAAA,UAAA,GAAG,KAAeA,UAAAlO,OAAA,QAAAqK,IAAA6D,UAAA,GAAAA,UAAA,GAAG,KAAUA,UAAAlO,OAAA,EAAAkO,UAAA,QAAA7D,EAAO6D,UAAAlO,OAAA,EAAAkO,UAAA,QAAA7D,EAGjF,EAOA,SAASkI,EAAmBQ,GACxB,OAAOA,EAAMjS,QAAO,SAAAkS,GAChB,GAAiB,mBAAbA,EAAKjb,KAIL,OAHGib,EAAK3V,WACJ2V,EAAK3V,SAAWkV,EAAmBS,EAAK3V,YAErC,EACH,IAAD4V,EAAAC,EAGwBC,EADrBC,EAAY,IAAIC,IAAMC,ooBAAAC,CACNR,GAAK,IAA3B,IAAAO,EAAAvS,MAAAoS,EAAAG,EAAAhE,KAAAnF,MAA6B,CAAC,IAAnBqJ,EAAOL,EAAAtc,MACO,oBAAjB2c,EAAQzb,OACHqb,EAAUK,IAAID,EAAQne,MAAMwL,UAAY,YACzCuS,EAAUM,IAAIF,EAAQne,MAAMwL,UAAY,WAGpD,CAAC,OAAAhL,GAAAyd,EAAAK,EAAA9d,EAAA,SAAAyd,EAAAM,GAAA,CACD,IAAM/S,GAAqB,QAAVoS,EAAAD,EAAK3d,aAAK,IAAA4d,GAAc,QAAdC,EAAVD,EAAYhW,oBAAY,IAAAiW,OAAd,EAAVA,EAA0Brb,OAAQ,UACnD,OAAQub,EAAUK,IAAI5S,EAE9B,GACJ,CAEA,IAAM3G,EAAsB,WAAwD,IAAvD+H,EAAYiM,UAAAlO,OAAA,QAAAqK,IAAA6D,UAAA,GAAAA,UAAA,GAAG,KAAM7Y,EAAK6Y,UAAAlO,OAAA,EAAAkO,UAAA,QAAA7D,EAAEhN,EAAQ6Q,UAAAlO,OAAA,EAAAkO,UAAA,QAAA7D,EAAE5N,EAAWyR,UAAAlO,OAAA,EAAAkO,UAAA,QAAA7D,EAC1EmG,GAAY,SAAC8B,GACT,IAAME,EAAWhS,EAAO8R,GACxB,GAAIrQ,EAAc,CACd,IAAM4R,EAAkBpB,EAAkBxQ,EAAcuQ,GACxDqB,EAAgB9b,KAAO0E,GAAeoX,EAAgB9b,KACtD8b,EAAgBxe,MAAK0M,EAAAA,EAAA,GAAQ8R,EAAgBxe,OAAUA,GACpDgI,IACCwW,EAAgBxW,SAAWA,EAEnC,CACA,OAAOmV,CACX,GACJ,EAEMsB,EAAoB,SAACC,EAAaC,IAzIpB,SAACD,EAAaC,GAC9B,IAAMxB,EAAWhS,EAAO+P,GAClB0D,EAAgBF,EAAYpB,MAAM,KAAKld,KAAI,SAAAiW,GAAC,OAAI7P,SAAS6P,EAAE,IAC3DwI,EAAqBF,EAAiBrB,MAAM,KAAKld,KAAI,SAAAiW,GAAC,OAAI7P,SAAS6P,EAAE,IACrEyI,EAAcF,EAAcjU,OAC5BoU,EAAmBF,EAAmBlU,OAExCqU,EAAe5B,EAAkBsB,EAAY7Q,MAAM,EAAG6Q,EAAY/Q,YAAY,MAAOwP,GACrF8B,EAAiBD,GAA+B,GAAfF,EAA8CE,EAAahX,SAAS4W,EAAcE,EAAc,IAA7E3B,EAAYuB,GAE9D1T,EAAc2T,EAAiB9Q,MAAM,EAAG8Q,EAAiBhR,YAAY,MACvEuR,EAAoB9B,EAAkBpS,EAAamS,GACvD+B,EAAwC,GAApBH,EAAwB5B,EAAc+B,EAC1D,IAAMC,EAA+BN,EAAmBE,EAAmB,GAG3EC,EAAeA,EAAahX,SAASoX,OAAOR,EAAcE,EAAc,GAAI,GAAK3B,EAAYiC,OAAOV,EAAa,GAG7F,GAApBK,EAAwBG,EAAkBE,OAAOD,EAA8B,EAAGF,GAC9EC,EAAkBlX,SAASoX,OAAOD,EAA8B,EAAGF,GACvE9D,EAAYgC,EAChB,CAoHIkC,CAAYX,EAAaC,EAC7B,EA2CItX,EAAe,CACf/C,gBAAAA,EAAiBC,gBAlCG,SAACwB,EAAOuZ,GAGvBrE,IACDA,EAAkBqE,EAClBhV,QAAQyE,IAAI,mBAAoBuQ,GAIxC,EAyBsC9a,WAbnB,SAACuB,EAAOwZ,GACvBxZ,EAAMyZ,iBACNzZ,EAAM4C,kBACN5C,EAAM0Z,cAAcC,UAAUC,OAAO,aAErClB,EADkBxD,EACWsE,EACjC,EAOkD9a,eAvB3B,SAACsB,EAAOwZ,GAC3BxZ,EAAMyZ,iBACNzZ,EAAM6Z,aAAaC,WAAa,OAChC9Z,EAAM0Z,cAAcC,UAAUrB,IAAI,YACtC,EAmBkE3Z,mBALvC,SAACa,GACxBsV,EAAmBtV,EACvB,EAGsFZ,iBAAAA,EAAkBC,kBAzF9E,SAACsW,GACXA,EAhJC9a,KAAI,SAAC8J,GACd,IAAQxH,EAAwFwH,EAAxFxH,KAAIod,EAAoF5V,EAAlFc,YAAAA,OAAW,IAAA8U,EAAG,KAAIA,EAAAC,EAAgE7V,EAA9D4D,SAAAA,OAAQ,IAAAiS,EAAG,KAAIA,EAAAC,EAA+C9V,EAA7C0S,iBAAAA,OAAgB,IAAAoD,EAAG,GAAEA,EAAAC,EAAwB/V,EAAtB7C,aAC1EsV,EAAWja,EAAMsI,EAAa8C,EAAU8O,OAD8C,IAAAqD,EAAG,CAAC,EAACA,EAE/F,GA+IJ,EAsF2Hpb,oBAAAA,EAAqBC,oBA1CpH,SAACV,IArHP,SAACA,GACnB+W,GAAY,SAAC8B,GACT,IAAME,EAAWhS,EAAO8R,GAClBjS,EAAc5G,EAAMyJ,MAAM,EAAGzJ,EAAMuJ,YAAY,MAC/CuS,EAAa9b,EAAMkZ,MAAM,KAE/B,GAAoB,KAAhBtS,EACAmS,EAAYiC,OAAOhb,EAAO,OACvB,CAAC,IAAD+b,EACG3Y,EAAgB4V,EAAkBpS,EAAamS,GAE/CtS,EAAarE,SAAS0Z,EAAWA,EAAWvV,OAAS,IAE3DnD,EAAcQ,SAAWR,EAAcQ,UAAY,GACnD,IAAIoY,GAAmD,QAArCD,EAAAlb,EAAkBuC,EAAc9E,aAAK,IAAAyd,OAAA,EAArCA,EAAuCxd,QAAS,GAC9Dyd,GAAeA,EAAYzV,OAAS,IACpCnD,EAAcQ,SAAWR,EAAcQ,UAAY,GAEnDoY,EAAYhgB,KAAI,SAAC2c,GACb,IAAIC,EAAc,CAAEta,KAAM,kBAAmB1C,MAAO,CAAE4H,aAAcmV,GAAiBvP,KAAM,CAAC,CAAEhL,KAAM,eAAgBE,KAAM,SAAUD,aAAc,CAAED,KAAM,cACO,GAA9JgF,EAAcQ,SAASyD,QAAO,SAAC4U,GAAa,IAADC,EAAAC,EAAE,MAAuB,mBAAhBF,EAAQ3d,OAA0C,QAAb4d,EAAAD,EAAQrgB,aAAK,IAAAsgB,GAAc,QAAdC,EAAbD,EAAe1Y,oBAAY,IAAA2Y,OAAd,EAAbA,EAA6B/d,QAASua,EAAcva,IAAI,IAAGmI,QACnJnD,EAAcQ,SAAS2D,KAAKqR,EAEpC,KAGJxV,EAAcQ,SAAWR,EAAcQ,SAASyD,QAAO,SAAC+U,EAAWC,GAC/D,OAAOA,IAAS5V,CACpB,IACArD,EAAcQ,SAAWkV,EAAmB1V,EAAcQ,SAC9D,CACA,OAAOmV,CACX,IACAtC,EAAmB,KACvB,CAoFI6F,CAActc,EAClB,EAyCIW,qBAvCyB,SAACX,EAAOuc,IArFd,SAACvc,EAAOuc,GAC3BxF,GAAY,SAAC8B,GACT,IAAME,EAAWhS,EAAO8R,GAGxB,OAFgBG,EAAkBhZ,EAAO+Y,GACjCwD,KAAOA,EACRxD,CACX,GACJ,CA+EIyD,CAAexc,EAAOuc,EAC1B,EAqC0B3b,gBAlBF,SAACe,GACrBA,EAAM0Z,cAAcC,UAAUC,OAAO,YACzC,EAgB2C1a,kBAAAA,EAAmBG,YAAAA,EAAaD,eAAAA,GAE3E,OAAO2V,EACHhZ,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,OAAKoE,UAAU,gBACXpE,EAAAA,cAAA,OAAKoE,UAAU,eACVgV,EAAS9a,KAAI,SAACmF,EAASnB,GAAK,OACzBtC,EAAAA,cAACiC,EAAAA,QAAOoC,EAAA,CAAC2E,IAAK1G,EAAOD,YAAaoB,EAASnB,MAAOA,EAAMrD,WAAYsD,SAAUkB,EAAQ0E,cAA8B,OAAf3F,QAAe,IAAfA,OAAe,EAAfA,EAAiB2F,YAAa,OAAW5C,EAAY,CAAEnC,MAAOlF,EAAMkF,QAAS,IAElK,GAAnBgW,EAASvQ,OAAe7I,EAAAA,cAAA,OAAKoE,UAAU,uBACpCpE,EAAAA,cAACqF,EAAAA,kBAAiB,CAACxC,iBAAkBA,EAAkBE,oBAAqBA,EAAqBT,MAAM,GAAGkD,SAAUrC,EAAmBsC,OAAO,EAAMrC,MAAOlF,EAAMkF,MAAOC,eAAgBA,KAClL,QAIrBrD,EAAAA,cAAAA,EAAAA,SAAA,KACDA,EAAAA,cAAC+e,EAAAA,IAAmB,CAACne,KAAK,SAASO,MAAO,CAAE6d,aAAc,KAC1Dhf,EAAAA,cAAC+e,EAAAA,IAAmB,CAACne,KAAK,UAElC,EAGMH,EAAM,0jIAsNNvC,EAAQ,CAAC,CACXwC,KAAM,UACNC,aAAc,GACdC,KAAM,WAGJC,EAAQ,GAERC,GAAmBC,EAAAA,EAAAA,GAAQf,EAAAA,WAAiB4Y,GAAc1a","sources":["commons/CommonUtils.js","components/basic/form/Checkbox.js","components/basic/form/TextArea.js","components/ui-studio/Element.js","components/ui-studio/UIStudio.js"],"sourcesContent":["export const processComponentProperties = function (props) {        \r\n    let result = {};\r\n    let propKeys = Object.keys(props);\r\n    propKeys.map((propKey) => {\r\n        if(typeof props[propKey] == \"string\") {\r\n            try {\r\n                result[propKey] = JSON.parse(props[propKey]);\r\n            }catch(err) {\r\n                result[propKey] = props[propKey];\r\n            } \r\n        }\r\n    });   \r\n    return result;\r\n}\r\n\r\nexport const getUniqueElementId = () => {\r\n    return 'xxxxyyyyxxxxyyyyxyxyyxyxxyxyyxyx'.replace(/[xy]/g, function(c) {\r\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n        return v.toString(16);\r\n    });\r\n}","import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport { Checkbox  } from \"carbon-components-react\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\n\r\nconst dispatchedEvents = [EventAPI.CHECKBOX_CHANGED];\r\n\r\n/*\r\n    Example: <srs-checkbox label=\"Label\" checked=\"true\"/>\r\n*/\r\nconst SrsCheckbox = function (props, ref) {\r\n    const [isChecked, setIsChecked] = useState(props.checked || props.value || false);\r\n\r\n    useEffect(() => {\r\n        setIsChecked(props.checked || props.value || false);\r\n        props.setValue(props.checked || props.value || false)\r\n    }, [props]);\r\n    return props.elementid? (\r\n      <Checkbox \r\n        labelText={props.label}\r\n        checked={isChecked}\r\n        id={props.elementid}\r\n        onChange={(evt, payload) => {\r\n            setIsChecked(payload.checked);\r\n            props.setValue(payload.checked);\r\n            if(props.onChange) {\r\n                props.onChange(payload.checked);\r\n            }else {\r\n                props.dispatchEvent(EventAPI.CHECKBOX_CHANGED, {payload: { value: payload.checked, id: props.elementid }});\r\n            }\r\n        }}\r\n      />\r\n    ): null;\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n    name: \"label\",\r\n    defaultValue: \"label\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"checked\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}, {\r\n    name: \"value\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsCheckbox), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots};","import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport { TextArea  } from \"carbon-components-react\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\n\r\nconst dispatchedEvents = [EventAPI.TEXTAREA_CHANGED];\r\n\r\n/*\r\n    Example: <srs-textarea label=\"Label\" rows=\"3\" cols=\"150\"/>\r\n*/\r\nconst SrsTextArea = function (props, ref) {\r\n    const [inputValue, setInputValue] = useState(props.value || \"\");\r\n    useEffect(() => {\r\n        setInputValue(props.value);\r\n        props.setValue(props.value);\r\n    }, [props]);\r\n\r\n    let inlineStyles = {\r\n        \"--cds-label-01-font-size\": \"0.9rem\",\r\n        \"--cds-label-01-font-weight\": 800,\r\n    };\r\n\r\n    return (\r\n        <div style={inlineStyles}>\r\n            <TextArea\r\n                id={props.elementid}\r\n                labelText={props.label}\r\n                rows={props.rows}\r\n                cols={props.cols}\r\n                value={inputValue}\r\n                disabled={props.disabled}\r\n                placeholder={props.placeholder}\r\n                readOnly={props.readonly}\r\n                onBlur={(evt) => {\r\n                    if(props.onChange) {\r\n                        props.onChange(evt.target?.value || \"\");     \r\n                    }\r\n                }}\r\n                onChange={(evt) => {\r\n                    setInputValue(evt.target?.value || \"\");\r\n                    props.dispatchEvent(EventAPI.TEXTAREA_CHANGED, { payload: {value: evt.target?.value || \"\", id: props.elementid} });\r\n                    props.setValue(evt.target?.value || \"\");\r\n                }}/>\r\n        </div>\r\n      );\r\n}\r\n\r\nconst styles = `\r\n    .cds--text-area {\r\n        border: 1px solid lightgray !important;\r\n        border-radius: 5px;\r\n    }\r\n\r\n    .cds--text-area:focus, .cds--text-area:active {\r\n        outline: 0px !important;\r\n        border: 2px solid !important;\r\n        border-radius: 5px;\r\n    } \r\n`\r\nconst props = [{\r\n    name: \"label\",\r\n    defaultValue: \"Label\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"rows\",\r\n    defaultValue: 4,\r\n    type: \"number\"\r\n}, {\r\n    name: \"cols\",\r\n    defaultValue: 100,\r\n    type: \"number\"\r\n}, {\r\n    name: \"value\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"disabled\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}, {\r\n    name: \"placeholder\",\r\n    defaultValue: \"Enter value...\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"readonly\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}];\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsTextArea), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Popover, PopoverContent, Button, Search, TextInput } from \"carbon-components-react\";\r\nimport { Add, Close, Edit, Flow, Maximize, Minimize } from \"@carbon/icons-react\";\r\nimport { WrappedComponent as SrsInput, styles as SrsInputStyles } from \"../basic/form/Input\";\r\nimport { WrappedComponent as SrsTextArea, styles as SrsTextAreaStyles } from \"../basic/form/TextArea\";\r\nimport { WrappedComponent as SrsCheckbox, styles as SrsCheckboxStyles } from \"../basic/form/Checkbox\";\r\nimport withStyles from '../../commons/WithStyleWrapper';\r\n\r\nimport { props } from \"./UIStudio\";\r\nimport { componentLookup } from \"../../commons/WebcomponentRegistry\";\r\nimport { getUniqueElementId } from \"../../commons/CommonUtils\";\r\n\r\nexport const Element = ({ elementData, index, selected, selectedElement, handleDragStart, handleDrop, handleDragOver, handleElementClick, handleAddElement,\r\n  handleAddElements, handleUpdateElement, handleDeleteElement, handleSetElementText, handleDragLeave, componentMetaData, theme, isDraggable, setIsDraggable }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const element = elementData;\r\n  const eleContainerRef = useRef(null);\r\n\r\n  const handleDoubleClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const handleBlur = (event) => {\r\n    setIsEditing(false);\r\n    handleSetElementText(index, event.target.textContent);\r\n  };\r\n\r\n  const applyElementData = (updatedElementData) => {\r\n    handleUpdateElement(index, updatedElementData.props, updatedElementData.children, updatedElementData.type);\r\n  }\r\n\r\n  let extraProps = {};\r\n\r\n  if(!element) return null;\r\n\r\n  let elementElProps = { selectedElement, handleDragStart, handleDrop, handleDragOver, handleElementClick, handleAddElement, handleAddElements, handleUpdateElement, handleDeleteElement, handleSetElementText, handleDragLeave, handleDoubleClick, handleBlur, componentMetaData, theme, setIsDraggable };\r\n  let elementEl = getComponentToRender(element, { isEditing, index, elementElProps, elementMetaData: componentMetaData[element?.type || \"\"] })\r\n  return (\r\n    <div className={selected ? \"element-container ele-container-hover\" : \"element-container\"} data-index={index} ref={eleContainerRef}>\r\n      <div draggable={false}\r\n        {...extraProps}\r\n        onDragOver={(event) => handleDragOver(event, index)}\r\n        onDragLeave={handleDragLeave} className=\"element-wrapper\">\r\n        <div className=\"element\">\r\n          {elementEl}\r\n        </div>\r\n      </div>\r\n      {/* Transparent Div */}\r\n      {element.type !== \"srs-contentslot\" ?\r\n        (<div className=\"element-glass\" style={{ zIndex: selected ? 6000 : parseInt(\"1\" + index.replaceAll(\"-\", \"\")) }}\r\n          onClick={(evt) => {\r\n            let currentElementIndex = evt.target.closest(\".element-container\").getAttribute(\"data-index\");\r\n            if (currentElementIndex == index) {\r\n              handleElementClick(element);\r\n            }\r\n          }}>\r\n          <div className=\"element-actions\" style={{ zIndex: parseInt(\"1\" + index.replaceAll(\"-\", \"\")) + 1 }}>\r\n            <Close size=\"20\" onClick={() => handleDeleteElement(index)} style={{ border: \"1px solid var(--cds-layer)\", borderRadius: \"20%\", backgroundColor: \"var(--cds-text-secondary)\", color: \"var(--cds-background,#ffffff)\" }} />\r\n            <AddElementPopover elementType={element.type} elementProps={element.props} selected={selected} handleAddElement={handleAddElement} handleUpdateElement={handleUpdateElement} handleElementClick={handleElementClick} index={index} metadata={componentMetaData} isNew={false} theme={theme} setIsDraggable={setIsDraggable} />\r\n            <AddElementPopover elementType=\"\" elementProps={{}} parentElement={element} selected={selected} handleAddElement={handleAddElement} handleUpdateElement={handleUpdateElement} handleElementClick={handleElementClick} index={index} metadata={componentMetaData} isNew={true} theme={theme} setIsDraggable={setIsDraggable} isContainer={false} isSlot={element.type == \"srs-contentslot\"} slotDetails={element.props?.slot_details || {}} />\r\n            <JSONEditor value={element} applyElementData={applyElementData} handleElementClick={handleElementClick} theme={theme}/>\r\n          </div>\r\n        </div>) : (<div className=\"element-slot-actions\" style={{ zIndex: selected ? 6000 : parseInt(\"1\" + index.replaceAll(\"-\", \"\")) + 1 }}\r\n          onClick={(evt) => {\r\n            let currentElementIndex = evt.target.closest(\".element-container\").getAttribute(\"data-index\");\r\n            if (currentElementIndex == index) {\r\n              handleElementClick(element);\r\n            }\r\n          }}>\r\n          <AddElementPopover elementType=\"\" elementProps={{}} parentElement={element} selected={selected} handleAddElement={handleAddElement} handleUpdateElement={handleUpdateElement} handleElementClick={handleElementClick} index={index} metadata={componentMetaData} isNew={true} theme={theme} setIsDraggable={setIsDraggable} isContainer={false} isSlot={element.type == \"srs-contentslot\"} slotDetails={element.props?.slot_details || {}} />\r\n        </div>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst JSONEditor = ({value, applyElementData, handleElementClick, theme}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [elementData, setElementData] = useState(value);\r\n  const [fullscreen, setFullscreen] = useState(false);\r\n\r\n  const openPopover = (evt) => {\r\n    setOpen(true);\r\n    evt && evt.stopPropagation();\r\n  }\r\n\r\n  const closePopover = (evt) => {\r\n    setOpen(false);\r\n    handleElementClick(null);\r\n    evt && evt.stopPropagation();\r\n  }\r\n\r\n  const getElementsData = (elementsData) => {\r\n    elementsData.elementId = elementsData.elementId || getUniqueElementId();\r\n    if(elementsData.children) {\r\n      elementsData.children.map((elementItem) => {\r\n        elementItem.elementId = elementItem.elementId || getUniqueElementId();\r\n      })\r\n    }\r\n    return elementsData;\r\n  }\r\n\r\n  let ReactComponent = withStyles(SrsTextAreaStyles)(SrsTextArea);\r\n\r\n  return (<Popover\r\n    autoAlign={true}\r\n    caret={false}\r\n    dropShadow={false}\r\n    highContrast={false}\r\n    open={open}\r\n    onClick={(evt) => evt.stopPropagation()}\r\n    onClose={() => setOpen(!open)}>\r\n    <Flow size={20} onClick={(evt) => openPopover(evt)} style={{ border: \"1px solid var(--cds-layer)\", borderRadius: \"20%\", backgroundColor: \"var(--cds-text-secondary)\", color: \"var(--cds-background,#ffffff)\" }} />\r\n    <PopoverContent className={fullscreen? \"element-popover popover-fullscreen\": \"element-popover\"} >\r\n      <div className=\"properties-panel-header\">\r\n        <div className=\"properties-panel-label\">Element Data</div>\r\n        <Close size=\"20\"\r\n          style={{ position: \"absolute\", right: 0, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n          onClick={(evt) => {\r\n            closePopover();\r\n            evt.stopPropagation();\r\n          }} />\r\n          {\r\n            fullscreen? (<Minimize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => false);\r\n              evt.stopPropagation();\r\n            }} />): (<Maximize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => true);\r\n              evt.stopPropagation();\r\n            }} />)\r\n          }\r\n      </div>\r\n      <div className=\"json-editor-actions\">\r\n        <Button kind=\"ghost\" onClick={(evt) => {\r\n              applyElementData(getElementsData(elementData || {}));\r\n              closePopover();\r\n              evt.stopPropagation();\r\n            }}>Apply</Button>\r\n      </div>\r\n      <div className=\"jsonEditor\">\r\n        <ReactComponent label=\"Element Data\" placeholder={JSON.stringify([{type: \"srs-container\", props: {title: \"Section #1\"}, children: []}], null, 4)}\r\n          rows={18}\r\n          value={JSON.stringify(elementData || {}, null, 4)}\r\n          onChange={(value) => {\r\n            setElementData((prevElementData) => {\r\n              let result = prevElementData;\r\n              try {\r\n                result = JSON.parse(value || \"\");\r\n              }catch(err) { \r\n                console.error(\"Error parsing element data... changes are not applied\")\r\n              }\r\n              return result;\r\n            });\r\n          }}\r\n          theme={theme} />\r\n      </div>\r\n    </PopoverContent>\r\n  </Popover>)\r\n}\r\n\r\nconst getComponentToRender = (element, { isEditing, index, elementElProps, elementMetaData }) => {\r\n  const { selectedElement, handleAddElement, handleAddElements, handleUpdateElement, handleBlur, handleElementClick, componentMetaData, theme, setIsDraggable } = elementElProps;\r\n  let componentToRender = null;\r\n  let NodeTag = element?.type || \"\";\r\n  if (element.type == \"section\") {\r\n    componentToRender = <div className=\"section-container\">\r\n      {\r\n        !element.children || element.children.length == 0 ? (<>\r\n          <div className=\"add-element-buttons\">\r\n            <AddElementPopover elementType={element.type} handleAddElement={handleAddElement} handleUpdateElement={handleUpdateElement} handleElementClick={handleElementClick} index={index} metadata={componentMetaData} isNew={true} theme={theme} setIsDraggable={setIsDraggable} isContainer={true} />\r\n          </div></>) : null\r\n      }\r\n      <div className=\"section-element\">\r\n        <div className=\"sub-elements\">\r\n          {element.children.map((childElement, childIndex) => (\r\n            <Element key={`${index}-${childIndex}`} elementData={childElement} selected={childElement.elementId == (selectedElement?.elementId || \"-1\")} parentIndex={`${index}`} index={`${index}-${childIndex}`} {...elementElProps} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  } else {\r\n    let elementSlotData = [];\r\n    if (elementMetaData.slots && elementMetaData.slots.length > 0) {\r\n      let remainingSlots = [...elementMetaData.slots];\r\n      let nonSlottedChildElements = [];\r\n      let slottedElementsAdded = [];\r\n\r\n      if (element.children) {\r\n        element.children.map((childElement) => {\r\n          if (childElement.type != \"srs-contentslot\") {\r\n            if (childElement.props.slotname) {\r\n              remainingSlots = remainingSlots.filter((s) => s.name != childElement.props.slotname);\r\n            } else {\r\n              remainingSlots = remainingSlots.filter((s) => s.name != \"default\");\r\n            }\r\n            nonSlottedChildElements.push(childElement);\r\n          } else {\r\n            if (childElement.props?.slotname) {\r\n              slottedElementsAdded.push(childElement.props?.slotname);\r\n            } else {\r\n              slottedElementsAdded.push({ name: \"default\" });\r\n            }\r\n          }\r\n        })\r\n      }\r\n      //If non-slotted child element is there, then don't show slotted content... else show all slotted contents\r\n      if (nonSlottedChildElements.length > 0) {\r\n        nonSlottedChildElements.map((childElement, childIndex) => {\r\n          elementSlotData.push(<Element key={`${index}-${childIndex}`} elementData={childElement} selected={childElement.elementId === (selectedElement?.elementId || \"-1\")} parentIndex={`${index}`} index={`${index}-${childIndex}`} {...elementElProps} />);\r\n        });\r\n      } else {\r\n        element.children && element.children.map((childElement, childIndex) => {\r\n          elementSlotData.push(<Element key={`${index}-${childIndex}`} elementData={childElement} selected={childElement.elementId == (selectedElement?.elementId || \"-1\")} parentIndex={`${index}`} index={`${index}-${childIndex}`} {...elementElProps} />);\r\n        });\r\n      }\r\n    }\r\n\r\n    componentToRender = <div\r\n      style={{ width: \"100%\", pointerEvents: \"all\" }}\r\n      // onDoubleClick={handleDoubleClick}\r\n      onBlur={handleBlur}\r\n      contentEditable={isEditing}\r\n      onClick={(evt) => {\r\n        let currentElementIndex = evt.target.closest(\".element-container\").getAttribute(\"data-index\");\r\n        if (currentElementIndex == index) {\r\n          handleElementClick(element);\r\n        }\r\n      }}>\r\n      <NodeTag {...element.props}>\r\n        {elementSlotData}\r\n      </NodeTag>\r\n    </div>\r\n  }\r\n\r\n  return componentToRender;\r\n}\r\n\r\nconst getSlotName = (slotDetails, parentElement) => {\r\n  if (slotDetails.name != \"$DYNAMIC$\") {\r\n    return slotDetails.name;\r\n  } else {\r\n    //execute slotDetails.script with props passed in \r\n  }\r\n}\r\n\r\nexport const AddElementPopover = ({ elementType = \"\", parentElement = null, selected, handleAddElement, handleUpdateElement, handleElementClick, index, metadata, elementProps = [],\r\n  isNew = true, theme, setIsDraggable, isContainer, isSlot, slotDetails }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [mode, setMode] = useState(isNew ? \"list\" : \"props\");\r\n  const extraProps = isSlot ? { slotname: getSlotName(slotDetails, parentElement) } : {};\r\n  const [props, setProps] = useState({ ...elementProps, ...extraProps });\r\n  const [elementIndex, setElementIndex] = useState(index);\r\n  const [selectedElementType, setSelectedElementType] = useState(elementType);\r\n\r\n  useEffect(() => {\r\n    // setOpen(isSlot);\r\n    setMode(isNew ? \"list\" : \"props\");\r\n  }, [selected]);\r\n\r\n  const getElementPropsMeta = (type) => {\r\n    return metadata && metadata[type] ? metadata[type]?.props || [] : [];\r\n  }\r\n\r\n  const addElementAndClosePopover = (type, index, metaProps) => {\r\n    return (props) => {\r\n      setOpen(false);\r\n      setMode(isNew ? \"list\" : \"props\");\r\n      if (isNew) {\r\n        if (isContainer) {\r\n          handleAddElement(type, index, null, metaProps, props);\r\n        } else {\r\n          const lastIndex = index.lastIndexOf(\"-\");\r\n          let parentIndx = index.slice(0, lastIndex);\r\n          let dropIndx = index.slice(lastIndex + 1);\r\n          if (lastIndex == -1) {\r\n            parentIndx = \"\";\r\n            dropIndx = \"0\";\r\n          } else {\r\n            dropIndx = (parseInt(dropIndx) + 1) + \"\";\r\n          }\r\n\r\n          handleAddElement(type, parentIndx, dropIndx, metaProps, props);\r\n        }\r\n      } else {\r\n        handleUpdateElement(index, props);\r\n      }\r\n      setIsDraggable(true);\r\n      handleElementClick && handleElementClick(null);\r\n    }\r\n  }\r\n\r\n  const openProps = (type) => {\r\n    setSelectedElementType(type);\r\n    setMode(\"props\");\r\n  }\r\n\r\n  const openElementList = () => {\r\n    setSelectedElementType(\"\");\r\n    setMode(\"list\");\r\n  }\r\n\r\n  const closePopover = () => {\r\n    setMode(isNew ? \"list\" : \"props\");\r\n    setOpen(false);\r\n    setIsDraggable(true);\r\n    handleElementClick(null);\r\n  }\r\n\r\n  const openPopover = (evt) => {\r\n    setOpen(true);\r\n    setIsDraggable(false);\r\n    evt && evt.stopPropagation();\r\n  }\r\n\r\n  let listContents = (<ElementListPanel openProps={openProps} closePopover={closePopover} />);\r\n  let metaProps = getElementPropsMeta(selectedElementType);\r\n  let propsContent = <PropertiesPanel selectedElement={{ type: selectedElementType, meta: metaProps, props, theme }}\r\n    applyChange={addElementAndClosePopover(selectedElementType, elementIndex, metaProps)}\r\n    closePopover={closePopover} \r\n    openElementList={openElementList} />\r\n\r\n  return (<Popover\r\n    autoAlign={true}\r\n    caret={false}\r\n    dropShadow={false}\r\n    highContrast={false}\r\n    open={open}\r\n    onClick={(evt) => evt.stopPropagation()}\r\n    onClose={() => setOpen(!open)}>\r\n    {mode == \"list\" ?\r\n      (<Add size={20} onClick={(evt) => openPopover(evt)} style={{ border: \"1px solid var(--cds-layer)\", borderRadius: \"20%\", backgroundColor: \"var(--cds-text-secondary)\", color: \"var(--cds-background,#ffffff)\" }} />) :\r\n      (<Edit size={20} onClick={(evt) => openPopover(evt)} style={{ border: \"1px solid var(--cds-layer)\", borderRadius: \"20%\", backgroundColor: \"var(--cds-text-secondary)\", color: \"var(--cds-background,#ffffff)\" }} />)\r\n    }\r\n    {\r\n      mode == \"list\" ? listContents : propsContent\r\n    }\r\n  </Popover>)\r\n}\r\n\r\nconst PropertiesPanel = ({ selectedElement, applyChange, closePopover, openElementList }) => {\r\n  const [elementProps, setElementProps] = useState(selectedElement.props || {});\r\n  const [fullscreen, setFullscreen] = useState(false);\r\n\r\n  if (selectedElement == null) {\r\n    return null;\r\n  }\r\n\r\n  let metaProps = [...selectedElement.meta];\r\n  let filteredProps = [];\r\n  metaProps.map((metaProp) => {\r\n    if (filteredProps.filter((filteredProp) => filteredProp.name == metaProp.name || metaProp.name == \"context\" || metaProp.name == \"theme\" || metaProp.name == \"clan\").length == 0) {\r\n      filteredProps.push(metaProp);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <PopoverContent className={fullscreen? \"element-popover popover-fullscreen\": \"element-popover\"}>\r\n      <div className=\"properties-panel-header\">\r\n        <div className=\"properties-panel-label\">Properties</div>\r\n        <Close size=\"20\"\r\n          style={{ position: \"absolute\", right: 0, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n          onClick={(evt) => {\r\n            closePopover();\r\n            evt.stopPropagation();\r\n          }} />\r\n          {\r\n            fullscreen? (<Minimize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => false);\r\n              evt.stopPropagation();\r\n            }} />): (<Maximize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => true);\r\n              evt.stopPropagation();\r\n            }} />)\r\n          }\r\n      </div>\r\n      <div className=\"properties-panel\">\r\n        <div className=\"properties-panel-actions\">\r\n          <Button kind=\"ghost\" onClick={(evt) => {\r\n            applyChange(elementProps);\r\n            evt.stopPropagation();\r\n          }}>Apply</Button>\r\n          <Button kind=\"ghost\" onClick={(evt) => {\r\n            openElementList();\r\n            evt.stopPropagation();\r\n          }}>Elements</Button>\r\n        </div>\r\n        <p>Element: {selectedElement.type}</p>\r\n        {\r\n          filteredProps.map((elementPropMetadata) => {\r\n            let ReactComponent = null;\r\n            switch (elementPropMetadata.type) {\r\n              case \"string\":\r\n              case \"number\":\r\n                ReactComponent = withStyles(SrsInputStyles)(SrsInput);\r\n                return (<ReactComponent\r\n                  elementid={elementPropMetadata.name}\r\n                  label={elementPropMetadata.name}\r\n                  value={elementProps[elementPropMetadata.name] || \"\"}\r\n                  onChange={(value) => {\r\n                    setElementProps((prevProps) => {\r\n                      return { ...prevProps, [elementPropMetadata.name]: value }\r\n                    });\r\n                  }}\r\n                  theme={props.theme} />);\r\n                break;\r\n              case \"boolean\":\r\n                console.log(\"In boolean\", SrsCheckbox)\r\n                ReactComponent = withStyles(SrsCheckboxStyles)(SrsCheckbox);\r\n                let val = elementProps.hasOwnProperty(elementPropMetadata.name)? elementProps[elementPropMetadata.name]: true;\r\n                return (<ReactComponent\r\n                  elementid={elementPropMetadata.name}\r\n                  label={elementPropMetadata.name}\r\n                  value={val}\r\n                  onChange={(value) => {\r\n                    setElementProps((prevProps) => {\r\n                      return { ...prevProps, [elementPropMetadata.name]: value }\r\n                    });\r\n                  }}\r\n                  theme={props.theme} />);\r\n                break;\r\n              case \"object\":\r\n                ReactComponent = withStyles(SrsTextAreaStyles)(SrsTextArea);\r\n                return (<ReactComponent\r\n                  label={elementPropMetadata.name}\r\n                  placeholder={JSON.stringify({padding: 0, border: \"1px solid white\"}, null, 4)}\r\n                  value={elementProps[elementPropMetadata.name] || \"\"}\r\n                  onChange={(value) => {\r\n                    setElementProps((prevProps) => {\r\n                      return { ...prevProps, [elementPropMetadata.name]: value }\r\n                    });\r\n                  }}\r\n                  theme={props.theme} />);\r\n                break;\r\n            }\r\n          })\r\n        }\r\n      </div>\r\n    </PopoverContent>\r\n  );\r\n}\r\n\r\nconst ElementListPanel = ({ openProps, closePopover }) => {\r\n  const [fullscreen, setFullscreen] = useState(false);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  let elementNames = Object.keys(componentLookup);\r\n  let sortedElements = [];\r\n  elementNames.map((elementName) => {\r\n    sortedElements.push({name: elementName, label: componentLookup[elementName].label, order: componentLookup[elementName].order});\r\n  });\r\n\r\n  sortedElements = sortedElements.sort((a, b) => (a.order > b.order) ? 1 : -1);\r\n  sortedElements = sortedElements.filter((el) => {\r\n    if(filter) {\r\n      return el.name.toLowerCase().indexOf(filter.toLowerCase()) > -1 || el.label.toLowerCase().indexOf(filter.toLowerCase()) > -1;\r\n    }else {\r\n      return true;\r\n    }\r\n  });\r\n\r\n  let elementList = sortedElements.map((element) => {\r\n    return (<Button kind=\"ghost\" onClick={() => openProps(element.name)} className=\"element-btn\">{element.label}</Button>);\r\n  })\r\n\r\n  return (\r\n    <PopoverContent className={fullscreen? \"element-popover popover-fullscreen\": \"element-popover\"}>\r\n      <div className=\"properties-panel-header\">\r\n        <div className=\"properties-panel-label\">Element Selection</div>\r\n        <Close size=\"20\"\r\n          style={{ position: \"absolute\", right: 0, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n          onClick={(evt) => {\r\n            closePopover();\r\n            evt.stopPropagation();\r\n          }} />\r\n          {\r\n            fullscreen? (<Minimize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => false);\r\n              evt.stopPropagation();\r\n            }} />): (<Maximize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => true);\r\n              evt.stopPropagation();\r\n            }} />)\r\n          }\r\n      </div>\r\n      <div className=\"search-panel\">\r\n        <Search size=\"sm\" defaultValue=\"\" labelText=\"\" closeButtonLabelText=\"Clear search input\" id=\"search-1\"\r\n          style={{ color: \"var(--cds-text-primary,#161616)\" }}\r\n          onChange={(evt) => {\r\n            // debugger;\r\n            setFilter((prevVal) => evt.target.value);\r\n          }} />\r\n      </div>\r\n      <div className=\"element-btn-container\">\r\n        { elementList }\r\n      </div>\r\n    </PopoverContent>\r\n  );\r\n}","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { register } from \"../../commons/ComponentRegistry\";\r\nimport { componentLookup } from \"../../commons/WebcomponentRegistry\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\nimport { CodeSnippetSkeleton } from \"carbon-components-react\";\r\n\r\nimport { AddElementPopover, Element } from \"./Element\";\r\nimport { getUniqueElementId } from \"../../commons/CommonUtils\";\r\n\r\nconst dispatchedEvents = [];\r\n\r\nfunction interceptEventTarget(event) {\r\n    if (event.composed) {\r\n        Object.defineProperty(event, 'target', {\r\n            value: event.composedPath()[0],\r\n            writable: false,\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    }\r\n}\r\n\r\nfunction handleEvent(event) {\r\n    interceptEventTarget(event);\r\n}\r\n\r\nfunction addListeners(el) {\r\n    if (!el) return;\r\n    el.addEventListener('mouseup', handleEvent);\r\n    el.addEventListener('mousedown', handleEvent);\r\n    el.addEventListener('mouseover', handleEvent);\r\n    el.addEventListener('mouseleave', handleEvent);\r\n    el.addEventListener('mouseenter', handleEvent);\r\n\r\n    el.addEventListener('touchstart', handleEvent);\r\n    el.addEventListener('touchmove', handleEvent);\r\n    el.addEventListener('touchend', handleEvent);\r\n}\r\nfunction removeListeners(el) {\r\n    if (!el) return;\r\n    el.removeEventListener('mouseup', handleEvent);\r\n    el.removeEventListener('mousedown', handleEvent);\r\n    el.removeEventListener('mouseover', handleEvent);\r\n    el.removeEventListener('mouseleave', handleEvent);\r\n    el.removeEventListener('mouseenter', handleEvent);\r\n\r\n    el.removeEventListener('touchstart', handleEvent);\r\n    el.removeEventListener('touchmove', handleEvent);\r\n    el.removeEventListener('touchend', handleEvent);\r\n}\r\n\r\nconst SrsUIStudio = function (props, ref) {\r\n    const [eventBinding, setEventBinding] = useState(false);\r\n    const [selectedElement, setSelectedElement] = useState(null);\r\n    const [componentsRegistered, setComponentsRegistered] = useState(false);\r\n    const [componentMetaData, setComponentMetaData] = useState({});\r\n    const [isDraggable, setIsDraggable] = useState(true);\r\n\r\n    let dragElementIndx = null;\r\n\r\n    const [elements, setElements] = useState([\r\n        { elementId: getUniqueElementId(), type: \"srs-input\", props: { label: \"Hello\" } },\r\n        {\r\n            elementId: getUniqueElementId(),\r\n            type: \"srs-container\",\r\n            props: {\r\n                styles: {\r\n                    border: \"1px solid red\",\r\n                    padding: 10\r\n                }\r\n            },\r\n            children: [\r\n                {\r\n                    elementId: getUniqueElementId(),\r\n                    type: \"srs-input\", props: {\r\n                        placeholder: \"This is the first child\"\r\n                    }\r\n                },\r\n                {\r\n                    elementId: getUniqueElementId(),\r\n                    type: \"srs-input\", props: {\r\n                        value: \"This is the second child\"\r\n                    }\r\n                }],\r\n        },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!eventBinding) {\r\n            // Add the event listener to the window object\r\n            addListeners(ref.current);\r\n            setEventBinding(true);\r\n            registerAllComponents().then(() => setComponentsRegistered(true));\r\n        }\r\n\r\n        // Remove the event listener when the component unmounts\r\n        return () => {\r\n            removeListeners(ref.current)\r\n        };\r\n    }, [props.elementid]);\r\n\r\n    const registerAllComponents = async () => {\r\n        await loadComponentsMetaData();\r\n        return register(Object.keys(componentLookup));\r\n    }\r\n\r\n    const loadComponentsMetaData = async () => {\r\n        let componentNames = Object.keys(componentLookup);\r\n        let componentsMetaData = {};\r\n        for (let componentNameIndx in componentNames) {\r\n            let componentName = componentNames[componentNameIndx];\r\n            let componentData = await import(`../../components/${componentLookup[componentName].component}`);\r\n            let compStyles = componentData[\"styles\"];\r\n            let compProps = componentData[\"props\"];\r\n            let compEvents = componentData[\"dispatchedEvents\"];\r\n            let compSlots = componentData[\"slots\"];\r\n            componentsMetaData[componentName] = { styles: compStyles, props: compProps, dispatchedEvents: compEvents, slots: compSlots };\r\n        }\r\n        setComponentMetaData(componentsMetaData);\r\n    }\r\n\r\n    const addElements = (elementItems) => {\r\n        elementItems.map((elementItem) => {\r\n            const { type, parentIndex = null, dropIndx = null, elementPropsMeta = [], elementProps = {} } = elementItem;\r\n            addElement(type, parentIndex, dropIndx, elementPropsMeta, elementProps);\r\n        })\r\n    }\r\n\r\n    const addElement = (type, parentIndex = null, dropIndx = null, elementPropsMeta = [], elementProps = {}) => {\r\n        const newElement = { elementId: getUniqueElementId(), type: type, props: elementProps, meta: [] };\r\n        if (type === \"section\") {\r\n            newElement.children = [];\r\n        } else {\r\n            newElement.meta = elementPropsMeta;\r\n            elementPropsMeta && elementPropsMeta.map((elementProp) => {\r\n                newElement.props[elementProp.name] = elementProps[elementProp.name] || elementProp.defaultValue;\r\n            });\r\n\r\n            if (componentMetaData[type].slots && componentMetaData[type].slots.length > 0) {\r\n                newElement.children = [];\r\n                componentMetaData[type].slots.map((remainingSlot) => {\r\n                    let slotElement = { type: \"srs-contentslot\", props: { slot_details: remainingSlot }, meta: [{ name: \"slot_details\", type: \"object\", defaultValue: { name: \"default\" } }] };\r\n                    newElement.children.push(slotElement);\r\n                });\r\n            }\r\n        }\r\n\r\n        //clean up the entire tree to remove unnecessary slot elements for finding the correct parent element \r\n        setElements((prevElements) => {\r\n            const newElements = filterContentSlots([...prevElements]);\r\n            return newElements;\r\n        });\r\n\r\n        if (parentIndex === null) {\r\n            setElements((prevElements) => [...prevElements, newElement]);\r\n        } else {\r\n            setElements((prevElements) => {\r\n                const newElements = [...prevElements];\r\n                if (parentIndex) {\r\n                    const parentElement = getElementByIndex(parentIndex, newElements);\r\n                    parentElement.children = parentElement.children || [];\r\n                    parentElement.children.push(newElement);\r\n                    parentElement.children = filterContentSlots(parentElement.children);\r\n                } else {\r\n                    newElements.push(newElement);\r\n                }\r\n                return newElements;\r\n            });\r\n        }\r\n    };\r\n\r\n    const moveElement = (sourceIndex, destinationIndex) => {\r\n        const newElements = [...elements];\r\n        const sourceIndexes = sourceIndex.split('-').map(i => parseInt(i));\r\n        const destinationIndexes = destinationIndex.split('-').map(i => parseInt(i));\r\n        const sourceLevel = sourceIndexes.length;\r\n        const destinationLevel = destinationIndexes.length;\r\n\r\n        let sourceParent = getElementByIndex(sourceIndex.slice(0, sourceIndex.lastIndexOf('-')), newElements);\r\n        let sourceElement = !sourceParent && sourceLevel == 1 ? newElements[sourceIndex] : sourceParent.children[sourceIndexes[sourceLevel - 1]];\r\n\r\n        const parentIndex = destinationIndex.slice(0, destinationIndex.lastIndexOf('-'));\r\n        let destinationParent = getElementByIndex(parentIndex, newElements);\r\n        destinationParent = destinationLevel == 1 ? newElements : destinationParent;\r\n        const destinationIndexWithinParent = destinationIndexes[destinationLevel - 1];\r\n\r\n        // Remove the source element from its parent\r\n        sourceParent ? sourceParent.children.splice(sourceIndexes[sourceLevel - 1], 1) : newElements.splice(sourceIndex, 1);\r\n\r\n        // Insert the source element into the destination parent at the correct index\r\n        destinationLevel == 1 ? destinationParent.splice(destinationIndexWithinParent, 0, sourceElement) :\r\n            destinationParent.children.splice(destinationIndexWithinParent, 0, sourceElement);\r\n        setElements(newElements);\r\n    };\r\n\r\n    const deleteElement = (index) => {\r\n        setElements((prevElements) => {\r\n            const newElements = [...prevElements];\r\n            const parentIndex = index.slice(0, index.lastIndexOf(\"-\"));\r\n            const indexParts = index.split(\"-\");\r\n\r\n            if (parentIndex === \"\") {\r\n                newElements.splice(index, 1);\r\n            } else {\r\n                const parentElement = getElementByIndex(parentIndex, newElements);\r\n                // const childIndex = getIndexByIndex(index, parentElement.children);\r\n                const childIndex = parseInt(indexParts[indexParts.length - 1]);\r\n                // parentElement.children?.splice(childIndex, 1);\r\n                parentElement.children = parentElement.children || [];\r\n                let parentSlots = componentMetaData[parentElement.type]?.slots || [];\r\n                if (parentSlots && parentSlots.length > 0) {\r\n                    parentElement.children = parentElement.children || [];\r\n                    //Add all content slot nodes required for the parentElement first and then filter out the unnecessary slots looking at the actual element for the given slotname \r\n                    parentSlots.map((remainingSlot) => {\r\n                        let slotElement = { type: \"srs-contentslot\", props: { slot_details: remainingSlot }, meta: [{ name: \"slot_details\", type: \"object\", defaultValue: { name: \"default\" } }] };\r\n                        if(parentElement.children.filter((childEl) => { return childEl.type == \"srs-contentslot\" && childEl.props?.slot_details?.name === remainingSlot.name}).length == 0) {\r\n                            parentElement.children.push(slotElement);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                parentElement.children = parentElement.children.filter((childItem, indx) => {\r\n                    return indx !== childIndex; \r\n                });\r\n                parentElement.children = filterContentSlots(parentElement.children);\r\n            }\r\n            return newElements;\r\n        });\r\n        setSelectedElement(null);\r\n    };\r\n\r\n    const setElementText = (index, text) => {\r\n        setElements((prevElements) => {\r\n            const newElements = [...prevElements];\r\n            const element = getElementByIndex(index, newElements);\r\n            element.text = text;\r\n            return newElements;\r\n        });\r\n    };\r\n\r\n    const getElementByIndex = (index, elements) => {\r\n        const indexes = index.split('-').map(i => parseInt(i));\r\n        let result = null;\r\n\r\n        const traverse = (arr, idx) => {\r\n            const i = idx.shift();\r\n            const el = arr[i];\r\n\r\n            if (idx.length === 0) {\r\n                result = el;\r\n            } else {\r\n                traverse(el.children, idx);\r\n            }\r\n        }\r\n\r\n        traverse(elements, indexes);\r\n\r\n        return result;\r\n    }\r\n\r\n    const handleAddElement = (type, parentIndex = null, dropIndex = null, meta, props) => {\r\n        addElement(type, parentIndex, dropIndex, meta, props);\r\n        // cleanupElements();\r\n    };\r\n\r\n    const handleAddElements = (elements) => {\r\n        addElements(elements);\r\n        // cleanupElements();\r\n    };\r\n\r\n    function filterContentSlots(nodes) {\r\n        return nodes.filter(node => {\r\n            if (node.type != \"srs-contentslot\") {\r\n                if(node.children) {\r\n                    node.children = filterContentSlots(node.children);\r\n                }\r\n                return true;\r\n            } else {\r\n                //If the node is a contentslot, check if an element is already added with the same slotname to discard this node otherwise need to keep it \r\n                const slotnames = new Set();\r\n                for (const sibling of nodes) {\r\n                    if (sibling.type !== \"srs-contentslot\") {\r\n                        if (!slotnames.has(sibling.props.slotname || \"default\")) {\r\n                            slotnames.add(sibling.props.slotname || \"default\");\r\n                        }\r\n                    }\r\n                }\r\n                const slotname = node.props?.slot_details?.name || \"default\";\r\n                return !slotnames.has(slotname);\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleUpdateElement = (elementIndex = null, props, children, elementType) => {\r\n        setElements((prevElements) => {\r\n            const newElements = [...prevElements];\r\n            if (elementIndex) {\r\n                const elementToUpdate = getElementByIndex(elementIndex, newElements);\r\n                elementToUpdate.type = elementType || elementToUpdate.type;\r\n                elementToUpdate.props = { ...elementToUpdate.props, ...props };\r\n                if(children) {\r\n                    elementToUpdate.children = children;\r\n                }\r\n            }\r\n            return newElements;\r\n        });\r\n    };\r\n\r\n    const handleMoveElement = (sourceIndex, destinationIndex) => {\r\n        moveElement(sourceIndex, destinationIndex);\r\n    };\r\n\r\n    const handleDeleteElement = (index) => {\r\n        deleteElement(index);\r\n    };\r\n\r\n    const handleSetElementText = (index, text) => {\r\n        setElementText(index, text);\r\n    };\r\n\r\n    const handleDragStart = (event, dragIndex) => {\r\n        // event.preventDefault();\r\n\r\n        if (!dragElementIndx) {\r\n            dragElementIndx = dragIndex;\r\n            console.log(\"handleDragStart \", dragIndex)\r\n        }\r\n        // if (!event.dataTransfer.getData(\"text/plain\"))\r\n        //     event.dataTransfer.setData(\"text/plain\", dragIndex);\r\n    };\r\n\r\n    const handleDragOver = (event, dropIndex) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = \"move\";\r\n        event.currentTarget.classList.add(\"drag-over\");\r\n    };\r\n\r\n    const handleDragLeave = (event) => {\r\n        event.currentTarget.classList.remove(\"drag-over\");\r\n    };\r\n\r\n    const handleDrop = (event, dropIndex) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        event.currentTarget.classList.remove(\"drag-over\");\r\n        const dragIndex = dragElementIndx; //event.dataTransfer.getData(\"text/plain\");\r\n        handleMoveElement(dragIndex, dropIndex);\r\n    };\r\n\r\n    const handleElementClick = (element) => {\r\n        setSelectedElement(element);\r\n    };\r\n\r\n    let elementProps = {\r\n        selectedElement, handleDragStart, handleDrop, handleDragOver, handleElementClick, handleAddElement, handleAddElements, handleUpdateElement, handleDeleteElement,\r\n        handleSetElementText, handleDragLeave, componentMetaData, isDraggable, setIsDraggable\r\n    };\r\n    return componentsRegistered ? (\r\n        <>\r\n            <div className=\"page-builder\">\r\n                <div className=\"page-canvas\">\r\n                    {elements.map((element, index) => (\r\n                        <Element key={index} elementData={element} index={index.toString()} selected={element.elementId === (selectedElement?.elementId || \"-1\")} {...elementProps} theme={props.theme} />\r\n                    ))}\r\n                    {elements.length == 0 ? (<div className=\"add-element-buttons\">\r\n                        <AddElementPopover handleAddElement={handleAddElement} handleUpdateElement={handleUpdateElement} index=\"\" metadata={componentMetaData} isNew={true} theme={props.theme} setIsDraggable={setIsDraggable} />\r\n                    </div>) : null}\r\n                </div>\r\n            </div>\r\n        </>\r\n    ) : (<>\r\n        <CodeSnippetSkeleton type=\"single\" style={{ marginBottom: 8 }} />\r\n        <CodeSnippetSkeleton type=\"multi\" />\r\n    </>);\r\n};\r\n\r\n\r\nconst styles = `\r\n\r\n  .json-editor-actions {\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n  }\r\n\r\n  .ele-container-hover {\r\n    border: 1px solid var(--cds-text-secondary);\r\n    color: var(--cds-background) !important;\r\n    padding: 5px;\r\n  }\r\n\r\n  .element-glass {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    opacity: 0\r\n  }\r\n\r\n  .element-actions {\r\n    visibility: hidden;\r\n    display: flex;\r\n    justify-content: center;\r\n    color: var(--cds-text-secondary);\r\n    padding: 5px;\r\n    top: 40%;\r\n    left: 48%;\r\n    position: absolute;\r\n  }\r\n\r\n  .ele-container-hover > .element-glass {\r\n    background-color: var(--cds-field) !important;\r\n    opacity: 1 !important;\r\n  }\r\n\r\n  .ele-container-hover > .element-glass > .element-actions {\r\n    visibility: visible !important;\r\n  }\r\n\r\n  .cds--search {\r\n    width: 80% !important;\r\n    padding: 5px !important;\r\n  }\r\n\r\n  .cds--search-close {\r\n    padding: 5px !important;\r\n    margin-top: 5px !important;\r\n  }\r\n\r\n  .element-popover {\r\n    margin-top: 3rem;\r\n    border: 1px solid var(--cds-text-secondary);\r\n    width: 20rem !important;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    min-height: 30rem;\r\n    max-height: 40rem;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  .element-popover.popover-fullscreen {\r\n    width: 40vw !important;\r\n    max-width: 100vw !important;\r\n    height:80vw !important;\r\n  }\r\n\r\n  .element-btn-container {\r\n    padding: 5px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .element-btn {\r\n    background-color: var(--cds-background) !important;\r\n    color: var(--cds-text-primary,#161616) !important;\r\n    margin: 5px !important;\r\n    width: 44% !important;\r\n  }\r\n\r\n  .section-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n\r\n  .page-builder {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 10px;\r\n    padding: 10px;\r\n    border: 2px solid black;\r\n  }\r\n  \r\n  .page-canvas {\r\n    width: 100%;\r\n  }\r\n\r\n  .props-panel {\r\n    width: 19%;\r\n  }\r\n\r\n  .element {\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-radius: 5px;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    align-items: stretch;\r\n    width: 100%;\r\n    pointer-events: all;\r\n  }\r\n\r\n  .element-slot-actions {\r\n    position: absolute;\r\n    text-align: center;\r\n    top: 0px;\r\n    z-index: 0;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    margin: 2px;\r\n    height: 40px;\r\n    border: 1px dotted var(--cds-background);\r\n    background-color: var(--cds-text-secondary,#161616);\r\n    padding: 5px;\r\n  }\r\n\r\n  .element-container {\r\n    position: relative;\r\n  }\r\n\r\n//   .element-container:hover {\r\n//     border: 1px solid var(--cds-text-secondary);\r\n//   }\r\n  \r\n  .drag-over {\r\n    background-color: #ddd;\r\n  }\r\n  \r\n  .text-element {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n    cursor: text;\r\n  }\r\n  \r\n  .text-element.editing {\r\n    cursor: auto;\r\n    border: 2px solid blue;\r\n  }\r\n  \r\n  .section-element {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    padding: 10px;\r\n    border: 2px solid black;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .add-element-buttons {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 10px;\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    border: 2px dotted white;\r\n    justify-content: center;\r\n    background-color: var(--cds-text-secondary);\r\n    padding: 10px;\r\n}\r\n  \r\n.delete-element-button {\r\n    background-color: #ff0000;\r\n    color: #ffffff;\r\n    border: none;\r\n    border-radius: 50%;\r\n    width: 25px;\r\n    height: 25px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n}\r\n\r\n.properties-panel {\r\n    padding: 20px;\r\n}\r\n\r\n.properties-panel-header {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    background-color: var(--cds-text-secondary);\r\n    color: var(--cds-background,#ffffff)!important;\r\n    position: sticky;\r\n    top: 0px;\r\n    z-index: 100;\r\n}\r\n\r\n.properties-panel-label {\r\n    font-weight: 500;\r\n    padding: 10px;\r\n}\r\n\r\n.properties-panel-actions {\r\n    display: flex;\r\n    flex-flow: row-reverse;\r\n}\r\n\r\n  \r\n`\r\nconst props = [{\r\n    name: \"page_id\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsUIStudio), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["processComponentProperties","props","result","Object","keys","map","propKey","JSON","parse","err","getUniqueElementId","replace","c","r","Math","random","toString","dispatchedEvents","EventAPI","SrsCheckbox","ref","_useState2","_slicedToArray","useState","checked","value","isChecked","setIsChecked","useEffect","setValue","elementid","React","Checkbox","labelText","label","id","onChange","evt","payload","dispatchEvent","styles","name","defaultValue","type","slots","WrappedComponent","wrapper","SrsTextArea","inputValue","setInputValue","style","TextArea","rows","cols","disabled","placeholder","readOnly","readonly","onBlur","_evt$target","target","_evt$target2","_evt$target3","_evt$target4","Element","_ref","_element$props","_element$props2","elementData","index","selected","selectedElement","handleDragStart","handleDrop","handleDragOver","handleElementClick","handleAddElement","handleAddElements","handleUpdateElement","handleDeleteElement","handleSetElementText","handleDragLeave","componentMetaData","theme","setIsDraggable","isDraggable","isEditing","setIsEditing","element","eleContainerRef","useRef","elementEl","getComponentToRender","elementElProps","handleDoubleClick","handleBlur","event","textContent","elementMetaData","className","_extends","draggable","onDragOver","onDragLeave","zIndex","parseInt","replaceAll","onClick","closest","getAttribute","Close","size","border","borderRadius","backgroundColor","color","AddElementPopover","elementType","elementProps","metadata","isNew","parentElement","isContainer","isSlot","slotDetails","slot_details","JSONEditor","applyElementData","updatedElementData","children","_ref2","_useState4","open","setOpen","_useState6","setElementData","_useState8","fullscreen","setFullscreen","closePopover","stopPropagation","ReactComponent","withStyles","SrsTextAreaStyles","Popover","autoAlign","caret","dropShadow","highContrast","onClose","Flow","openPopover","PopoverContent","position","right","top","Minimize","prevValue","Maximize","Button","kind","elementsData","elementId","elementItem","stringify","title","prevElementData","console","error","_ref3","componentToRender","NodeTag","length","childElement","childIndex","key","concat","parentIndex","elementSlotData","remainingSlots","_toConsumableArray","nonSlottedChildElements","slottedElementsAdded","_childElement$props","_childElement$props2","slotname","filter","s","push","width","pointerEvents","contentEditable","getSlotName","_ref4","_ref4$elementType","_ref4$elementProps","_ref4$isNew","_useState10","_useState12","mode","setMode","extraProps","_useState14","_objectSpread","_useState16","elementIndex","_useState18","selectedElementType","setSelectedElementType","listContents","ElementListPanel","openProps","metaProps","_metadata$type","getElementPropsMeta","propsContent","PropertiesPanel","meta","applyChange","lastIndex","lastIndexOf","parentIndx","slice","dropIndx","addElementAndClosePopover","openElementList","Add","Edit","_ref5","_useState20","setElementProps","_useState22","filteredProps","metaProp","filteredProp","elementPropMetadata","SrsInputStyles","SrsInput","prevProps","_defineProperty","log","SrsCheckboxStyles","val","hasOwnProperty","padding","_ref6","_useState24","_useState26","setFilter","elementNames","componentLookup","sortedElements","elementName","order","elementList","sort","a","b","el","toLowerCase","indexOf","Search","closeButtonLabelText","prevVal","_regeneratorRuntime","exports","Op","prototype","hasOwn","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","_typeof","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","arr","Array","isArray","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","from","test","len","arr2","handleEvent","composed","composedPath","interceptEventTarget","SrsUIStudio","eventBinding","setEventBinding","setSelectedElement","componentsRegistered","setComponentsRegistered","setComponentMetaData","dragElementIndx","elements","setElements","current","addEventListener","registerAllComponents","removeEventListener","removeListeners","_callee","_context","loadComponentsMetaData","register","_callee2","componentNames","componentsMetaData","componentNameIndx","componentName","componentData","compStyles","compProps","compEvents","compSlots","_context2","t0","t1","component","addElement","elementPropsMeta","newElement","elementProp","remainingSlot","slotElement","prevElements","filterContentSlots","newElements","getElementByIndex","indexes","split","traverse","idx","shift","nodes","node","_node$props","_node$props$slot_deta","_step","slotnames","Set","_iterator","_createForOfIteratorHelper","sibling","has","add","e","f","elementToUpdate","handleMoveElement","sourceIndex","destinationIndex","sourceIndexes","destinationIndexes","sourceLevel","destinationLevel","sourceParent","sourceElement","destinationParent","destinationIndexWithinParent","splice","moveElement","dragIndex","dropIndex","preventDefault","currentTarget","classList","remove","dataTransfer","dropEffect","_elementItem$parentIn","_elementItem$dropIndx","_elementItem$elementP","_elementItem$elementP2","indexParts","_componentMetaData$pa","parentSlots","childEl","_childEl$props","_childEl$props$slot_d","childItem","indx","deleteElement","text","setElementText","CodeSnippetSkeleton","marginBottom"],"sourceRoot":""}