{"version":3,"file":"static/js/mui-basic-Accordion.17750358.chunk.js","mappings":"s1FASA,IAAMA,EAAmB,CAACC,EAAAA,EAAAA,wBAEpBC,EAAkB,SAAUC,EAAOC,GACvC,IAAIC,EAAcC,EAAAA,EAAA,GAAOH,GAAK,IAAEI,GAAIJ,EAAMK,UAAWC,MAAON,EAAMO,WACnBC,EAAAC,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAxCC,EAAQH,EAAA,GAAEI,EAAWJ,EAAA,GAS5B,OACEK,EAAAA,cAACC,EAAAA,EAASC,EAAA,GAAKb,EAAc,CAAES,SAAUA,EAAUK,SARhC,SAACC,EAAOC,GAC3BN,EAAYM,GACRlB,EAAMmB,YACRnB,EAAMoB,cAActB,EAAAA,EAAAA,uBAAiC,CAAEuB,QAAS,CAACjB,GAAIJ,EAAMI,IAAMJ,EAAMK,UAAWM,SAAUO,IAEhH,IAIIL,EAAAA,cAACS,EAAAA,EAAgB,CACfC,WAAYV,EAAAA,cAACW,EAAAA,EAAU,MACvBpB,GAAIJ,EAAMK,UAAY,WACtBQ,EAAAA,cAAA,QAAMY,KAAK,uBAEbZ,EAAAA,cAACa,EAAAA,EAAgB,KACfb,EAAAA,cAAA,QAAMY,KAAK,uBAEbZ,EAAAA,cAACc,EAAAA,EAAgB,KACfd,EAAAA,cAAA,QAAMY,KAAK,uBAInB,EAEMG,EAAM,wDAIN5B,EAAQ,CACZ,CACEyB,KAAM,WACNI,cAAc,EACdC,KAAM,WAER,CACEL,KAAM,aACNI,cAAc,EACdC,KAAM,WAER,CACEL,KAAM,WACNI,cAAc,EACdC,KAAM,WAER,CACEL,KAAM,KACNI,aAAc,CAAC,EACfC,KAAM,WAKJC,EAAQ,CACZ,CACEN,KAAM,oBACNO,QAAS,IAEX,CACEP,KAAM,oBACNO,QAAS,KAIPC,GAAmBC,EAAAA,EAAAA,GACvBrB,EAAAA,WAAiBd,GACjBC,EACA,M","sources":["components/mui/basic/Accordion.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport AccordionActions from '@mui/material/AccordionActions';\r\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\n\r\nconst dispatchedEvents = [EventAPI.MUI_ACCORDION_EXPANDED];\r\n\r\nconst SrsMuiAccordion = function (props, ref) {\r\n  let componentProps = {...props, id: props.elementid, theme: props.muiTheme};\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleChange = (event, isExpanded) => {\r\n    setExpanded(isExpanded);\r\n    if(!props.controlled) {\r\n      props.dispatchEvent(EventAPI.MUI_ACCORDION_EXPANDED, { payload: {id: props.id || props.elementid, expanded: isExpanded}});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Accordion {...componentProps} expanded={expanded} onChange={handleChange}>      \r\n      <AccordionSummary\r\n        expandIcon={<ExpandMore/>}\r\n        id={props.elementid + \"_header\"}>\r\n        <slot name=\"accordion_summary\" />\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <slot name=\"accordion_details\" />\r\n      </AccordionDetails>\r\n      <AccordionActions>\r\n        <slot name=\"accordion_actions\" />\r\n      </AccordionActions>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nconst styles = `\r\n  /* Custom styles for the Accordion component */\r\n`;\r\n\r\nconst props = [\r\n  {\r\n    name: \"expanded\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"controlled\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"disabled\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"sx\",\r\n    defaultValue: {},\r\n    type: \"object\"\r\n  }\r\n  // Add other props specific to Accordion if needed\r\n];\r\n\r\nconst slots = [\r\n  {\r\n    name: \"accordion_summary\",\r\n    allowed: [],\r\n  },\r\n  {\r\n    name: \"accordion_details\",\r\n    allowed: [],\r\n  },\r\n];\r\n\r\nconst WrappedComponent = wrapper(\r\n  React.forwardRef(SrsMuiAccordion),\r\n  props,\r\n  \"mui\"\r\n);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","EventAPI","SrsMuiAccordion","props","ref","componentProps","_objectSpread","id","elementid","theme","muiTheme","_useState2","_slicedToArray","useState","expanded","setExpanded","React","Accordion","_extends","onChange","event","isExpanded","controlled","dispatchEvent","payload","AccordionSummary","expandIcon","ExpandMore","name","AccordionDetails","AccordionActions","styles","defaultValue","type","slots","allowed","WrappedComponent","wrapper"],"sourceRoot":""}