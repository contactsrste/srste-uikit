{"version":3,"file":"static/js/mui-basic-AutoComplete.f297e95a.chunk.js","mappings":"qzFAMA,IAAMA,EAAmB,GAEnBC,EAAqB,SAAUC,EAAOC,GAC1C,IAAkEC,EAAAC,GAAxBC,EAAAA,EAAAA,UAASJ,EAAMK,UAAS,GAA3DC,EAAaJ,EAAA,GAAEK,EAAgBL,EAAA,IAQtCM,EAAAA,EAAAA,YAAU,WACLF,GAAiBN,EAAMK,UACxBE,EAAiBP,EAAMK,SAE3B,GAAG,CAACL,EAAMK,WAEV,IACII,EAAcC,EAAAA,EAAA,GAAOV,GAAK,IAAEW,QAASX,EAAMW,SAAW,GAAIC,MAAOZ,EAAMa,WAC3E,OACEC,EAAAA,cAACC,EAAAA,EAAYC,EAAA,GAAKP,EAAc,CAAEQ,YAHX,SAACC,GAAM,OAAKJ,EAAAA,cAACK,EAAAA,EAASH,EAAA,GAAKE,EAAM,CAAEE,MAAOpB,EAAMoB,MAAOC,WAAUX,EAAAA,EAAA,GAAMQ,EAAOG,YAAU,IAAEC,aAAc,mBAAkB,EAG9EC,SAfxC,SAACC,EAAKC,GAEjClB,EAA6B,OAAZkB,QAAY,IAAZA,OAAY,EAAZA,EAAcC,OAC/B1B,EAAM2B,cAAcC,EAAAA,EAAAA,mBAA6B,CAAEC,QAAS,CAACC,GAAI9B,EAAM8B,IAAM9B,EAAM+B,UAAWL,MAAmB,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcC,QACrH,EAWqGA,MAAOpB,IACxGQ,EAAAA,cAAA,aAGN,EAEMkB,EAAM,2DAINhC,EAAQ,CACZ,CACEiC,KAAM,QACNC,aAAc,GACdC,KAAM,UAER,CACEF,KAAM,KACNC,aAAc,GACdC,KAAM,UAER,CACEF,KAAM,UACNC,aAAc,GACdC,KAAM,UAER,CACEF,KAAM,WACNC,aAAc,KACdC,KAAM,UAER,CACEF,KAAM,YACNC,aAAc,GACdC,KAAM,UAER,CACEF,KAAM,KACNC,aAAc,CAAC,EACfC,KAAM,WAKJC,EAAQ,CACZ,CACEH,KAAM,UACNI,QAAS,KAIPC,GAAmBC,EAAAA,EAAAA,GAAQzB,EAAAA,WAAiBf,GAAqBC,EAAO,M","sources":["components/mui/basic/AutoComplete.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst SrsMuiAutocomplete = function (props, ref) {\r\n  const [selectedValue, setSelectedValue] = useState(props.selected);\r\n\r\n  const handleSelectedChange = (evt, changedValue) => {\r\n    // props.setValue(changedValue);\r\n    setSelectedValue(changedValue?.value);\r\n    props.dispatchEvent(EventAPI.MUI_SELECT_CHANGED, { payload: {id: props.id || props.elementid, value: changedValue?.value}});\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(selectedValue != props.selected) {\r\n      setSelectedValue(props.selected);\r\n    }\r\n  }, [props.selected])\r\n\r\n  let defaultRenderInput = (params) => <TextField {...params} label={props.label} inputProps={{...params.inputProps, autoComplete: 'new-password'}}/>\r\n  let componentProps = {...props, options: props.options || [], theme: props.muiTheme};\r\n  return (\r\n    <Autocomplete {...componentProps} renderInput={defaultRenderInput} onChange={handleSelectedChange} value={selectedValue}>\r\n      <slot />\r\n    </Autocomplete>\r\n  );\r\n}\r\n\r\nconst styles = `\r\n  /* Custom styles for the Autocomplete component */\r\n`;\r\n\r\nconst props = [\r\n  {\r\n    name: \"label\",\r\n    defaultValue: \"\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"id\",\r\n    defaultValue: \"\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"options\",\r\n    defaultValue: [],\r\n    type: \"object\",\r\n  },\r\n  {\r\n    name: \"selected\",\r\n    defaultValue: null,\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"className\",\r\n    defaultValue: \"\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"sx\",\r\n    defaultValue: {},\r\n    type: \"object\",\r\n  },\r\n  // Add other props specific to Autocomplete if needed\r\n];\r\n\r\nconst slots = [\r\n  {\r\n    name: \"default\",\r\n    allowed: [],\r\n  },\r\n];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsMuiAutocomplete), props, \"mui\");\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n"],"names":["dispatchedEvents","SrsMuiAutocomplete","props","ref","_useState2","_slicedToArray","useState","selected","selectedValue","setSelectedValue","useEffect","componentProps","_objectSpread","options","theme","muiTheme","React","Autocomplete","_extends","renderInput","params","TextField","label","inputProps","autoComplete","onChange","evt","changedValue","value","dispatchEvent","EventAPI","payload","id","elementid","styles","name","defaultValue","type","slots","allowed","WrappedComponent","wrapper"],"sourceRoot":""}