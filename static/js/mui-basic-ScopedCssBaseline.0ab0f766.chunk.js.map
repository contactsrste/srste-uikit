{"version":3,"file":"static/js/mui-basic-ScopedCssBaseline.0ab0f766.chunk.js","mappings":"0ZAEO,SAASA,EAAiCC,GAC/C,OAAOC,EAAAA,EAAAA,GAAqB,uBAAwBD,EACtD,EACiCE,EAAAA,EAAAA,GAAuB,uBAAwB,CAAC,SAAjF,I,WCHMC,EAAY,CAAC,YAAa,YAAa,qBAmBvCC,GAAwBC,EAAAA,EAAAA,IAAO,MAAO,CAC1CC,KAAM,uBACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOC,IAAI,GAHrBL,EAI3B,SAAAM,GAGG,IAFJC,EAAKD,EAALC,MACAC,EAAUF,EAAVE,WAEMC,EAAoB,CAAC,EAS3B,OARID,EAAWE,mBAAqBH,EAAMI,cACxCC,OAAOC,QAAQN,EAAMI,cAAcG,SAAQ,SAAAC,GAAmB,IACxDC,EADwDC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjBI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAEtDR,EAAkB,IAADY,OAAKd,EAAMe,uBAAuBH,GAAKI,QAAQ,OAAQ,MAAS,CAC/EC,YAAmD,OAArCR,EAAkBI,EAAOK,cAAmB,EAAST,EAAgBU,KAEvF,KAEKC,EAAAA,EAAAA,GAAS,CAAC,GAAGC,EAAAA,EAAAA,IAAKrB,EAAOC,EAAWE,oBAAoBmB,EAAAA,EAAAA,IAAKtB,GAAQ,CAC1E,+BAAgC,CAC9BuB,UAAW,WAEb,gBAAiB,CACfC,WAAYxB,EAAMyB,WAAWC,iBAE9BxB,EACL,IACMyB,EAAiCC,EAAAA,YAAiB,SAA2BC,EAASC,GAC1F,IAAMlC,GAAQmC,EAAAA,EAAAA,GAAc,CAC1BnC,MAAOiC,EACPnC,KAAM,yBAGJsC,EAEEpC,EAFFoC,UAASC,EAEPrC,EADFsC,UAAAA,OAAS,IAAAD,EAAG,MAAKA,EAEnBE,GAAQC,EAAAA,EAAAA,GAA8BxC,EAAOL,GACzCU,GAAamB,EAAAA,EAAAA,GAAS,CAAC,EAAGxB,EAAO,CACrCsC,UAAAA,IAEIG,EAhDkB,SAAApC,GACxB,IACEoC,EACEpC,EADFoC,QAKF,OAAOC,EAAAA,EAAAA,GAHO,CACZxC,KAAM,CAAC,SAEoBX,EAAkCkD,EACjE,CAwCkBE,CAAkBtC,GAClC,OAAoBuC,EAAAA,EAAAA,KAAKhD,GAAuB4B,EAAAA,EAAAA,GAAS,CACvDqB,GAAIP,EACJF,WAAWU,EAAAA,EAAAA,GAAKL,EAAQvC,KAAMkC,GAC9BF,IAAKA,EACL7B,WAAYA,GACXkC,GACL,IAkCA,I,oOCjGA,IAAMQ,EAAmB,GAEnBC,EAA0B,SAAUhD,EAAOkC,GAC/C,OACEF,EAAAA,cAACD,EAAiBP,EAAA,GAAKxB,EAAK,CAAEI,MAAOJ,EAAMiD,WACzCjB,EAAAA,cAAA,aAGN,EAEM/B,EAAM,mEAIND,EAAQ,CAEZ,CACEF,KAAM,KACNoD,aAAc,CAAC,EACfC,KAAM,WAIJC,EAAQ,CACZ,CACEtD,KAAM,UACNuD,QAAS,KAIPC,GAAmBC,EAAAA,EAAAA,GACvBvB,EAAAA,WAAiBgB,GACjBhD,EACA,M","sources":["../node_modules/@mui/material/ScopedCssBaseline/scopedCssBaselineClasses.js","../node_modules/@mui/material/ScopedCssBaseline/ScopedCssBaseline.js","components/mui/basic/ScopedCssBaseline.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getScopedCssBaselineUtilityClass(slot) {\n  return generateUtilityClass('MuiScopedCssBaseline', slot);\n}\nconst scopedCssBaselineClasses = generateUtilityClasses('MuiScopedCssBaseline', ['root']);\nexport default scopedCssBaselineClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"enableColorScheme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { html, body } from '../CssBaseline/CssBaseline';\nimport { getScopedCssBaselineUtilityClass } from './scopedCssBaselineClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getScopedCssBaselineUtilityClass, classes);\n};\nconst ScopedCssBaselineRoot = styled('div', {\n  name: 'MuiScopedCssBaseline',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  const colorSchemeStyles = {};\n  if (ownerState.enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[`&${theme.getColorSchemeSelector(key).replace(/\\s*&/, '')}`] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  return _extends({}, html(theme, ownerState.enableColorScheme), body(theme), {\n    '& *, & *::before, & *::after': {\n      boxSizing: 'inherit'\n    },\n    '& strong, & b': {\n      fontWeight: theme.typography.fontWeightBold\n    }\n  }, colorSchemeStyles);\n});\nconst ScopedCssBaseline = /*#__PURE__*/React.forwardRef(function ScopedCssBaseline(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiScopedCssBaseline'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ScopedCssBaselineRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ScopedCssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   */\n  enableColorScheme: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ScopedCssBaseline;","import React from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport ScopedCssBaseline from \"@mui/material/ScopedCssBaseline\";\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst SrsMuiScopedCssBaseline = function (props, ref) {\r\n  return (\r\n    <ScopedCssBaseline {...props} theme={props.muiTheme}>\r\n      <slot />\r\n    </ScopedCssBaseline>\r\n  );\r\n};\r\n\r\nconst styles = `\r\n  /* Custom styles for the MuiScopedCssBaseline component */\r\n`;\r\n\r\nconst props = [\r\n  // Add props specific to MuiScopedCssBaseline if needed\r\n  {\r\n    name: \"sx\",\r\n    defaultValue: {},\r\n    type: \"object\"\r\n  }\r\n];\r\n\r\nconst slots = [\r\n  {\r\n    name: \"default\",\r\n    allowed: [],\r\n  },\r\n];\r\n\r\nconst WrappedComponent = wrapper(\r\n  React.forwardRef(SrsMuiScopedCssBaseline),\r\n  props,\r\n  \"mui\"\r\n);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n"],"names":["getScopedCssBaselineUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ScopedCssBaselineRoot","styled","name","overridesResolver","props","styles","root","_ref","theme","ownerState","colorSchemeStyles","enableColorScheme","colorSchemes","Object","entries","forEach","_ref2","_scheme$palette","_ref3","_slicedToArray","key","scheme","concat","getColorSchemeSelector","replace","colorScheme","palette","mode","_extends","html","body","boxSizing","fontWeight","typography","fontWeightBold","ScopedCssBaseline","React","inProps","ref","useThemeProps","className","_props$component","component","other","_objectWithoutPropertiesLoose","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","dispatchedEvents","SrsMuiScopedCssBaseline","muiTheme","defaultValue","type","slots","allowed","WrappedComponent","wrapper"],"sourceRoot":""}