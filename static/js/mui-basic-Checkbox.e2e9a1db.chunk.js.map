{"version":3,"file":"static/js/mui-basic-Checkbox.e2e9a1db.chunk.js","mappings":"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","sources":["components/mui/basic/Checkbox.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import React from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst SrsMuiCheckbox = function (props, ref) {\r\n  return <Checkbox {...props} theme={props.muiTheme}/>;\r\n};\r\n\r\nconst styles = `\r\n  /* Custom styles for the MuiCheckbox component */\r\n`;\r\n\r\nconst props = [\r\n  {\r\n    name: \"checked\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"color\",\r\n    defaultValue: \"primary\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"disabled\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"inputProps\",\r\n    defaultValue: {},\r\n    type: \"object\",\r\n  },\r\n  {\r\n    name: \"indeterminate\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"onChange\",\r\n    defaultValue: null,\r\n    type: \"function\",\r\n  },\r\n  {\r\n    name: \"sx\",\r\n    defaultValue: {},\r\n    type: \"object\"\r\n  }\r\n  // Add other props specific to Checkbox if needed\r\n];\r\n\r\nconst slots = [\r\n  {\r\n    name: \"default\",\r\n    allowed: [],\r\n  },\r\n];\r\n\r\nconst WrappedComponent = wrapper(\r\n  React.forwardRef(SrsMuiCheckbox),\r\n  props,\r\n  \"mui\"\r\n);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["dispatchedEvents","SrsMuiCheckbox","props","ref","React","Checkbox","_extends","theme","muiTheme","styles","name","defaultValue","type","slots","allowed","WrappedComponent","wrapper","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","ownerState","root","indeterminate","color","concat","capitalize","_ref","_ref2","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","_defineProperty","checkboxClasses","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","className","other","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","useUtilityClasses","fontSize","clsx","FormControlContext","undefined","useFormControl","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","marginLeft","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","autoFocus","checkedProp","checked","defaultChecked","disabledProp","_props$disableFocusRi","disableFocusRipple","_props$edge","id","inputRef","onBlur","onChange","onFocus","readOnly","_props$required","required","tabIndex","value","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","hasLabelFor","input","_jsxs","component","centerRipple","focusRipple","role","event","children","nativeEvent","defaultPrevented","newChecked","target"],"sourceRoot":""}