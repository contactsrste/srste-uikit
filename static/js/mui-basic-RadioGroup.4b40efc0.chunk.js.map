{"version":3,"file":"static/js/mui-basic-RadioGroup.4b40efc0.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/RadioGroup/RadioGroup.js","components/mui/basic/RadioGroup.js","../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/FormControl/formControlState.js","../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../node_modules/@mui/material/utils/useControlled.js","../node_modules/@mui/material/utils/useForkRef.js","../node_modules/@mui/material/utils/useId.js","../node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/utils/esm/setRef.js","../node_modules/@mui/utils/esm/useControlled.js","../node_modules/@mui/utils/esm/useForkRef.js","../node_modules/@mui/utils/esm/useId.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import React from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst SrsMuiRadioGroup = function (props, ref) {\r\n  return (\r\n    <RadioGroup {...props} theme={props.muiTheme}>\r\n      <slot />\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nconst styles = `\r\n  /* Custom styles for the MuiRadioGroup component */\r\n`;\r\n\r\nconst props = [\r\n  {\r\n    name: \"name\",\r\n    defaultValue: \"\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"value\",\r\n    defaultValue: \"\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"onChange\",\r\n    defaultValue: null,\r\n    type: \"function\",\r\n  },\r\n  {\r\n    name: \"sx\",\r\n    defaultValue: {},\r\n    type: \"object\"\r\n  }\r\n  // Add other props specific to RadioGroup if needed\r\n];\r\n\r\nconst slots = [\r\n  {\r\n    name: \"default\",\r\n    allowed: [\"srs-mui-radio\"],\r\n  },\r\n];\r\n\r\nconst WrappedComponent = wrapper(\r\n  React.forwardRef(SrsMuiRadioGroup),\r\n  props,\r\n  \"mui\"\r\n);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import { unstable_useControlled as useControlled } from '@mui/utils';\nexport default useControlled;","import { unstable_useForkRef as useForkRef } from '@mui/utils';\nexport default useForkRef;","import { unstable_useId as useId } from '@mui/utils';\nexport default useId;","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","import * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId' + ''];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}"],"names":["_excluded","RadioGroup","React","props","ref","actions","children","defaultValue","nameProp","name","onChange","valueProp","value","other","_objectWithoutPropertiesLoose","rootRef","_useControlled","useControlled","controlled","default","_useControlled2","_slicedToArray","setValueState","focus","input","current","querySelector","handleRef","useForkRef","useId","contextValue","event","target","_jsx","RadioGroupContext","FormGroup","_extends","role","dispatchedEvents","SrsMuiRadioGroup","theme","muiTheme","styles","type","slots","allowed","WrappedComponent","wrapper","FormControlContext","undefined","formControlState","_ref","states","muiFormControl","reduce","acc","state","useFormControl","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","FormGroupRoot","styled","overridesResolver","ownerState","root","row","display","flexDirection","flexWrap","inProps","useThemeProps","className","_props$row","fcs","error","classes","composeClasses","useUtilityClasses","clsx","componentName","globalStatePrefix","arguments","length","result","forEach","setRef","defaultProp","isControlled","_React$useState","_React$useState2","valueState","setValue","newValue","_len","refs","Array","_key","every","instance","globalId","maybeReactUseId","idOverride","reactId","defaultId","setDefaultId","id","concat","useGlobalId"],"sourceRoot":""}