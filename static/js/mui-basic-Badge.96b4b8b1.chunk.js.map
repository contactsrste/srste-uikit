{"version":3,"file":"static/js/mui-basic-Badge.96b4b8b1.chunk.js","mappings":"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","sources":["components/mui/basic/Badge.js","../node_modules/@mui/base/utils/appendOwnerState.js","../node_modules/@mui/base/utils/extractEventHandlers.js","../node_modules/@mui/base/utils/isHostComponent.js","../node_modules/@mui/base/utils/resolveComponentProps.js","../node_modules/@mui/base/utils/omitEventHandlers.js","../node_modules/@mui/base/utils/useSlotProps.js","../node_modules/@mui/base/utils/mergeSlotProps.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/base/useBadge/useBadge.js","../node_modules/@mui/utils/esm/usePreviousProps.js"],"sourcesContent":["import React from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport Badge from '@mui/material/Badge';\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst SrsMuiBadge = function (props, ref) {\r\n  let componentProps = {...props, theme: props.muiTheme};\r\n  return (\r\n    <Badge {...componentProps}>\r\n      <slot />\r\n    </Badge>\r\n  );\r\n}\r\n\r\nconst styles = `\r\n  /* Custom styles for the Badge component */\r\n`;\r\n\r\nconst props = [\r\n  {\r\n    name: \"badgeContent\",\r\n    defaultValue: \"\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"color\",\r\n    defaultValue: \"primary\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"variant\",\r\n    defaultValue: \"standard\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"invisible\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"overlap\",\r\n    defaultValue: \"rectangular\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"anchorOrigin\",\r\n    defaultValue: {\r\n      vertical: \"top\",\r\n      horizontal: \"right\",\r\n    },\r\n    type: \"object\",\r\n  },\r\n  {\r\n    name: \"max\",\r\n    defaultValue: 99,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    name: \"showZero\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"sx\",\r\n    defaultValue: {},\r\n    type: \"object\"\r\n  }\r\n  // Add other props specific to Badge if needed\r\n];\r\n\r\nconst slots = [\r\n  {\r\n    name: \"default\",\r\n    allowed: [],\r\n  },\r\n];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsMuiBadge), props, \"mui\");\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport isHostComponent from './isHostComponent';\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nexport default function appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return _extends({}, otherProps, {\n    ownerState: _extends({}, otherProps.ownerState, ownerState)\n  });\n}","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nexport default function extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nexport default function isHostComponent(element) {\n  return typeof element === 'string';\n}","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nexport default function resolveComponentProps(componentProps, ownerState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState);\n  }\n  return componentProps;\n}","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nexport default function omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"elementType\", \"externalSlotProps\", \"ownerState\"];\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport appendOwnerState from './appendOwnerState';\nimport mergeSlotProps from './mergeSlotProps';\nimport resolveComponentProps from './resolveComponentProps';\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nexport default function useSlotProps(parameters) {\n  var _parameters$additiona;\n  const {\n      elementType,\n      externalSlotProps,\n      ownerState\n    } = parameters,\n    rest = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const resolvedComponentsProps = resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps(_extends({}, rest, {\n    externalSlotProps: resolvedComponentsProps\n  }));\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref);\n  const props = appendOwnerState(elementType, _extends({}, mergedProps, {\n    ref\n  }), ownerState);\n  return props;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport extractEventHandlers from './extractEventHandlers';\nimport omitEventHandlers from './omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nexport default function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);\n    const mergedStyle = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n  const mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"classes\", \"component\", \"components\", \"componentsProps\", \"children\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport useBadge from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component,\n      components = {},\n      componentsProps = {},\n      children,\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max: maxProp = 99,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base/react-badge/hooks-api/#use-badge)\n */\nexport default function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;"],"names":["dispatchedEvents","SrsMuiBadge","props","ref","componentProps","_objectSpread","theme","muiTheme","React","Badge","styles","name","defaultValue","type","vertical","horizontal","slots","allowed","WrappedComponent","wrapper","appendOwnerState","elementType","otherProps","ownerState","undefined","isHostComponent","_extends","extractEventHandlers","object","excludeKeys","arguments","length","result","Object","keys","filter","prop","match","includes","forEach","element","resolveComponentProps","omitEventHandlers","_excluded","useSlotProps","parameters","_parameters$additiona","externalSlotProps","rest","_objectWithoutPropertiesLoose","resolvedComponentsProps","_mergeSlotProps","getSlotProps","additionalProps","externalForwardedProps","className","joinedClasses","clsx","mergedStyle","style","internalRef","eventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","mergeSlotProps","mergedProps","useForkRef","getBadgeUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BadgeRoot","styled","overridesResolver","root","position","display","verticalAlign","flexShrink","BadgeBadge","badge","variant","concat","capitalize","anchorOrigin","overlap","color","invisible","_ref3","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","RADIUS_DOT","_defineProperty","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","inProps","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","useThemeProps","_props$anchorOrigin","anchorOriginProp","component","_props$components","components","_props$componentsProp","componentsProps","children","_props$overlap","overlapProp","_props$color","colorProp","_props$invisible","invisibleProp","_props$max","max","maxProp","badgeContentProp","badgeContent","slotProps","_props$showZero","showZero","_props$variant","variantProp","other","_useBadge","_parameters$invisible","_parameters$max","_parameters$showZero","prevProps","usePreviousProps","_ref$max","displayValue","Number","useBadge","invisibleFromHook","displayValueFromHook","_ref12","_ref12$color","_ref12$overlap","_ref12$anchorOrigin","_ref12$variant","classes","_ownerState$classes","composeClasses","useUtilityClasses","RootSlot","Root","BadgeSlot","rootSlotProps","badgeSlotProps","rootProps","as","badgeProps","_jsxs","_jsx","value","current"],"sourceRoot":""}