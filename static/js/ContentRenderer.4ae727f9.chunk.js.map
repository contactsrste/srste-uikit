{"version":3,"file":"static/js/ContentRenderer.4ae727f9.chunk.js","mappings":"ikHAYA,IAAMA,EAAkB,SAACC,EAAOC,GAAS,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAEiDC,EAAAC,GAAvDC,EAAAA,EAAAA,WAAwB,QAAfP,EAAAF,EAAMU,iBAAS,IAAAR,OAAA,EAAfA,EAAiBS,WAAYX,EAAMY,MAAQ,IAAG,GAAhFD,EAAQJ,EAAA,GAAEM,EAAWN,EAAA,GAC2DO,EAAAN,GAAzDC,EAAAA,EAAAA,WAAwB,QAAfN,EAAAH,EAAMU,iBAAS,IAAAP,OAAA,EAAfA,EAAiBY,UAAWf,EAAMe,SAAW,CAAC,GAAE,GAAhFA,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACqEG,EAAAT,GAA7DC,EAAAA,EAAAA,WAAwB,QAAfL,EAAAJ,EAAMU,iBAAS,IAAAN,OAAA,EAAfA,EAAiBc,YAAalB,EAAMkB,WAAa,CAAC,GAAE,GAAxFA,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACoDG,EAAAZ,GAA9CC,EAAAA,EAAAA,WAAwB,QAAfJ,EAAAL,EAAMU,iBAAS,IAAAL,OAAA,EAAfA,EAAiBgB,cAAc,GAAM,GAA3EA,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC8BG,EAAAf,GAA9BC,EAAAA,EAAAA,UAAST,EAAMwB,UAAY,IAAG,GAAvDC,EAAQF,EAAA,GACyCG,GAD5BH,EAAA,GAC4Bf,GAA9BC,EAAAA,EAAAA,UAAST,EAAM2B,OAAS,OAAM,IAA1CC,GAAFF,EAAA,GAAUA,EAAA,IACiCG,EAAArB,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAhDqB,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACmCG,EAAAxB,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAhEwB,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GACwFG,EAAA3B,GAA5FC,EAAAA,EAAAA,WAAS2B,EAAAA,EAAAA,IAA6C,QAAf9B,EAAAN,EAAMU,iBAAS,IAAAJ,OAAA,EAAfA,EAAiBK,WAAYX,EAAMY,MAAQ,KAAO,IAAG,GAArIyB,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GACoBI,EAAA/B,GAAZC,EAAAA,EAAAA,UAAS,CAAC,GAAE,GAArC+B,GAAFD,EAAA,GAAuBA,EAAA,IAC1CE,GAAWC,EAAAA,EAAAA,QAAO,MAC8BC,EAAAnC,GAAdC,EAAAA,EAAAA,UAAS,MAAK,GAA/CmC,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,EAAkB,SAACC,GACpBA,GAAgBC,OAAOC,KAAKF,GAAcG,OAAS,IACpDC,OAAOC,QAAUD,OAAOC,SAAW,CAAC,EACpCD,OAAOC,QAAQlC,UAAYiC,OAAOC,QAAQlC,WAAa,CAAC,EACpC8B,OAAOC,KAAKF,GAClBM,KAAI,SAACC,GACjB,IAAIC,EAAgBR,EAAaO,GAC9BC,IAECJ,OAAOC,QAAQlC,UAAUoC,GADA,iBAAjBC,EACiC,IAAIC,SAAS,gBAAkBD,EAAgB,qCAA/C,GAEAA,EAG/C,KAGFpC,GAAa,SAAAsC,GAAW,OAAIV,CAAY,GAC1C,GAEAW,EAAAA,EAAAA,YAAU,WACRZ,EAAgB5B,EAClB,GAAG,KAEHwC,EAAAA,EAAAA,YAAU,WAAO,IAADC,EAAAC,EAAAC,EACdhD,GAAY,SAAAiD,GAAoB,IAADC,EACzBC,GAAiC,QAAfD,EAAA/D,EAAMU,iBAAS,IAAAqD,OAAA,EAAfA,EAAiBpD,WAAYX,EAAMY,KAEzD,OADAiC,EAAgBiB,GACTE,CACT,IAEAhD,GAAW,SAAAyC,GAAW,IAAAQ,EAAA,OAAmB,QAAfA,EAAAjE,EAAMU,iBAAS,IAAAuD,OAAA,EAAfA,EAAiBlD,UAAWf,EAAMe,OAAO,IACnE+B,GAA+B,QAAfa,EAAA3D,EAAMU,iBAAS,IAAAiD,OAAA,EAAfA,EAAiBzC,YAAalB,EAAMkB,WAAa,CAAC,GAClEI,EAA6B,QAAhBsC,EAAC5D,EAAMU,iBAAS,IAAAkD,OAAA,EAAfA,EAAiBvC,YAC/BO,GAAS,SAAAsC,GAAS,OAAIlE,EAAM2B,KAAK,IACjCwC,SAASC,gBAAgBC,aAAa,oBAAqBrE,EAAM2B,OAC7Dc,EAAS6B,UAAYxC,IACvBC,GAAgB,GAChBU,EAAS6B,QAAQC,iBAAiB,iBAAiB,SAACC,GAClDC,QAAQC,IAAIF,EACd,IACA/B,EAAS6B,QAAQC,iBAAiB,gBAAgB,SAACC,GACjDC,QAAQC,IAAIF,EACd,IACA/B,EAAS6B,QAAQC,iBAAiB,kBAAkB,SAACC,GACnDC,QAAQC,IAAIF,EACd,KAGF,IAAIG,GAA0BvC,EAAAA,EAAAA,IAA6C,QAAfyB,EAAA7D,EAAMU,iBAAS,IAAAmD,OAAA,EAAfA,EAAiBlD,WAAYX,EAAMY,MAC1FqB,IAAwB2C,EAAUD,EAAyBtC,KAC9DC,GAAoB,SAAAuC,GAAO,OAAIF,CAAuB,IACtDzC,GAAwB,SAAA2C,GAAO,OAAI,CAAK,KACxCC,EAAAA,EAAAA,GAASH,EAAyB3E,EAAM2B,OACrCoD,MAAK,SAACC,GACLxC,GAAsB,SAAAqC,GAAO,OAAIG,CAAqB,IACtD9C,GAAwB,SAAA2C,GAAO,OAAI,CAAI,GACzC,IAEN,GAAG,CAAC7E,EAAMU,UAAWV,EAAMY,KAAMZ,EAAMe,QAASf,EAAM2B,QAEtD,IAAIsD,EAASC,EAAAA,cAAA,WAAK,gBACdC,GAAkBC,EAAAA,EAAAA,GAAMzE,GAC5B,GAAIA,GAAYA,EAASuC,OAAS,EAChC,GAAIjB,EAAsB,CAAC,IAADoD,EACpBC,EAAS,CAAEC,gBAAiB,wBAAyBC,UAAW,QAASC,UAAW,QAASC,SAAU,UACvGC,EAAa3F,EAAM4F,QAAU,CAAC,EAClCN,EAAMO,EAAAA,EAAA,GAAQP,GAAWK,GACzB,IAAIG,EAAkB,0BACK,YAAV,QAAdT,EAAAlC,OAAOC,eAAO,IAAAiC,OAAA,EAAdA,EAAgBU,QACjBD,EAAkB,+CAEpBb,EAAUC,EAAAA,cAAA,OAAKjF,IAAKwC,EAAU,oBAAmBzC,EAAM2B,MAAOqE,MAAOV,GACnEJ,EAAAA,cAAA,SAAOe,UAAU,aAAW,YAAAC,OACbJ,EAAe,MAAK,MAGlCK,GAAYf,EAAAA,EAAAA,GAAMD,GAAkBpE,EAASJ,EAAUX,EAAM2B,MAAOiB,EAAcvB,EAAYI,GAGnG,MACEwD,EAASC,EAAAA,cAAA,WAAK,qBAGhBD,EAASC,EAAAA,cAAA,OAAKc,MAAO,CAACI,MAAO,4BAA6BC,QAAS,OAAQC,cAAe,SAAUC,WAAY,SAAUC,SAAU,YAAY,yBAGlJ,OAAOvB,CACT,EAEML,EAAY,SAAU6B,EAAQC,GAClC,IAAI9B,GAAY,EAOhB,OALA6B,EAAOE,SAAQ,SAACC,IACqB,GAA/BF,EAAOG,QAAQD,KACjBhC,GAAY,EAEhB,IACOA,CACT,EAoBMkC,EAAe,SAAUC,EAAMC,EAAUC,GAC7C,IAAIC,EAAgB,CAAC,GAEjBF,GAAYA,EAAS9D,OAAS,GAChC8D,EAASL,SAAQ,SAACQ,GACZJ,EAAK/G,MAAMmH,KACbD,EAAcC,GAAWJ,EAAK/G,MAAMmH,GAExC,IAGEJ,EAAKrG,YACgBsC,OAAOC,KAAK8D,EAAKrG,WAEvB2C,KAAI,SAAC+D,GACpB,IAAIC,EAAUN,EAAKrG,UAAU0G,GAC7B,GAAIC,EAAQC,WAAW,OAASD,EAAQE,SAAS,MAAO,CAEtD,IAAIC,EAAaH,EAAQI,MAAM,GAAI,GAC/BC,EAAkB,IAAIlE,SAAS,MAAM,4BAAD0C,OAA8BsB,EAAU,2CAChFN,EAAcE,GAAeM,EAAgBT,EAC/C,CACF,IAGF,OAAOC,CACT,EAEMS,EAAc,SAAdA,EAAeC,EAAKC,GAAoB,IACVC,EADSC,EAAAC,EACvBH,GAAc,IAAlC,IAAAE,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAoC,CAAC,IAA5BC,EAAON,EAAAO,MACZ,GAAID,EAAQE,YAAcV,EACtB,OAAOQ,EACJ,GAAIA,EAAQG,SAAU,CACzB,IAAMC,EAAQb,EAAYC,EAAKQ,EAAQG,UACvC,GAAIC,EAAO,OAAOA,CACtB,CACJ,CAAC,OAAAC,GAAAV,EAAAvD,EAAAiE,EAAA,SAAAV,EAAAW,GAAA,CACD,OAAO,IACT,EAEMC,EAAoB,SAACL,EAAWT,GAGpC,IAFA,IAAMe,EAAKC,EAAOhB,GAEXe,EAAM1F,OAAS,GAAG,CACrB,IAAMkF,EAAUQ,EAAME,MAEtB,GAAIV,EAAQE,YAAcA,EACtB,OAAO,KAGX,GAAIF,EAAQG,SACR,IAAK,IAAIQ,EAAI,EAAGA,EAAIX,EAAQG,SAASrF,OAAQ6F,IAAK,CAC9C,IAAMC,EAAeZ,EAAQG,SAASQ,GAEtC,GAAIC,EAAaV,YAAcA,EAC3B,OAAOF,EAGPY,EAAaT,UACbK,EAAMK,KAAKD,EAEnB,CAER,CAEA,OAAO,IACT,EAEM7C,EAAc,SAAdA,EAAwB+C,EAAOnI,EAASH,EAAMe,EAAOwH,EAAY9H,EAAYI,GACjF,IAAIwD,EAAS,GA6Mb,OA3MAiE,GAASA,EAAMvC,SAAQ,SAAAI,GAAS,IAADqC,EAzFCC,EAAaC,EA0FvCC,GA1F0BF,EA0FSF,EA1FIG,EA0FQvC,EAAKuB,WAAavB,EAAKyC,KA3ErEH,EAdc,SAAfI,EAAgBC,EAAMC,GAAQ,IACbC,EADYC,EAAA7B,EAChB0B,GAAI,IAArB,IAAAG,EAAA5B,MAAA2B,EAAAC,EAAA3B,KAAAC,MAAuB,CAAC,IAAfpB,EAAI6C,EAAAvB,MACX,GAAItB,EAAKuB,YAAcqB,GAAM5C,EAAKyC,OAASG,EACzC,OAAO5C,EACF,GAAIA,EAAKwB,SAAU,CACxB,IAAMtD,EAASwE,EAAa1C,EAAKwB,SAAUoB,GAC3C,GAAI1E,EACF,OAAOA,CAEX,CACF,CAAC,OAAAwD,GAAAoB,EAAArF,EAAAiE,EAAA,SAAAoB,EAAAnB,GAAA,CACD,OAAO,IACT,CAEoBe,CAAaJ,EAAaC,GAAS,OA4EjDQ,KAAKC,UAAUhD,KAAU+C,KAAKC,UAAUR,MAE9B,OAAJxC,QAAI,IAAJA,GAAW,QAAPqC,EAAJrC,EAAM/G,aAAK,IAAAoJ,OAAP,EAAJA,EAAa/H,aAAc,IAAM,IAAM,QAAU8B,OAAOC,QAAQ4G,iBACrE7G,OAAOC,QAAQ4G,iBAAmBjD,EAAK/G,MAAMiK,aAFhDlD,EAAKmD,GAAKC,KAAKC,MAAQ,IAOzB,IAAIC,EAAUtD,EAAKuD,IACfC,EAAY,CAAC,EACjB,GAAIxD,EAAK/G,MAAO,CAAC,IAADwK,EACVC,EAAezH,OAAOC,KAAK8D,EAAK/G,QACpCyK,EAAeA,EAAaC,QAAO,SAACtD,GAAW,MAAoB,YAAfA,CAAyB,KAChE/D,KAAI,SAAC+D,GACuB,kBAA5BL,EAAK/G,MAAMoH,GACpBmD,EAAUnD,GAAe0C,KAAKC,UAAUhD,EAAK/G,MAAMoH,IAEnDmD,EAAUnD,GAAeL,EAAK/G,MAAMoH,EAExC,IAEQ,OAAJL,QAAI,IAAJA,GAAW,QAAPyD,EAAJzD,EAAM/G,aAAK,IAAAwK,GAAXA,EAAaG,WACfJ,EAAUK,KAAO7D,EAAK/G,MAAM2K,SAEhC,CAEA,IAAIzJ,EAAY,CAAC,EACf,GAAGO,EAAU,CAAC,IAADoJ,EACLC,EAAuB,WAAarJ,EAAW,IAClC,QAAdoJ,EAAA1H,OAAOC,eAAO,IAAAyH,GAAdA,EAAgB3J,WAAa8B,OAAOC,KAAKE,OAAOC,QAAQlC,YACvD8B,OAAOC,KAAKE,OAAOC,QAAQlC,WAAWmC,KAAI,SAACC,GACvC,GAAGA,EAAagE,WAAWwD,GAAuB,CAC9C,IAAIC,EAAqBzH,EAAa0H,MAAMF,GAAsB,GAClE5J,EAAU6J,GAAsB5H,OAAOC,QAAQlC,UAAUoC,EAC7D,CACJ,GAER,KAAM,CAAC,IAAD2H,EACa,QAAdA,EAAA9H,OAAOC,eAAO,IAAA6H,GAAdA,EAAgB/J,WAAa8B,OAAOC,KAAKE,OAAOC,QAAQlC,YACzD8B,OAAOC,KAAKE,OAAOC,QAAQlC,WAAWmC,KAAI,SAACC,GACnCA,EAAagE,WAAW,cACxBpG,EAAUoC,GAAgBH,OAAOC,QAAQlC,UAAUoC,GAE3D,GAEJ,CAEF,IAAM2D,EAAc,CAClBlG,QAAAA,EACAH,KAAAA,EACAsK,eAAoB,OAALlL,QAAK,IAALA,OAAK,EAALA,EAAOkL,gBAAkB,WAAO,EAC/CC,OAAMtF,EAAAA,EAAA,GAED3E,GAAS,IACZyH,kBAAAA,EACAhB,YAAAA,EACAyD,SAAUC,EAAAA,iBACVC,WAAYC,EAAAA,qBACZC,MAAOpG,EAAAA,EACPqG,SAAUA,EAAAA,YAIV1E,EAAKrG,WACgBsC,OAAOC,KAAK8D,EAAKrG,WACvB2C,KAAI,SAAC+D,GACpB,IAAIC,EAAUN,EAAKrG,UAAU0G,GAC7B,GAAIC,EAAQC,WAAW,OAASD,EAAQE,SAAS,MAAO,CAEtD,IAAIC,EAAaH,EAAQI,MAAM,GAAI,GAC/BC,EAAkB,IAAIlE,SAAS,MAAM,4BAAD0C,OAA8BsB,EAAU,4CAChF+C,EAAUnD,GAAeM,EAAgBT,EAC3C,CACF,IAGF,IAAIyE,EAAe3E,EAAKwB,SACxB,GAAe,YAAX8B,GAAyBE,EAAUoB,eAAe,cAAgBD,GAAgBA,EAAaxI,OAAS,EAAG,CAC7G,IAAI0I,EAAwB,GACxBC,EAAe,GACnBH,EAAa/E,SAAQ,SAACmF,EAAWC,GAC/B,GAAID,GAAaA,EAAUvD,SAAU,CACnC,IAAIrB,EAAgBJ,EAAagF,EAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,UAAW,YAC1F,UAAW,aAAc,eAAgB,OAAQ,YAAa,SAAU,SAAU,SAAU,SAAU,SAAU,gBAAiB7E,GAC/H+E,EAAmB,cAAgBF,EAAU9L,MAAMsI,WAAawD,EAAU9L,MAAMwJ,MAAQuC,GAC5FF,EAAa5C,KAAK,CAAE0B,SAAUqB,EAAkB9E,cAAAA,IAChD4E,EAAUvD,SAASlF,KAAI,SAAC4I,EAAgBF,GACtCE,EAAejM,MAAQiM,EAAejM,OAAS,CAAC,EAChDiM,EAAejM,MAAM2K,SAAWqB,EAChCJ,EAAsB3C,KAAKgD,EAC7B,GACF,CACF,IACAP,EAAeE,EACfrB,EAAwB,aAAIsB,CAC9B,MAAO,GAAe,YAAXxB,GAAyBqB,GAAgBA,EAAaxI,OAAS,EAAG,CAC3E,IAAIgJ,EAAwB,GACxBC,EAAW,GACfT,EAAa/E,SAAQ,SAACmF,EAAWC,GAC/B,GAAID,GAAaA,EAAUvD,SAAU,CACnC,IAAI6D,EAAetF,EAAagF,EAAW,CAAC,QAAS,QAAS,WAAY,OAAQ,WAAY7E,GAC1FoF,EAAc,aAAeP,EAAU9L,MAAMsI,WAAawD,EAAU9L,MAAMwJ,MAAQuC,GACtFI,EAASlD,KAAIpD,EAAC,CAAE8E,SAAU0B,GAAgBD,IAC1CN,EAAUvD,SAASlF,KAAI,SAAC4I,EAAgBF,GACtCE,EAAejM,MAAQiM,EAAejM,OAAS,CAAC,EAChDiM,EAAejM,MAAM2K,SAAW0B,EAChCH,EAAsBjD,KAAKgD,EAC7B,GACF,CACF,IACAP,EAAeQ,EACf3B,EAAoB,SAAI4B,CAC1B,MAAO,GAAe,gBAAX9B,GAA6BqB,GAAgBA,EAAaxI,OAAS,GAC5E,GAAG7B,EAAa,IAAM,OAAQ,CAC5B,IAAIiL,EAAQ,GACZ,GAA6B,iBAAnB/B,EAAU+B,MAClB,IACEA,EAAQxC,KAAKyC,MAAMhC,EAAU+B,MAC/B,CAAE,MAAO7D,GACP,MAGF6D,EAAQ/B,EAAU+B,OAAS,GAG7B,GAAIA,GAASA,EAAMpJ,OAAS,EAAG,CAC7B,IAAIsJ,GAAsBpH,EAAAA,EAAAA,GAAM2B,EAAKwB,UAAY,IACjDmD,EAAe,GACfY,EAAM3F,SAAQ,SAAC8F,EAAkBV,GAC/BL,EAAazC,KAAK,CAChBX,UAAWvB,EAAKuB,UAAY,IAAMyD,EAClCvC,KAAMzC,EAAKyC,KAAO,IAAMuC,EACxBzB,IAAK,sBACLtK,MAAO,CACLU,UAAW,CACTC,SAAU6L,EACVzL,QAAO8E,EAAAA,EAAA,GAAO9E,GAAY0L,GAC1BpL,WAAYA,GAEduE,OAAQ,CAAEJ,UAAW,OAAQC,UAAW,OAAQC,SAAU,UAGhE,GACF,CACA2E,EAAU,UACVtD,EAAKwB,SAAWmD,CAClB,OACI,GAAc,cAAXrB,EAAyB,CAAC,IAADqC,EACAC,EAAhC,GAAa,QAAbD,EAAG3F,EAAK/G,aAAK,IAAA0M,GAAVA,EAAYE,gBACb,GAAa,QAAVD,EAAA5F,EAAK/G,aAAK,IAAA2M,GAAVA,EAAYC,iBAAmB5J,OAAOC,KAAK8D,EAAK/G,MAAM4M,iBAAiB1J,OAAS,EAAG,CACpFC,OAAOC,QAAUD,OAAOC,SAAW,CAAC,EACpCD,OAAOC,QAAQlC,UAAYiC,OAAOC,QAAQlC,WAAa,CAAC,EACxD,IAAI2L,EAAgB7J,OAAOC,KAAK8D,EAAK/G,MAAM4M,iBAC3CrC,EAAUqC,gBAAkB,CAAC,EAC7BC,EAAcxJ,KAAI,SAACC,GACjB,IAAIC,EAAgBwD,EAAK/G,MAAM4M,gBAAgBtJ,GAC3CwJ,EAAsB,WAAa/F,EAAKyC,KAAO,IAAMlG,EACzDiH,EAAUqC,gBAAgBE,GAAuB,GAC9CvJ,IAECJ,OAAOC,QAAQlC,UAAU4L,GADA,iBAAjBvJ,EACwC,IAAIC,SAAS,gBAAkBD,EAAgB,uCAA/C,GAEAA,EAGtD,GACF,CAEJ,CACA,IAAIgH,EAAUoB,eAAe,YAAcpB,EAAUwC,QAAU,IAAM,OAAQ,CAC3E,IAAIC,EAAa7G,EAAYuF,EAAc3K,EAASH,EAAMe,EAAOwH,EAAY9H,EAAYI,GACrFwL,EAAa1C,EAAU0C,YAAc,GACzChI,EAAOgE,KAAK/D,EAAAA,cAACmF,EAAO,CAClBzC,IAAKb,EAAKuB,WAAavB,EAAKyC,KAC5BS,UAAWlD,EAAKuB,WAAavB,EAAK4C,IAAM5C,EAAKyC,KAC7CU,GAAInD,EAAKmD,GACTjK,IAAK,SAAAiN,GACEA,IACLlK,OAAOC,KAAKsH,GAAW5D,SAAQ,SAAAS,GAC7B,IACuC,UAAjC+F,EAAO5C,EAAUnD,IACnB8F,EAAG9F,GAAe0C,KAAKC,UAAUQ,EAAUnD,IAE3C8F,EAAG9F,GAAemD,EAAUnD,EAEhC,CAAE,MAAOqB,GACP,CAEJ,IACAyE,EAAGnM,QAAUA,EACbmM,EAAGtM,KAAOA,EACVsM,EAAGvL,MAAQA,EACXuL,EAAG7L,WAAaA,EAChB6L,EAAG1L,SAAWC,EACXwL,IAAYC,EAAGlH,MAAQiH,GAC5B,GACCD,GAEL,CACF,IAEO/H,CACT,EAEMmI,EAAmB,GAEnBxH,EAAM,WAGN5F,EAAQ,CAAC,CACbwJ,KAAM,YACN6D,KAAM,SACNC,aAAc,CAAC,GACd,CACD9D,KAAM,WACN6D,KAAM,SACNC,aAAc,IACb,CACD9D,KAAM,SACN6D,KAAM,SACNC,aAAc,CAAC,IAGXC,EAAQ,GAEd,YACA,IAAMC,GAAmBC,EAAAA,EAAAA,GAAQvI,EAAAA,WAAiBnF,GAAkBC,E","sources":["components/ContentRenderer.js"],"sourcesContent":["import React, { useEffect, useRef, useState, createContext, useContext } from \"react\";\r\nimport { register, getUniqueComponentsToRegister } from \"../commons/ComponentRegistry\";\r\nimport wrapper from \"../commons/WebComponentWrapper\";\r\nimport { debounce } from 'lodash';\r\nimport {compressToBase64, decompressFromBase64} from \"lz-string\";\r\nimport { klona } from \"klona\";\r\n\r\nconst ThemePreferenceContext = createContext();\r\nfunction useThemePreference() {\r\n  return useContext(ThemePreferenceContext);\r\n}\r\n\r\nconst ContentRenderer = (props, ref) => {\r\n\r\n  const [contents, setContents] = useState(props.overrides?.contents || props.clan || []);\r\n  const [context, setContext] = useState(props.overrides?.context || props.context || {});\r\n  const [functions, setFunctions] = useState(props.overrides?.functions || props.functions || {});\r\n  const [designtime, setDesigntime] = useState(props.overrides?.designtime || false);\r\n  const [widgetId, setWidgetId] = useState(props.widgetid || \"\");\r\n  const [theme, setTheme] = useState(props.theme || \"g90\");\r\n  const [eventBinding, setEventBinding] = useState(false);\r\n  const [componentsRegistered, setComponentsRegistered] = useState(false);\r\n  const [uniqueComponents, setUniqueComponents] = useState(getUniqueComponentsToRegister(props.overrides?.contents || props.clan || []) || []);\r\n  const [componentPropTypes, setComponentPropTypes] = useState({});\r\n  const innerRef = useRef(null);\r\n  const [prevContents, setPrevContents] = useState(null);\r\n\r\n  const updateFunctions = (functionData) => {\r\n    if(functionData && Object.keys(functionData).length > 0) {\r\n      window.__SRS__ = window.__SRS__ || {};\r\n      window.__SRS__.functions = window.__SRS__.functions || {};\r\n      let functionNames = Object.keys(functionData);\r\n      functionNames.map((functionName) => {\r\n        let functionValue = functionData[functionName];\r\n        if(functionValue) {\r\n          if(typeof functionValue == \"string\") {\r\n            window.__SRS__.functions[functionName] = new Function(\"try { return \" + functionValue + \" }catch(err) {console.error(err);}\")();\r\n          }else {\r\n            window.__SRS__.functions[functionName] = functionValue;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    setFunctions(prevContext => functionData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateFunctions(functions);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setContents(currentContents => {\r\n      let updatedContents = props.overrides?.contents || props.clan;\r\n      setPrevContents(currentContents);\r\n      return updatedContents;\r\n    });\r\n\r\n    setContext(prevContext => props.overrides?.context || props.context);\r\n    updateFunctions(props.overrides?.functions || props.functions || {});\r\n    setDesigntime(props.overrides?.designtime);\r\n    setTheme(prevTheme => props.theme);\r\n    document.documentElement.setAttribute('data-carbon-theme', props.theme);\r\n    if (innerRef.current && !eventBinding) {\r\n      setEventBinding(true);\r\n      innerRef.current.addEventListener(\"RICHTEXT#home\", (e) => {\r\n        console.log(e);\r\n      });\r\n      innerRef.current.addEventListener(\"HOME#clicked\", (e) => {\r\n        console.log(e);\r\n      });\r\n      innerRef.current.addEventListener(\"RICHTEXT#about\", (e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    let updatedUniqueComponents = getUniqueComponentsToRegister(props.overrides?.contents || props.clan);\r\n    if (!componentsRegistered || isChanged(updatedUniqueComponents, uniqueComponents)) {\r\n      setUniqueComponents(prevVal => updatedUniqueComponents);\r\n      setComponentsRegistered(prevVal => false);\r\n      register(updatedUniqueComponents, props.theme)\r\n        .then((componentPropTypeData) => {\r\n          setComponentPropTypes(prevVal => componentPropTypeData);\r\n          setComponentsRegistered(prevVal => true);\r\n        });\r\n    }\r\n  }, [props.overrides, props.clan, props.context, props.theme]);\r\n\r\n  let result = <div> loading... </div>;\r\n  let contents2Render = klona(contents);\r\n  if (contents && contents.length > 0) {\r\n    if (componentsRegistered) {\r\n      let styles = { backgroundColor: \"var(--cds-background)\", minHeight: \"100vh\", maxHeight: \"100vh\", overflow: \"scroll\" };\r\n      let propStyles = props.styles || {};\r\n      styles = { ...styles, ...propStyles };\r\n      let carbonStylesUrl = \"./carbon-components.css\";\r\n      if(window.__SRS__?.mode == \"sandbox\") {\r\n        carbonStylesUrl = \"https://know.srste.in/carbon-components.css\";\r\n      }\r\n      result = (<div ref={innerRef} data-carbon-theme={props.theme} style={styles}>\r\n        <style className=\"basetheme\">\r\n          {`@import \"${carbonStylesUrl}\";`}  {/* DONT REMOVE THIS STYLE AS THIS IS USED FOR THEME */}\r\n        </style>\r\n        {/* <GlobalTheme theme={props.theme}> */}\r\n        {renderNodes(klona(contents2Render), context, contents, props.theme, prevContents, designtime, widgetId)}\r\n        {/* </GlobalTheme> */}\r\n      </div>)\r\n    } else {\r\n      result = <div> loading... </div>;\r\n    }\r\n  } else {\r\n    result = <div style={{color: \"var(--cds-text-secondary)\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: \"x-large\"}}> No contents to show!</div>;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst isChanged = function (array1, array2) {\r\n  let isChanged = false;\r\n\r\n  array1.forEach((array1Item) => {\r\n    if (array2.indexOf(array1Item) == -1) {\r\n      isChanged = true;\r\n    }\r\n  });\r\n  return isChanged;\r\n}\r\n\r\nconst getNodeFromTree = function (contentsRef, nodeId) {\r\n  const searchInTree = (tree, id) => {\r\n    for (let node of tree) {\r\n      if (node.elementId === id || node.name === id) {\r\n        return node;\r\n      } else if (node.children) {\r\n        const result = searchInTree(node.children, id);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return contentsRef? searchInTree(contentsRef, nodeId): null;\r\n};\r\n\r\nconst getNodeProps = function (node, propKeys, nodeContext) {\r\n  let gridItemProps = {};\r\n\r\n  if (propKeys && propKeys.length > 0) {\r\n    propKeys.forEach((propKey) => {\r\n      if (node.props[propKey]) {\r\n        gridItemProps[propKey] = node.props[propKey];\r\n      }\r\n    })\r\n  }\r\n\r\n  if (node.overrides) {\r\n    let overridePropKeys = Object.keys(node.overrides);\r\n    \r\n    overridePropKeys.map((nodePropKey) => {\r\n      let nodeVal = node.overrides[nodePropKey];\r\n      if (nodeVal.startsWith(\"[[\") && nodeVal.endsWith(\"]]\")) {\r\n        // remove the expression delimiters from the value\r\n        let expression = nodeVal.slice(2, -2);\r\n        let dynamicFunction = new Function(\"api\", `with(api) { try { return ${expression}; }catch(err) { console.error(err) } }`);\r\n        gridItemProps[nodePropKey] = dynamicFunction(nodeContext);\r\n      }\r\n    });\r\n  }\r\n\r\n  return gridItemProps;\r\n}\r\n\r\nconst findElement = (key, nestedContents) => {\r\n  for (let element of nestedContents) {\r\n      if (element.elementId === key) {\r\n          return element;\r\n      } else if (element.children) {\r\n          const found = findElement(key, element.children);\r\n          if (found) return found;\r\n      }\r\n  }\r\n  return null;\r\n}\r\n\r\nconst findParentElement = (elementId, nestedContents) => {\r\n  const stack = [...nestedContents];\r\n\r\n  while (stack.length > 0) {\r\n      const element = stack.pop();\r\n\r\n      if (element.elementId === elementId) {\r\n          return null; // The provided elementId is already the top-level element, so no parent exists\r\n      }\r\n\r\n      if (element.children) {\r\n          for (let i = 0; i < element.children.length; i++) {\r\n              const childElement = element.children[i];\r\n\r\n              if (childElement.elementId === elementId) {\r\n                  return element; // Return the current element as the parent if a match is found\r\n              }\r\n\r\n              if (childElement.children) {\r\n                  stack.push(childElement); // Add the child element to the stack for further iteration\r\n              }\r\n          }\r\n      }\r\n  }\r\n\r\n  return null; // Return null if no parent element is found\r\n};\r\n\r\nconst renderNodes = function (nodes, context, clan, theme, currentRef, designtime, widgetId) {\r\n  let result = [];\r\n  // Compare previous and current node values \r\n  nodes && nodes.forEach(node => {\r\n    let nodeFromPrevTree = getNodeFromTree(currentRef, node.elementId || node.name);\r\n    if (JSON.stringify(node) !== JSON.stringify(nodeFromPrevTree)) {\r\n      node.ts = Date.now() + \"\";\r\n    }else if((node?.props?.designtime || \"\") + \"\" == \"true\" && window.__SRS__.activeElementId) {\r\n      if(window.__SRS__.activeElementId == node.props.elementid) {\r\n        node.ts = Date.now() + \"\";\r\n      }\r\n    }\r\n\r\n    let NodeTag = node.tag;\r\n    let nodeProps = {};\r\n    if (node.props) {\r\n      let nodePropKeys = Object.keys(node.props);\r\n      nodePropKeys = nodePropKeys.filter((nodePropKey) => nodePropKey != \"slotname\");\r\n      nodePropKeys.map((nodePropKey) => {\r\n        if (typeof node.props[nodePropKey] !== \"string\") {\r\n          nodeProps[nodePropKey] = JSON.stringify(node.props[nodePropKey]);\r\n        } else {\r\n          nodeProps[nodePropKey] = node.props[nodePropKey];\r\n        }\r\n      }\r\n      ); { }\r\n      if (node?.props?.slotname) {\r\n        nodeProps.slot = node.props.slotname;\r\n      }\r\n    }\r\n\r\n    let functions = {};\r\n      if(widgetId) {\r\n          let widgetFunctionPrefix = \"$widget_\" + widgetId + \"_\";\r\n          if(window.__SRS__?.functions && Object.keys(window.__SRS__.functions)) {\r\n              Object.keys(window.__SRS__.functions).map((functionName) => {\r\n                  if(functionName.startsWith(widgetFunctionPrefix)) {\r\n                      let widgetFunctionName = functionName.split(widgetFunctionPrefix)[1];\r\n                      functions[widgetFunctionName] = window.__SRS__.functions[functionName];\r\n                  }\r\n              })\r\n          }\r\n      }else {\r\n        if(window.__SRS__?.functions && Object.keys(window.__SRS__.functions)) {\r\n          Object.keys(window.__SRS__.functions).map((functionName) => {\r\n              if(!functionName.startsWith(\"$widget_\")) {\r\n                  functions[functionName] = window.__SRS__.functions[functionName];\r\n              }\r\n          })\r\n        }\r\n      }\r\n      \r\n    const nodeContext = {\r\n      context,\r\n      clan,\r\n      dispatchEvent: props?.dispatchEvent || (() => {}),\r\n      helper: {\r\n        //add helper methods\r\n        ...functions,\r\n        findParentElement,\r\n        findElement,\r\n        compress: compressToBase64,\r\n        decompress: decompressFromBase64,\r\n        clone: klona,\r\n        debounce: debounce\r\n      }\r\n    }\r\n\r\n    if (node.overrides) {\r\n      let overridePropKeys = Object.keys(node.overrides);\r\n      overridePropKeys.map((nodePropKey) => {\r\n        let nodeVal = node.overrides[nodePropKey];\r\n        if (nodeVal.startsWith(\"[[\") && nodeVal.endsWith(\"]]\")) {\r\n          // remove the expression delimiters from the value\r\n          let expression = nodeVal.slice(2, -2);\r\n          let dynamicFunction = new Function(\"api\", `with(api) { try { return ${expression}; }catch(err) { console.error(err); } }`);\r\n          nodeProps[nodePropKey] = dynamicFunction(nodeContext);\r\n        }\r\n      });\r\n    }\r\n\r\n    let nodeChildren = node.children;\r\n    if (NodeTag == \"mui-grid\" && nodeProps.hasOwnProperty(\"container\") && nodeChildren && nodeChildren.length > 0) {\r\n      let nextLevelNodeChildren = [];\r\n      let gridItemData = [];\r\n      nodeChildren.forEach((nodeChild, indx) => {\r\n        if (nodeChild && nodeChild.children) {\r\n          let gridItemProps = getNodeProps(nodeChild, [\"sx\", \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"spacing\", \"direction\", \r\n            \"justify\", \"alignItems\", \"alignContent\", \"wrap\", \"component\", \"xsAuto\", \"smAuto\", \"mdAuto\", \"lgAuto\", \"xlAuto\", \"zeroMinWidth\"], nodeContext);\r\n          let gridItemSlotName = \"grid-item-\" + (nodeChild.props.elementId || nodeChild.props.name || indx);\r\n          gridItemData.push({ slotname: gridItemSlotName, gridItemProps });\r\n          nodeChild.children.map((nodeGrandChild, indx) => {\r\n            nodeGrandChild.props = nodeGrandChild.props || {};\r\n            nodeGrandChild.props.slotname = gridItemSlotName;\r\n            nextLevelNodeChildren.push(nodeGrandChild);\r\n          });\r\n        }\r\n      });\r\n      nodeChildren = nextLevelNodeChildren;\r\n      nodeProps[\"griditemdata\"] = gridItemData;\r\n    } else if (NodeTag == \"mui-tabs\" && nodeChildren && nodeChildren.length > 0) {\r\n      let nextLevelNodeChildren = [];\r\n      let tabItems = [];\r\n      nodeChildren.forEach((nodeChild, indx) => {\r\n        if (nodeChild && nodeChild.children) {\r\n          let tabItemProps = getNodeProps(nodeChild, [\"label\", \"value\", \"disabled\", \"icon\", \"wrapped\"], nodeContext);\r\n          let tabSlotName = \"tab-item-\" + (nodeChild.props.elementId || nodeChild.props.name || indx);\r\n          tabItems.push({ slotname: tabSlotName, ...tabItemProps });\r\n          nodeChild.children.map((nodeGrandChild, indx) => {\r\n            nodeGrandChild.props = nodeGrandChild.props || {};\r\n            nodeGrandChild.props.slotname = tabSlotName;\r\n            nextLevelNodeChildren.push(nodeGrandChild);\r\n          });\r\n        }\r\n      });\r\n      nodeChildren = nextLevelNodeChildren;\r\n      nodeProps[\"tabitems\"] = tabItems;\r\n    } else if (NodeTag == \"srs-repeater\" && nodeChildren && nodeChildren.length > 0) {\r\n      if(designtime + \"\" != \"true\") {\r\n        let items = [];\r\n        if(typeof nodeProps.items == \"string\") {\r\n          try {\r\n            items = JSON.parse(nodeProps.items);\r\n          } catch (err) {\r\n            // console.error(\"Unable to parse the items of the repeater. Please correct it and try again.\")\r\n          }\r\n        }else {\r\n          items = nodeProps.items || [];\r\n        }\r\n\r\n        if (items && items.length > 0) {\r\n          let currentNodeChildren = klona(node.children || []);\r\n          nodeChildren = []; \r\n          items.forEach((childItemContext, indx) => {\r\n            nodeChildren.push({\r\n              elementId: node.elementId + \"-\" + indx,\r\n              name: node.name + \"-\" + indx,\r\n              tag: \"srs-contentrenderer\",\r\n              props: {\r\n                overrides: {\r\n                  contents: currentNodeChildren,\r\n                  context: { ...context, ...childItemContext },\r\n                  designtime: designtime\r\n                },\r\n                styles: { minHeight: \"100%\", maxHeight: \"100%\", overflow: \"auto\" }\r\n              }\r\n            })\r\n          })\r\n        }\r\n        NodeTag = \"mui-box\";\r\n        node.children = nodeChildren;\r\n      }\r\n    }else if(NodeTag == \"srs-widget\") {\r\n      if(node.props?.widgetfunctions) {\r\n        if(node.props?.widgetfunctions && Object.keys(node.props.widgetfunctions).length > 0) {\r\n          window.__SRS__ = window.__SRS__ || {};\r\n          window.__SRS__.functions = window.__SRS__.functions || {};\r\n          let functionNames = Object.keys(node.props.widgetfunctions);\r\n          nodeProps.widgetfunctions = {};\r\n          functionNames.map((functionName) => {\r\n            let functionValue = node.props.widgetfunctions[functionName];\r\n            let updatedFunctionName = \"$widget_\" + node.name + \"_\" + functionName;\r\n            nodeProps.widgetfunctions[updatedFunctionName] = \"\";\r\n            if(functionValue) {\r\n              if(typeof functionValue == \"string\") {\r\n                window.__SRS__.functions[updatedFunctionName] = new Function(\"try { return \" + functionValue + \" }catch(err) { console.error(err); }\")();\r\n              }else {\r\n                window.__SRS__.functions[updatedFunctionName] = functionValue;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    } \r\n    if(!nodeProps.hasOwnProperty(\"visible\") || nodeProps.visible + \"\" == \"true\") { \r\n      let childNodes = renderNodes(nodeChildren, context, clan, theme, currentRef, designtime, widgetId);\r\n      let hoststyles = nodeProps.hoststyles || \"\";\r\n      result.push(<NodeTag\r\n        key={node.elementId || node.name}\r\n        elementid={node.elementId || node.id || node.name}\r\n        ts={node.ts}\r\n        ref={el => {\r\n          if (!el) return;\r\n          Object.keys(nodeProps).forEach(nodePropKey => {\r\n            try {\r\n              if (typeof nodeProps[nodePropKey] == \"object\") {\r\n                el[nodePropKey] = JSON.stringify(nodeProps[nodePropKey]);\r\n              } else {\r\n                el[nodePropKey] = nodeProps[nodePropKey];\r\n              }\r\n            } catch (err) {\r\n              // console.error(err);\r\n            }\r\n          });\r\n          el.context = context;\r\n          el.clan = clan;\r\n          el.theme = theme;\r\n          el.designtime = designtime;\r\n          el.widgetid = widgetId;\r\n          if(hoststyles) el.style = hoststyles;\r\n        }}>\r\n        {childNodes}\r\n      </NodeTag>);\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n  name: \"overrides\",\r\n  type: \"object\",\r\n  defaultValue: {}\r\n}, {\r\n  name: \"widgetid\",\r\n  type: \"string\",\r\n  defaultValue: \"\"\r\n}, {\r\n  name: \"styles\",\r\n  type: \"object\",\r\n  defaultValue: {}\r\n}]\r\n\r\nconst slots = [];\r\n\r\nexport default ContentRenderer;\r\nconst WrappedComponent = wrapper(React.forwardRef(ContentRenderer), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n"],"names":["ContentRenderer","props","ref","_props$overrides","_props$overrides2","_props$overrides3","_props$overrides4","_props$overrides5","_useState2","_slicedToArray","useState","overrides","contents","clan","setContents","_useState4","context","setContext","_useState6","functions","setFunctions","_useState8","designtime","setDesigntime","_useState10","widgetid","widgetId","_useState12","theme","setTheme","_useState14","eventBinding","setEventBinding","_useState16","componentsRegistered","setComponentsRegistered","_useState18","getUniqueComponentsToRegister","uniqueComponents","setUniqueComponents","_useState20","setComponentPropTypes","innerRef","useRef","_useState22","prevContents","setPrevContents","updateFunctions","functionData","Object","keys","length","window","__SRS__","map","functionName","functionValue","Function","prevContext","useEffect","_props$overrides8","_props$overrides9","_props$overrides10","currentContents","_props$overrides6","updatedContents","_props$overrides7","prevTheme","document","documentElement","setAttribute","current","addEventListener","e","console","log","updatedUniqueComponents","isChanged","prevVal","register","then","componentPropTypeData","result","React","contents2Render","klona","_window$__SRS__","_styles","backgroundColor","minHeight","maxHeight","overflow","propStyles","styles","_objectSpread","carbonStylesUrl","mode","style","className","concat","renderNodes","color","display","flexDirection","alignItems","fontSize","array1","array2","forEach","array1Item","indexOf","getNodeProps","node","propKeys","nodeContext","gridItemProps","propKey","nodePropKey","nodeVal","startsWith","endsWith","expression","slice","dynamicFunction","findElement","key","nestedContents","_step2","_iterator2","_createForOfIteratorHelper","s","n","done","element","value","elementId","children","found","err","f","findParentElement","stack","_toConsumableArray","pop","i","childElement","push","nodes","currentRef","_node$props","contentsRef","nodeId","nodeFromPrevTree","name","searchInTree","tree","id","_step","_iterator","JSON","stringify","activeElementId","elementid","ts","Date","now","NodeTag","tag","nodeProps","_node$props2","nodePropKeys","filter","slotname","slot","_window$__SRS__2","widgetFunctionPrefix","widgetFunctionName","split","_window$__SRS__3","dispatchEvent","helper","compress","compressToBase64","decompress","decompressFromBase64","clone","debounce","nodeChildren","hasOwnProperty","nextLevelNodeChildren","gridItemData","nodeChild","indx","gridItemSlotName","nodeGrandChild","_nextLevelNodeChildren","tabItems","tabItemProps","tabSlotName","items","parse","currentNodeChildren","childItemContext","_node$props3","_node$props4","widgetfunctions","functionNames","updatedFunctionName","visible","childNodes","hoststyles","el","_typeof","dispatchedEvents","type","defaultValue","slots","WrappedComponent","wrapper"],"sourceRoot":""}