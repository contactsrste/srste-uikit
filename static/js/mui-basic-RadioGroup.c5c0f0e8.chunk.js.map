{"version":3,"file":"static/js/mui-basic-RadioGroup.c5c0f0e8.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/RadioGroup/RadioGroup.js","components/mui/basic/RadioGroup.js","../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/FormControl/formControlState.js","../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/RadioGroup/RadioGroupContext.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import React from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst SrsMuiRadioGroup = function (props, ref) {\r\n  return (\r\n    <RadioGroup {...props} theme={props.muiTheme}>\r\n      <slot />\r\n    </RadioGroup>\r\n  );\r\n};\r\n\r\nconst styles = `\r\n  /* Custom styles for the MuiRadioGroup component */\r\n`;\r\n\r\nconst props = [\r\n  {\r\n    name: \"name\",\r\n    defaultValue: \"\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"value\",\r\n    defaultValue: \"\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"onChange\",\r\n    defaultValue: null,\r\n    type: \"function\",\r\n  },\r\n  {\r\n    name: \"sx\",\r\n    defaultValue: {},\r\n    type: \"object\"\r\n  }\r\n  // Add other props specific to RadioGroup if needed\r\n];\r\n\r\nconst slots = [\r\n  {\r\n    name: \"default\",\r\n    allowed: [\"srs-mui-radio\"],\r\n  },\r\n];\r\n\r\nconst WrappedComponent = wrapper(\r\n  React.forwardRef(SrsMuiRadioGroup),\r\n  props,\r\n  \"mui\"\r\n);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;"],"names":["_excluded","RadioGroup","React","props","ref","actions","children","defaultValue","nameProp","name","onChange","valueProp","value","other","_objectWithoutPropertiesLoose","rootRef","_useControlled","useControlled","controlled","default","_useControlled2","_slicedToArray","setValueState","focus","input","current","querySelector","handleRef","useForkRef","useId","contextValue","event","target","_jsx","RadioGroupContext","FormGroup","_extends","role","dispatchedEvents","SrsMuiRadioGroup","theme","muiTheme","styles","type","slots","allowed","WrappedComponent","wrapper","FormControlContext","undefined","formControlState","_ref","states","muiFormControl","reduce","acc","state","useFormControl","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","FormGroupRoot","styled","overridesResolver","ownerState","root","row","display","flexDirection","flexWrap","inProps","useThemeProps","className","_props$row","fcs","error","classes","composeClasses","useUtilityClasses","clsx"],"sourceRoot":""}