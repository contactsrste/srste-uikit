{"version":3,"file":"static/js/basic-Modal.70a2b426.chunk.js","mappings":"20CAGA,IAAMA,EAAmB,CAAC,iBAEpBC,EAAQ,SAAUC,EAAOC,GAC3B,IAAAC,EAAyBF,EAAjBG,KAAAA,OAAI,IAAAD,GAAQA,EACsBE,EAAAC,GAAdC,EAAAA,EAAAA,UAASH,GAAK,GAAnCI,EAAMH,EAAA,GAAEI,EAASJ,EAAA,GAElBK,EAAa,WACfD,GAAU,EACd,EAMME,EAAU,WACZ,IAAMC,GAAaC,EAAAA,EAAAA,QAAO,MAU1B,OARAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAcH,EAAWI,QAE/B,OADAD,EAAYE,iBAAiB,QAASP,GAC/B,WACHK,EAAYG,oBAAoB,QAASR,EAC7C,CACJ,GAAG,IAGCS,EAAAA,cAAA,OAAKjB,IAAKU,GACNO,EAAAA,cAAA,QAAMC,KAAK,YAGvB,EAEA,OACID,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACR,EAAO,MACPH,GACGW,EAAAA,cAAA,OAAKE,MAAO,CAAEC,SAAU,QAASC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,gBAAiB,uBACpFR,EAAAA,cAAA,OAAKE,MAAO,CAAEC,SAAU,WAAYC,IAAK,MAAOC,KAAM,MAAOI,UAAW,wBAAyBD,gBAAiB,QAASE,QAAS,SAChIV,EAAAA,cAAA,QAAMC,KAAK,YACXD,EAAAA,cAAA,UAAQW,QA7BR,WAChBrB,GAAU,EACd,GA2BkD,WAMtD,EAEMsB,EAAM,WAGN9B,EAAQ,CAAC,CACXmB,KAAM,OACNY,aAAc,QACdC,KAAM,YAGJC,EAAQ,CAAC,CAACd,KAAM,YAEhBe,GAAmBC,EAAAA,EAAAA,GAAQjB,EAAAA,WAAiBnB,GAAQC,E","sources":["components/basic/Modal.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\n\r\nconst dispatchedEvents = [\"ABOUT#clicked\"];\r\n\r\nconst Modal = function (props, ref) {\r\n    const { open = false } = props;\r\n    const [isOpen, setIsOpen] = useState(open);\r\n\r\n    const handleOpen = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const Trigger = () => {\r\n        const triggerRef = useRef(null);\r\n\r\n        useEffect(() => {\r\n            const triggerNode = triggerRef.current;\r\n            triggerNode.addEventListener('click', handleOpen);\r\n            return () => {\r\n                triggerNode.removeEventListener('click', handleOpen);\r\n            };\r\n        }, []);\r\n\r\n        return (\r\n            <div ref={triggerRef}>\r\n                <slot name=\"trigger\"></slot>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Trigger/>\r\n            {isOpen && (\r\n                <div style={{ position: \"fixed\", top: 0, left: 0, right: 0, bottom: 0, backgroundColor: \"rgba(0, 0, 0, 0.5)\" }}>\r\n                    <div style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", backgroundColor: \"white\", padding: \"20px\" }}>\r\n                        <slot name=\"content\"></slot>\r\n                        <button onClick={handleClose}>Close</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n    name: \"open\",\r\n    defaultValue: \"false\",\r\n    type: \"boolean\"\r\n}]\r\n\r\nconst slots = [{name: \"content\"}];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(Modal), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","Modal","props","ref","_props$open","open","_useState2","_slicedToArray","useState","isOpen","setIsOpen","handleOpen","Trigger","triggerRef","useRef","useEffect","triggerNode","current","addEventListener","removeEventListener","React","name","style","position","top","left","right","bottom","backgroundColor","transform","padding","onClick","styles","defaultValue","type","slots","WrappedComponent","wrapper"],"sourceRoot":""}