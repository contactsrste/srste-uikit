{"version":3,"file":"static/js/mui-basic-Paper.fab32fb5.chunk.js","mappings":"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","sources":["components/mui/basic/Paper.js","../node_modules/@mui/material/styles/getOverlayAlpha.js","../node_modules/@mui/material/Paper/paperClasses.js","../node_modules/@mui/material/Paper/Paper.js","../node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js"],"sourcesContent":["import React from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst dispatchedEvents = [];\r\n\r\nconst SrsMuiPaper = function (props, ref) {\r\n  return (\r\n    <Paper {...props} theme={props.muiTheme}>\r\n      <slot />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst styles = `\r\n  /* Custom styles for the Paper component */\r\n`;\r\n\r\nconst props = [\r\n  {\r\n    name: \"elevation\",\r\n    defaultValue: 1,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    name: \"square\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"variant\",\r\n    defaultValue: \"elevation\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"className\",\r\n    defaultValue: \"\",\r\n    type: \"string\",\r\n  },\r\n  {\r\n    name: \"style\",\r\n    defaultValue: {},\r\n    type: \"object\",\r\n  },\r\n  {\r\n    name: \"sx\",\r\n    defaultValue: {},\r\n    type: \"object\",\r\n  }\r\n  // Add other props specific to Paper if needed\r\n];\r\n\r\nconst slots = [\r\n  {\r\n    name: \"default\",\r\n    allowed: [],\r\n  },\r\n];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsMuiPaper), props, \"mui\");\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n","// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n  return (alphaValue / 100).toFixed(2);\n};\nexport default getOverlayAlpha;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"elevation\", \"square\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport getOverlayAlpha from '../styles/getOverlayAlpha';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$overlays;\n  return _extends({\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    color: (theme.vars || theme).palette.text.primary,\n    transition: theme.transitions.create('box-shadow')\n  }, !ownerState.square && {\n    borderRadius: theme.shape.borderRadius\n  }, ownerState.variant === 'outlined' && {\n    border: `1px solid ${(theme.vars || theme).palette.divider}`\n  }, ownerState.variant === 'elevation' && _extends({\n    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]\n  }, !theme.vars && theme.palette.mode === 'dark' && {\n    backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(ownerState.elevation))}, ${alpha('#fff', getOverlayAlpha(ownerState.elevation))})`\n  }, theme.vars && {\n    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]\n  }));\n});\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n  const {\n      className,\n      component = 'div',\n      elevation = 1,\n      square = false,\n      variant = 'elevation'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n    return null;\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}"],"names":["dispatchedEvents","SrsMuiPaper","props","ref","React","Paper","_extends","theme","muiTheme","styles","name","defaultValue","type","slots","allowed","WrappedComponent","wrapper","elevation","Math","pow","log","toFixed","getPaperUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","PaperRoot","styled","overridesResolver","ownerState","root","variant","square","rounded","concat","_ref","_theme$vars$overlays","backgroundColor","vars","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","boxShadow","shadows","mode","backgroundImage","alpha","getOverlayAlpha","overlays","inProps","useThemeProps","className","_props$component","component","_props$elevation","_props$square","_props$variant","other","_objectWithoutPropertiesLoose","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","componentName","globalStatePrefix","arguments","length","undefined","result","forEach"],"sourceRoot":""}