{"version":3,"file":"static/js/basic-form-FileUpload.86e483e9.chunk.js","mappings":"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","sources":["components/basic/form/FileUpload.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport { Button, FileUploaderDropContainer, FileUploaderItem, ProgressIndicator } from \"carbon-components-react\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\nimport { CloudUpload } from \"@carbon/icons-react\";\r\n\r\nconst dispatchedEvents = [];\r\n\r\n/*\r\n    Example: <srs-fileupload add_file_label=\"Add File\" upload_button_label=\"Upload\"/>\r\n\r\n    Server API could be like below -\r\n    const express = require('express');\r\n    const fileUpload = require('express-fileupload');\r\n\r\n    // enable file upload middleware\r\n    app.use(fileUpload());\r\n\r\n    app.post('/upload', (req, res) => {\r\n        // check if file was uploaded\r\n        if (!req.files || Object.keys(req.files).length === 0) {\r\n            return res.status(400).send('No files were uploaded.');\r\n        }\r\n\r\n        // access uploaded file from request\r\n        const file = req.files.uploadedFile;\r\n\r\n        // do something with the file, e.g. save it to disk or database\r\n        file.mv(`./uploads/${file.name}`, (err) => {\r\n            if (err) {\r\n            return res.status(500).send(err);\r\n            }\r\n\r\n            res.send('File uploaded!');\r\n        });\r\n    });\r\n*/\r\nconst SrsFileUpload = function (props, ref) {\r\n    const [files, setFiles] = useState([]);\r\n    const [progress, setProgress] = useState(0);\r\n    const [inProgress, setInProgress] = useState(false);\r\n    const fileInput = useRef(null);\r\n\r\n    const getProgress = (prevProgress) => {\r\n        return new Promise((resolve, reject) => {\r\n            resolve(prevProgress + 10);\r\n        });\r\n    }\r\n\r\n    const handleUpload = async () => {\r\n        try {\r\n            const formData = new FormData();\r\n            for (const file of files) {\r\n                formData.append('file', file);\r\n            }\r\n\r\n            const config = {\r\n                onUploadProgress: (progressEvent) => {\r\n                    const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    setProgress(progress);\r\n                },\r\n            };\r\n\r\n            setInProgress(true);\r\n            props.dispatchEvent(EventAPI.FILE_UPLOADING, { payload: { files, id: props.elementid } });\r\n            //   await axios.post(props.upload_endpoint, formData, config);\r\n            setInProgress(false);\r\n            setProgress(0);\r\n            props.dispatchEvent(EventAPI.FILE_UPLOADED, { payload: { files, id: props.elementid } });\r\n        } catch (error) {\r\n            console.error(error);\r\n            setInProgress(false);\r\n            setProgress(0);\r\n            props.dispatchEvent(EventAPI.FILE_UPLOAD_FAILED, { payload: { files, id: props.elementid } });\r\n        }\r\n    };\r\n\r\n    let extraProps = {};\r\n    if (props.accepted_formats) {\r\n        extraProps.accept = props.accepted_formats;\r\n    }\r\n    return (\r\n        <>\r\n            <p className=\"cds--file--label\">{props.label}</p>\r\n            <p className=\"cds--label-description\">{props.subtitle}</p>\r\n            <div style={{display: \"flex\", flexDirection: \"row\"}}>\r\n                <FileUploaderDropContainer\r\n                    labelText={props.add_files_label}\r\n                    labelDescription={props.add_files_description}\r\n                    name=\"\"\r\n                    tabIndex={0}\r\n                    buttonKind=\"primary\"\r\n                    filenameStatus=\"edit\"\r\n                    multiple\r\n                    onAddFiles={(event, {addedFiles}) => {\r\n                        setFiles(files.concat(addedFiles || []));\r\n                    }}\r\n                    onClick={(event) => {\r\n                        // setFiles([...event.target.files]); \r\n                    }}\r\n                    ref={fileInput}\r\n                    {...extraProps}\r\n                />                \r\n                <Button hasIconOnly={true} iconDescription=\"Upload\" renderIcon={CloudUpload} onClick={handleUpload} size=\"sm\" disabled={!files || files.length === 0}>{props.upload_button_label}</Button>\r\n            </div>\r\n            {\r\n                files.map((file) => (\r\n                    <FileUploaderItem key={file.name} name={file.name} size=\"md\" status=\"uploading\" iconDescription=\"Delete file\" invalid={false}/>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = `\r\n    .cds--file-browse-btn {\r\n        max-width: 100% !important;\r\n    }\r\n    .cds--file {\r\n        width: 70% !important;\r\n    }\r\n    .cds--popover-container {\r\n        display: flex !important;\r\n    }\r\n    .cds--file__selected-file {\r\n        max-width: 100% !important;\r\n        width: 70% !important;\r\n    }\r\n`\r\nconst props = [{\r\n    name: \"label\",\r\n    defaultValue: \"Upload Files\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"subtitle\",\r\n    defaultValue: \"Max file size is 500kb. Supported file types are .jpg and .png.\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"add_files_label\",\r\n    defaultValue: \"Upload Files\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"add_files_description\",\r\n    defaultValue: \"Max file size is 10mb. Only .jpg files are supported.\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"upload_button_label\",\r\n    defaultValue: \"Upload\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"upload_endpoint\",\r\n    defaultValue: \"/upload\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"accepted_formats\",\r\n    defaultValue: [],\r\n    type: []\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsFileUpload), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","asyncGeneratorStep","gen","_next","_throw","_slicedToArray","arr","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","_nonIterableRest","minLen","_arrayLikeToArray","toString","from","test","len","arr2","dispatchedEvents","SrsFileUpload","props","ref","_useState2","useState","files","setFiles","_useState4","setProgress","_useState6","setInProgress","fileInput","useRef","handleUpload","_ref","_callee","formData","_iterator","_step","file","_context","FormData","append","dispatchEvent","EventAPI","payload","id","elementid","console","args","arguments","apply","extraProps","accepted_formats","accept","React","className","label","subtitle","style","display","flexDirection","FileUploaderDropContainer","_extends","labelText","add_files_label","labelDescription","add_files_description","tabIndex","buttonKind","filenameStatus","multiple","onAddFiles","event","_ref2","addedFiles","concat","onClick","Button","hasIconOnly","iconDescription","renderIcon","CloudUpload","size","disabled","upload_button_label","map","FileUploaderItem","status","invalid","styles","defaultValue","slots","WrappedComponent","wrapper"],"sourceRoot":""}