{"version":3,"file":"static/js/mui-basic-Modal.ab983de9.chunk.js","mappings":"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","sources":["components/mui/basic/Modal.js","../node_modules/@mui/material/utils/useForkRef.js","../node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/utils/esm/setRef.js","../node_modules/@mui/utils/esm/useEnhancedEffect.js","../node_modules/@mui/utils/esm/useEventCallback.js","../node_modules/@mui/utils/esm/useForkRef.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\nimport PubSub from 'pubsub-js';\r\n\r\nconst dispatchedEvents = [EventAPI.MODAL_CLOSED];\r\n\r\nconst SrsMuiModal = function (props, ref) {\r\n  const [open, setOpen] = useState(props.open || true);\r\n  const innerRef = useRef(null);\r\n\r\n  const closeModal = (eventName, eventData) => {\r\n    setOpen(false);\r\n    console.log(eventData);\r\n    let sourceId = eventData?.data?.payload?.id || \"\";\r\n    props.dispatchEvent(EventAPI.MODAL_CLOSED, {id: sourceId, modalId: props.elementid})\r\n  }\r\n\r\n  useEffect(() => {\r\n    let token = PubSub.subscribe(\"MODAL_CLOSED\", closeModal);\r\n\r\n    return () => {\r\n      PubSub.unsubscribe(token);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open);\r\n  }, [props.open]);\r\n\r\n  return (\r\n    <div ref={innerRef}>\r\n      <Modal\r\n        key={props.elementid}\r\n        open={open}\r\n        disableEnforceFocus={props.disableEnforceFocus}\r\n        disableAutoFocus={props.disableAutoFocus}\r\n        disableBackdropClick={props.disableBackdropClick}\r\n        disableEscapeKeyDown={props.disableEscapeKeyDown}\r\n        sx={props.sx}\r\n        theme={props.muiTheme}>\r\n        <div>\r\n          <slot name=\"close_modal\"/>\r\n          <slot />\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = `\r\n  /* Custom styles for the MuiModal component */\r\n`;\r\n\r\nconst props = [\r\n  {\r\n    name: \"open\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"disableEnforceFocus\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"disableAutoFocus\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"disableBackdropClick\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"disableEscapeKeyDown\",\r\n    defaultValue: false,\r\n    type: \"boolean\",\r\n  },\r\n  {\r\n    name: \"sx\",\r\n    defaultValue: {},\r\n    type: \"object\"\r\n  }\r\n];\r\n\r\nconst slots = [\r\n  {\r\n    name: \"default\",\r\n    allowed: [],\r\n  },\r\n];\r\n\r\nconst WrappedComponent = wrapper(\r\n  React.forwardRef(SrsMuiModal),\r\n  props,\r\n  \"mui\"\r\n);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\n","import { unstable_useForkRef as useForkRef } from '@mui/utils';\nexport default useForkRef;","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","import * as React from 'react';\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport useEnhancedEffect from './useEnhancedEffect';\n\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nexport default function useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useCallback((...args) =>\n  // @ts-expect-error hide `this`\n  // tslint:disable-next-line:ban-comma-operator\n  (0, ref.current)(...args), []);\n}","import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","import React from 'react';\nexport default React.createContext(null);"],"names":["dispatchedEvents","EventAPI","SrsMuiModal","props","ref","_useState2","_slicedToArray","useState","open","setOpen","innerRef","useRef","closeModal","eventName","eventData","_eventData$data","_eventData$data$paylo","console","log","sourceId","data","payload","id","dispatchEvent","modalId","elementid","useEffect","token","PubSub","React","Modal","key","disableEnforceFocus","disableAutoFocus","disableBackdropClick","disableEscapeKeyDown","sx","theme","muiTheme","name","styles","defaultValue","type","slots","allowed","WrappedComponent","wrapper","useForkRef","generateUtilityClasses","componentName","globalStatePrefix","arguments","length","undefined","result","forEach","slot","generateUtilityClass","setRef","value","current","useEnhancedEffect","window","useEventCallback","fn","apply","_len","refs","Array","_key","every","instance"],"sourceRoot":""}