{"version":3,"file":"static/js/builder-Chrome.efc679f0.chunk.js","mappings":"sXAKMA,GAASC,EAAAA,EAAAA,IACX,SAAAD,EAAYE,EAAMC,EAAOC,IAAQC,EAAAA,EAAAA,GAAA,KAAAL,GAC7BM,KAAKJ,KAAOA,EACZI,KAAKH,MAAQA,EACbG,KAAKF,OAASA,CAClB,IAGEG,EAAS,SAAUC,EAAOC,GAC5B,IAAAC,GAA8CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAEpCI,EAAW,CACb,IAAIhB,EAAU,SAAU,IAAK,IAC7B,IAAIA,EAAU,UAAW,IAAK,IAC9B,IAAIA,EAAU,WAAY,GAAI,KAGlC,OAAQiB,EAAAA,EAAAA,MAAA,OAAKR,IAAKA,EAAIS,SAAA,EACdC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACJ,SAAUA,EAAUK,SAAUN,KACxCI,EAAAA,EAAAA,KAACG,EAAAA,aAAY,CAACC,QAAST,GAAmBE,EAAS,OAE/D,EAEMQ,EAAmB,GACnBhB,EAAQ,GAERiB,EAAM,OAINC,EAAQ,GAERC,GAAmBC,EAAAA,EAAAA,GAAQC,EAAAA,WAAiBtB,GAASC,E,qJClCrDc,EAAe,SAAUd,EAAOC,GAClC,OAAOqB,EAAKtB,EAAOC,EACvB,EAEMqB,EAAO,SAACtB,EAAOC,GACjB,IAAMc,EAAUf,EAAMe,QACtB,OAAQJ,EAAAA,EAAAA,KAAA,OAAAD,UACJD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,SAAOK,EAAQrB,SACpBe,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,UAAQK,EAAQpB,UACrBc,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,WAASK,EAAQnB,cAGlC,EAIMuB,GAAmBC,EAAAA,EAAAA,GAAQC,EAAAA,WAAiBP,GAFpC,G,+ICfRF,EAAW,SAAUZ,EAAOC,GAC9B,OAAOqB,EAAKtB,EAAOC,EACvB,EAEMqB,EAAO,SAACtB,EAAOC,GACjB,IAAMO,EAAWR,EAAMQ,SACvB,OAAQG,EAAAA,EAAAA,KAAA,OAAKV,IAAKA,EAAIS,UAClBC,EAAAA,EAAAA,KAAA,MAAAD,SACKF,EAASe,KAAI,SAAAR,GAAO,OACjBJ,EAAAA,EAAAA,KAAA,MAAuBa,QAAS,kBAAMxB,EAAMa,SAASE,EAAQ,EAACL,SACzDK,EAAQrB,MADJqB,EAAQrB,KAEZ,OAIrB,EAIMyB,GAAmBC,EAAAA,EAAAA,GAAQC,EAAAA,WAAiBT,GAFpC,G","sources":["components/builder/Chrome.js","components/builder/PropertyGrid.js","components/builder/TreeView.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\nimport { PropertyGrid } from \"./PropertyGrid\";\r\nimport { TreeView } from \"./TreeView\";\r\n\r\nclass UIElement {\r\n    constructor(name, width, height) {\r\n        this.name = name;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n}\r\n\r\nconst Chrome = function (props, ref) {\r\n    const [selectedElement, setSelectedElement] = useState(null);\r\n\r\n    const elements = [\r\n        new UIElement('Button', 100, 50),\r\n        new UIElement('Textbox', 200, 30),\r\n        new UIElement('Checkbox', 20, 20),\r\n    ];\r\n\r\n    return (<div ref={ref}>\r\n            <TreeView elements={elements} onSelect={setSelectedElement} />\r\n            <PropertyGrid element={selectedElement || elements[0]} />\r\n        </div>);\r\n}\r\n\r\nconst dispatchedEvents = [];\r\nconst props = [];\r\n\r\nconst styles = `\r\n\r\n`;\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(Chrome), props);\r\nexport { WrappedComponent, props, styles, dispatchedEvents, slots };","import React, { useEffect } from \"react\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\n\r\nconst PropertyGrid = function (props, ref) {\r\n    return view(props, ref);\r\n}\r\n\r\nconst view = (props, ref) => {\r\n    const element = props.element;\r\n    return (<div>\r\n        <div>\r\n            <div>Name: {element.name}</div>\r\n            <div>Width: {element.width}</div>\r\n            <div>Height: {element.height}</div>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nconst props = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(PropertyGrid), props);\r\nexport { PropertyGrid, WrappedComponent };","import React, { useEffect } from \"react\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\n\r\nconst TreeView = function (props, ref) {\r\n    return view(props, ref);\r\n}\r\n\r\nconst view = (props, ref) => {\r\n    const elements = props.elements;\r\n    return (<div ref={ref}>\r\n        <ul>\r\n            {elements.map(element => (\r\n                <li key={element.name} onClick={() => props.onSelect(element)}>\r\n                    {element.name}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </div>);\r\n}\r\n\r\nconst props = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(TreeView), props);\r\nexport { TreeView, WrappedComponent };"],"names":["UIElement","_createClass","name","width","height","_classCallCheck","this","Chrome","props","ref","_useState","useState","_useState2","_slicedToArray","selectedElement","setSelectedElement","elements","_jsxs","children","_jsx","TreeView","onSelect","PropertyGrid","element","dispatchedEvents","styles","slots","WrappedComponent","wrapper","React","view","map","onClick"],"sourceRoot":""}