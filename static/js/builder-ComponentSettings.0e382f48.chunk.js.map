{"version":3,"file":"static/js/builder-ComponentSettings.0e382f48.chunk.js","mappings":"oKAAO,IAAMA,EAAuB,WAChC,MAAO,CACH,gBAAiB,CACb,MAAS,CACL,CAAC,KAAQ,WAAY,MAAS,WAAY,KAAQ,WAClD,CAAC,KAAQ,KAAM,MAAS,SAAU,KAAQ,WAE9C,MAAS,CACL,CACIC,KAAM,oBACNC,QAAS,IAEb,CACID,KAAM,oBACNC,QAAS,MAIrB,wBAAyB,CACrB,MAAS,CACL,CAAC,KAAQ,aAAc,MAAS,cAAe,KAAQ,SACnD,KAAQ,CAAC,QAAW,CAAC,CAAC,MAAS,MAAO,MAAS,OAAQ,CAAC,MAAS,OAAQ,MAAS,WACtF,CAAC,KAAQ,KAAM,MAAS,SAAU,KAAQ,WAE9C,MAAS,CACL,CACID,KAAM,UACNC,QAAS,IAEb,CACID,KAAM,SACNC,QAAS,MAK7B,C,0wCChCA,IAAMC,EAAoB,SAAUC,EAAOC,GACvC,IAA4DC,EAAAC,GAAdC,EAAAA,EAAAA,UAAS,MAAK,GAAtCF,EAAA,GAAoBA,EAAA,IAChBN,EAAAA,EAAAA,wBAE1B,OAAQS,EAAAA,cAAA,OAAKJ,IAAKA,GACVI,EAAAA,cAAA,iBAAeR,KAAK,KAAKS,UAAU,GAC/BD,EAAAA,cAAA,yBAAuBE,KAAM,oBAAqBC,GAAI,CAACC,MAAO,8BAC1DJ,EAAAA,cAAA,kBAAgBE,KAAM,SAAUG,KAAM,mBAAoBF,GAAI,CAACC,MAAO,gCAE1EJ,EAAAA,cAAA,yBAAuBE,KAAM,oBAAqBC,GAAI,CAACC,MAAO,8BAC1DJ,EAAAA,cAAA,kBAAgBE,KAAM,SAAUG,KAAM,cAAeF,GAAI,CAACC,MAAO,iCAIrF,EAEME,EAAmB,GACnBX,EAAQ,CAAC,CACX,KAAQ,iBACR,aAAgB,GAChB,KAAQ,WAGNY,EAAM,OAINC,EAAQ,GAERC,GAAmBC,EAAAA,EAAAA,GAAQV,EAAAA,WAAiBN,GAAoBC,EAAO,GAAI,CAAC,gBAAiB,wBAAyB,yB","sources":["components/builder/BuilderUtils.js","components/builder/ComponentSettings.js"],"sourcesContent":["export const getComponentMetadata = () => {\r\n    return {\r\n        \"mui-accordion\": {\r\n            \"props\": [\r\n                {\"name\": \"disabled\", \"label\": \"Disabled\", \"type\": \"boolean\"},\r\n                {\"name\": \"sx\", \"label\": \"Styles\", \"type\": \"styles\"}\r\n            ],\r\n            \"slots\": [\r\n                {\r\n                    name: \"accordion_summary\",\r\n                    allowed: []\r\n                },\r\n                {\r\n                    name: \"accordion_details\",\r\n                    allowed: []\r\n                }\r\n            ]\r\n        },\r\n        \"mui-accordion-summary\": {\r\n            \"props\": [\r\n                {\"name\": \"expandIcon\", \"label\": \"Expand Icon\", \"type\": \"choice\", \r\n                    \"meta\": {\"choices\": [{\"label\": \"Add\", \"value\": \"add\"}, {\"label\": \"Edit\", \"value\": \"edit\"}]}},\r\n                {\"name\": \"sx\", \"label\": \"Styles\", \"type\": \"styles\"}\r\n            ],\r\n            \"slots\": [\r\n                {\r\n                    name: \"default\",\r\n                    allowed: []\r\n                },\r\n                {\r\n                    name: \"header\",\r\n                    allowed: []\r\n                }\r\n            ]\r\n        }\r\n    };\r\n}","import React, { useState } from \"react\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\nimport {getComponentMetadata} from \"./BuilderUtils\";\r\n\r\nconst ComponentSettings = function (props, ref) {\r\n    const [selectedElement, setSelectedElement] = useState(null);\r\n    const componentMetadata = getComponentMetadata();\r\n     \r\n    return (<div ref={ref}>\r\n            <mui-accordion name=\"a1\" expanded={true}> \r\n                <mui-accordion-summary slot={\"accordion_summary\"} sx={{color: \"var(--cds-text-secondary)\"}}>\r\n                    <mui-typography slot={\"header\"} text={\"Accordion Item 1\"} sx={{color: \"var(--cds-text-secondary)\"}}/>\r\n                </mui-accordion-summary>\r\n                <mui-accordion-details slot={\"accordion_details\"} sx={{color: \"var(--cds-text-secondary)\"}}>\r\n                    <mui-typography slot={\"header\"} text={\"Paragraph 1\"} sx={{color: \"var(--cds-text-secondary)\"}}/>\r\n                </mui-accordion-details>\r\n            </mui-accordion>\r\n        </div>);\r\n}\r\n\r\nconst dispatchedEvents = [];\r\nconst props = [{\r\n    \"name\": \"component_name\",\r\n    \"defaultValue\": \"\",\r\n    \"type\": \"string\"\r\n}];\r\n\r\nconst styles = `\r\n\r\n`;\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(ComponentSettings), props, \"\", [\"mui-accordion\", \"mui-accordion-summary\", \"mui-accordion-details\"]);\r\nexport { WrappedComponent, props, styles, dispatchedEvents, slots };"],"names":["getComponentMetadata","name","allowed","ComponentSettings","props","ref","_useState2","_slicedToArray","useState","React","expanded","slot","sx","color","text","dispatchedEvents","styles","slots","WrappedComponent","wrapper"],"sourceRoot":""}