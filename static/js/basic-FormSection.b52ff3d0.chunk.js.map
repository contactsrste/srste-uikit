{"version":3,"file":"static/js/basic-FormSection.b52ff3d0.chunk.js","mappings":"u1CAIA,IAAMA,EAAmB,GAanBC,EAAiB,SAAUC,EAAOC,GACpC,IAAwDC,EAAAC,GAApBC,EAAAA,EAAAA,UAASJ,EAAMK,MAAK,GAAjDC,EAAUJ,EAAA,GAAEK,EAAaL,EAAA,GAG1BM,GAAUC,EAAAA,EAAAA,QAAO,MAWvB,OAVAC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAQG,QAER,IADA,IAAIC,EAAmBJ,EAAQG,QAAQC,mBAC9BC,EAAI,EAAGA,EAAID,EAAiBE,OAAQD,IACzCD,EAAiBC,GAAGE,UAAYC,KAAKC,UAAUjB,EAAMe,UAKjE,GAAG,CAACf,EAAMkB,MAAOlB,EAAMe,UAAWf,EAAMK,OAEpCc,EAAAA,cAACC,EAAAA,IAAa,CAACF,MAAOlB,EAAMkB,MAAOG,eAblB,WAAH,OAASd,GAAeD,EAAY,EAaeD,KAAMC,GACnEa,EAAAA,cAACG,EAAAA,IAAS,KACNH,EAAAA,cAAA,QAAMlB,IAAKO,EAASe,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,SAAU,OAAQC,KAAM,WAAYC,OAAQ,eAIhI,EAEMC,EAAM,6HAMN7B,EAAQ,CAAC,CACX8B,KAAM,OACNC,cAAc,EACdC,KAAM,WACP,CACCF,KAAM,YACNC,aAAc,CAAC,EACfC,KAAM,UACP,CACCF,KAAM,QACNC,aAAc,GACdC,KAAM,WAGJC,EAAQ,CAAC,CAACH,KAAM,UAAWI,QAAS,CAAC,oBAErCC,GAAmBC,EAAAA,EAAAA,GAAQjB,EAAAA,WAAiBpB,GAAiBC,E","sources":["components/basic/FormSection.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\nimport { FormGroup, Accordion, AccordionItem } from \"carbon-components-react\";\r\n\r\nconst dispatchedEvents = [];\r\n\r\n/*\r\n    Example: \r\n        <srs-form sections=[{name: \"section1\", title: \"Section 1\"}, {name: \"section2\", title: \"Section 2\"}]>\r\n            <srs-form-section name=\"section1\">\r\n                ...\r\n            </srs-form-section>\r\n            <srs-form-section name=\"section2\">\r\n                ...\r\n            </srs-form-section>\r\n        </srs-form>\r\n*/\r\nconst SrsFormSection = function (props, ref) {\r\n    const [isExpanded, setIsExpanded] = useState(props.open);\r\n\r\n    const handleToggle = () => setIsExpanded(!isExpanded);\r\n    const slotRef = useRef(null);\r\n    useEffect(() => {\r\n        if (slotRef.current) {\r\n            let assignedElements = slotRef.current.assignedElements();\r\n            for (let i = 0; i < assignedElements.length; i++) {\r\n                assignedElements[i].form_data = JSON.stringify(props.form_data);\r\n            }\r\n        }\r\n        // setIsExpanded(props.open);\r\n\r\n    }, [props.title, props.form_data, props.open]);\r\n    return (\r\n        <AccordionItem title={props.title} onHeadingClick={handleToggle} open={isExpanded}>\r\n            <FormGroup>\r\n                <slot ref={slotRef} style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", flex: \"1 1 100%\", margin: \"16px 8px\" }}></slot>\r\n            </FormGroup>\r\n        </AccordionItem>\r\n    );\r\n}\r\n\r\nconst styles = `\r\n    .cds--accordion__content {\r\n        padding-left: 1rem !important;\r\n        padding-right: 1rem !important;\r\n    }\r\n`\r\nconst props = [{\r\n    name: \"open\",\r\n    defaultValue: true,\r\n    type: \"boolean\"\r\n}, {\r\n    name: \"form_data\",\r\n    defaultValue: {},\r\n    type: \"object\"\r\n}, {\r\n    name: \"title\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}]\r\n\r\nconst slots = [{name: \"default\", allowed: [\"srs-form-field\"]}];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsFormSection), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","SrsFormSection","props","ref","_useState2","_slicedToArray","useState","open","isExpanded","setIsExpanded","slotRef","useRef","useEffect","current","assignedElements","i","length","form_data","JSON","stringify","title","React","AccordionItem","onHeadingClick","FormGroup","style","display","flexDirection","flexWrap","flex","margin","styles","name","defaultValue","type","slots","allowed","WrappedComponent","wrapper"],"sourceRoot":""}