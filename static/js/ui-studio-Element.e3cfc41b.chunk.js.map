{"version":3,"file":"static/js/ui-studio-Element.e3cfc41b.chunk.js","mappings":"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","sources":["commons/CommonUtils.js","components/basic/form/Checkbox.js","components/basic/form/TextArea.js","components/ui-studio/Element.js","components/ui-studio/UIStudio.js"],"sourcesContent":["export const processComponentProperties = function (props) {        \r\n    let result = {};\r\n    let propKeys = Object.keys(props);\r\n    propKeys.map((propKey) => {\r\n        if(typeof props[propKey] == \"string\") {\r\n            try {\r\n                result[propKey] = JSON.parse(props[propKey]);\r\n            }catch(err) {\r\n                result[propKey] = props[propKey];\r\n            } \r\n        }\r\n    });   \r\n    return result;\r\n}\r\n\r\nexport const getUniqueElementId = () => {\r\n    return 'xxxxyyyyxxxxyyyyxyxyyxyxxyxyyxyx'.replace(/[xy]/g, function(c) {\r\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n        return v.toString(16);\r\n    });\r\n}","import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport { Checkbox  } from \"carbon-components-react\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\n\r\nconst dispatchedEvents = [EventAPI.CHECKBOX_CHANGED];\r\n\r\n/*\r\n    Example: <srs-checkbox label=\"Label\" checked=\"true\"/>\r\n*/\r\nconst SrsCheckbox = function (props, ref) {\r\n    const [isChecked, setIsChecked] = useState(props.checked || props.value || false);\r\n\r\n    useEffect(() => {\r\n        setIsChecked(props.checked || props.value || false);\r\n        props.setValue(props.checked || props.value || false)\r\n    }, [props]);\r\n    return props.elementid? (\r\n      <Checkbox \r\n        labelText={props.label}\r\n        checked={isChecked}\r\n        id={props.elementid}\r\n        onChange={(evt, payload) => {\r\n            setIsChecked(payload.checked);\r\n            props.setValue(payload.checked);\r\n            if(props.onChange) {\r\n                props.onChange(payload.checked);\r\n            }else {\r\n                props.dispatchEvent(EventAPI.CHECKBOX_CHANGED, {payload: { value: payload.checked, id: props.elementid }});\r\n            }\r\n        }}\r\n      />\r\n    ): null;\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n    name: \"label\",\r\n    defaultValue: \"label\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"checked\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}, {\r\n    name: \"value\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsCheckbox), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots};","import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport { TextArea  } from \"carbon-components-react\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\n\r\nconst dispatchedEvents = [EventAPI.TEXTAREA_CHANGED];\r\n\r\n/*\r\n    Example: <srs-textarea label=\"Label\" rows=\"3\" cols=\"150\"/>\r\n*/\r\nconst SrsTextArea = function (props, ref) {\r\n    const [inputValue, setInputValue] = useState(props.value || \"\");\r\n    useEffect(() => {\r\n        setInputValue(props.value);\r\n        props.setValue(props.value);\r\n    }, [props]);\r\n\r\n    let inlineStyles = {\r\n        \"--cds-label-01-font-size\": \"0.9rem\",\r\n        \"--cds-label-01-font-weight\": 800,\r\n    };\r\n\r\n    return (\r\n        <div style={inlineStyles}>\r\n            <TextArea\r\n                id={props.elementid}\r\n                labelText={props.label}\r\n                rows={props.rows}\r\n                cols={props.cols}\r\n                value={inputValue}\r\n                disabled={props.disabled}\r\n                placeholder={props.placeholder}\r\n                readOnly={props.readonly}\r\n                onBlur={(evt) => {\r\n                    if(props.onChange) {\r\n                        props.onChange(evt.target?.value || \"\");     \r\n                    }\r\n                }}\r\n                onChange={(evt) => {\r\n                    setInputValue(evt.target?.value || \"\");\r\n                    props.dispatchEvent(EventAPI.TEXTAREA_CHANGED, { payload: {value: evt.target?.value || \"\", id: props.elementid} });\r\n                    props.setValue(evt.target?.value || \"\");\r\n                }}/>\r\n        </div>\r\n      );\r\n}\r\n\r\nconst styles = `\r\n    .cds--text-area {\r\n        border: 1px solid lightgray !important;\r\n        border-radius: 5px;\r\n    }\r\n\r\n    .cds--text-area:focus, .cds--text-area:active {\r\n        outline: 0px !important;\r\n        border: 2px solid !important;\r\n        border-radius: 5px;\r\n    } \r\n`\r\nconst props = [{\r\n    name: \"label\",\r\n    defaultValue: \"Label\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"rows\",\r\n    defaultValue: 4,\r\n    type: \"number\"\r\n}, {\r\n    name: \"cols\",\r\n    defaultValue: 100,\r\n    type: \"number\"\r\n}, {\r\n    name: \"value\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"disabled\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}, {\r\n    name: \"placeholder\",\r\n    defaultValue: \"Enter value...\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"readonly\",\r\n    defaultValue: false,\r\n    type: \"boolean\"\r\n}];\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsTextArea), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Popover, PopoverContent, Button, Search, TextInput } from \"carbon-components-react\";\r\nimport { Add, Close, Edit, Flow, Maximize, Minimize } from \"@carbon/icons-react\";\r\nimport { WrappedComponent as SrsInput, styles as SrsInputStyles } from \"../basic/form/Input\";\r\nimport { WrappedComponent as SrsTextArea, styles as SrsTextAreaStyles } from \"../basic/form/TextArea\";\r\nimport { WrappedComponent as SrsCheckbox, styles as SrsCheckboxStyles } from \"../basic/form/Checkbox\";\r\nimport withStyles from '../../commons/WithStyleWrapper';\r\n\r\nimport { props } from \"./UIStudio\";\r\nimport { componentLookup } from \"../../commons/WebcomponentRegistry\";\r\nimport { getUniqueElementId } from \"../../commons/CommonUtils\";\r\n\r\nexport const Element = ({ elementData, index, selected, selectedElement, handleDragStart, handleDrop, handleDragOver, handleElementClick, handleAddElement,\r\n  handleAddElements, handleUpdateElement, handleDeleteElement, handleSetElementText, handleDragLeave, componentMetaData, theme, isDraggable, setIsDraggable }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const element = elementData;\r\n  const eleContainerRef = useRef(null);\r\n\r\n  const handleDoubleClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const handleBlur = (event) => {\r\n    setIsEditing(false);\r\n    handleSetElementText(index, event.target.textContent);\r\n  };\r\n\r\n  const applyElementData = (updatedElementData) => {\r\n    handleUpdateElement(index, updatedElementData.props, updatedElementData.children, updatedElementData.type);\r\n  }\r\n\r\n  let extraProps = {};\r\n\r\n  if(!element) return null;\r\n\r\n  let elementElProps = { selectedElement, handleDragStart, handleDrop, handleDragOver, handleElementClick, handleAddElement, handleAddElements, handleUpdateElement, handleDeleteElement, handleSetElementText, handleDragLeave, handleDoubleClick, handleBlur, componentMetaData, theme, setIsDraggable };\r\n  let elementEl = getComponentToRender(element, { isEditing, index, elementElProps, elementMetaData: componentMetaData[element?.type || \"\"] })\r\n  return (\r\n    <div className={selected ? \"element-container ele-container-hover\" : \"element-container\"} data-index={index} ref={eleContainerRef}>\r\n      <div draggable={false}\r\n        {...extraProps}\r\n        onDragOver={(event) => handleDragOver(event, index)}\r\n        onDragLeave={handleDragLeave} className=\"element-wrapper\">\r\n        <div className=\"element\">\r\n          {elementEl}\r\n        </div>\r\n      </div>\r\n      {/* Transparent Div */}\r\n      {element.type !== \"srs-contentslot\" ?\r\n        (<div className=\"element-glass\" style={{ zIndex: selected ? 6000 : parseInt(\"1\" + index.replaceAll(\"-\", \"\")) }}\r\n          onClick={(evt) => {\r\n            let currentElementIndex = evt.target.closest(\".element-container\").getAttribute(\"data-index\");\r\n            if (currentElementIndex == index) {\r\n              handleElementClick(element);\r\n            }\r\n          }}>\r\n          <div className=\"element-actions\" style={{ zIndex: parseInt(\"1\" + index.replaceAll(\"-\", \"\")) + 1 }}>\r\n            <Close size=\"20\" onClick={() => handleDeleteElement(index)} style={{ border: \"1px solid var(--cds-layer)\", borderRadius: \"20%\", backgroundColor: \"var(--cds-text-secondary)\", color: \"var(--cds-background,#ffffff)\" }} />\r\n            <AddElementPopover elementType={element.type} elementProps={element.props} selected={selected} handleAddElement={handleAddElement} handleUpdateElement={handleUpdateElement} handleElementClick={handleElementClick} index={index} metadata={componentMetaData} isNew={false} theme={theme} setIsDraggable={setIsDraggable} />\r\n            <AddElementPopover elementType=\"\" elementProps={{}} parentElement={element} selected={selected} handleAddElement={handleAddElement} handleUpdateElement={handleUpdateElement} handleElementClick={handleElementClick} index={index} metadata={componentMetaData} isNew={true} theme={theme} setIsDraggable={setIsDraggable} isContainer={false} isSlot={element.type == \"srs-contentslot\"} slotDetails={element.props?.slot_details || {}} />\r\n            <JSONEditor value={element} applyElementData={applyElementData} handleElementClick={handleElementClick} theme={theme}/>\r\n          </div>\r\n        </div>) : (<div className=\"element-slot-actions\" style={{ zIndex: selected ? 6000 : parseInt(\"1\" + index.replaceAll(\"-\", \"\")) + 1 }}\r\n          onClick={(evt) => {\r\n            let currentElementIndex = evt.target.closest(\".element-container\").getAttribute(\"data-index\");\r\n            if (currentElementIndex == index) {\r\n              handleElementClick(element);\r\n            }\r\n          }}>\r\n          <AddElementPopover elementType=\"\" elementProps={{}} parentElement={element} selected={selected} handleAddElement={handleAddElement} handleUpdateElement={handleUpdateElement} handleElementClick={handleElementClick} index={index} metadata={componentMetaData} isNew={true} theme={theme} setIsDraggable={setIsDraggable} isContainer={false} isSlot={element.type == \"srs-contentslot\"} slotDetails={element.props?.slot_details || {}} />\r\n        </div>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst JSONEditor = ({value, applyElementData, handleElementClick, theme}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [elementData, setElementData] = useState(value);\r\n  const [fullscreen, setFullscreen] = useState(false);\r\n\r\n  const openPopover = (evt) => {\r\n    setOpen(true);\r\n    evt && evt.stopPropagation();\r\n  }\r\n\r\n  const closePopover = (evt) => {\r\n    setOpen(false);\r\n    handleElementClick(null);\r\n    evt && evt.stopPropagation();\r\n  }\r\n\r\n  const getElementsData = (elementsData) => {\r\n    elementsData.elementId = elementsData.elementId || getUniqueElementId();\r\n    if(elementsData.children) {\r\n      elementsData.children.map((elementItem) => {\r\n        elementItem.elementId = elementItem.elementId || getUniqueElementId();\r\n      })\r\n    }\r\n    return elementsData;\r\n  }\r\n\r\n  let ReactComponent = withStyles(SrsTextAreaStyles)(SrsTextArea);\r\n\r\n  return (<Popover\r\n    autoAlign={true}\r\n    caret={false}\r\n    dropShadow={false}\r\n    highContrast={false}\r\n    open={open}\r\n    onClick={(evt) => evt.stopPropagation()}\r\n    onClose={() => setOpen(!open)}>\r\n    <Flow size={20} onClick={(evt) => openPopover(evt)} style={{ border: \"1px solid var(--cds-layer)\", borderRadius: \"20%\", backgroundColor: \"var(--cds-text-secondary)\", color: \"var(--cds-background,#ffffff)\" }} />\r\n    <PopoverContent className={fullscreen? \"element-popover popover-fullscreen\": \"element-popover\"} >\r\n      <div className=\"properties-panel-header\">\r\n        <div className=\"properties-panel-label\">Element Data</div>\r\n        <Close size=\"20\"\r\n          style={{ position: \"absolute\", right: 0, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n          onClick={(evt) => {\r\n            closePopover();\r\n            evt.stopPropagation();\r\n          }} />\r\n          {\r\n            fullscreen? (<Minimize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => false);\r\n              evt.stopPropagation();\r\n            }} />): (<Maximize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => true);\r\n              evt.stopPropagation();\r\n            }} />)\r\n          }\r\n      </div>\r\n      <div className=\"json-editor-actions\">\r\n        <Button kind=\"ghost\" onClick={(evt) => {\r\n              applyElementData(getElementsData(elementData || {}));\r\n              closePopover();\r\n              evt.stopPropagation();\r\n            }}>Apply</Button>\r\n      </div>\r\n      <div className=\"jsonEditor\">\r\n        <ReactComponent label=\"Element Data\" placeholder={JSON.stringify([{type: \"srs-container\", props: {title: \"Section #1\"}, children: []}], null, 4)}\r\n          rows={18}\r\n          value={JSON.stringify(elementData || {}, null, 4)}\r\n          onChange={(value) => {\r\n            setElementData((prevElementData) => {\r\n              let result = prevElementData;\r\n              try {\r\n                result = JSON.parse(value || \"\");\r\n              }catch(err) { \r\n                console.error(\"Error parsing element data... changes are not applied\")\r\n              }\r\n              return result;\r\n            });\r\n          }}\r\n          theme={theme} />\r\n      </div>\r\n    </PopoverContent>\r\n  </Popover>)\r\n}\r\n\r\nconst getComponentToRender = (element, { isEditing, index, elementElProps, elementMetaData }) => {\r\n  const { selectedElement, handleAddElement, handleAddElements, handleUpdateElement, handleBlur, handleElementClick, componentMetaData, theme, setIsDraggable } = elementElProps;\r\n  let componentToRender = null;\r\n  let NodeTag = element?.type || \"\";\r\n  if (element.type == \"section\") {\r\n    componentToRender = <div className=\"section-container\">\r\n      {\r\n        !element.children || element.children.length == 0 ? (<>\r\n          <div className=\"add-element-buttons\">\r\n            <AddElementPopover elementType={element.type} handleAddElement={handleAddElement} handleUpdateElement={handleUpdateElement} handleElementClick={handleElementClick} index={index} metadata={componentMetaData} isNew={true} theme={theme} setIsDraggable={setIsDraggable} isContainer={true} />\r\n          </div></>) : null\r\n      }\r\n      <div className=\"section-element\">\r\n        <div className=\"sub-elements\">\r\n          {element.children.map((childElement, childIndex) => (\r\n            <Element key={`${index}-${childIndex}`} elementData={childElement} selected={childElement.elementId == (selectedElement?.elementId || \"-1\")} parentIndex={`${index}`} index={`${index}-${childIndex}`} {...elementElProps} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  } else {\r\n    let elementSlotData = [];\r\n    if (elementMetaData.slots && elementMetaData.slots.length > 0) {\r\n      let remainingSlots = [...elementMetaData.slots];\r\n      let nonSlottedChildElements = [];\r\n      let slottedElementsAdded = [];\r\n\r\n      if (element.children) {\r\n        element.children.map((childElement) => {\r\n          if (childElement.type != \"srs-contentslot\") {\r\n            if (childElement.props.slotname) {\r\n              remainingSlots = remainingSlots.filter((s) => s.name != childElement.props.slotname);\r\n            } else {\r\n              remainingSlots = remainingSlots.filter((s) => s.name != \"default\");\r\n            }\r\n            nonSlottedChildElements.push(childElement);\r\n          } else {\r\n            if (childElement.props?.slotname) {\r\n              slottedElementsAdded.push(childElement.props?.slotname);\r\n            } else {\r\n              slottedElementsAdded.push({ name: \"default\" });\r\n            }\r\n          }\r\n        })\r\n      }\r\n      //If non-slotted child element is there, then don't show slotted content... else show all slotted contents\r\n      if (nonSlottedChildElements.length > 0) {\r\n        nonSlottedChildElements.map((childElement, childIndex) => {\r\n          elementSlotData.push(<Element key={`${index}-${childIndex}`} elementData={childElement} selected={childElement.elementId === (selectedElement?.elementId || \"-1\")} parentIndex={`${index}`} index={`${index}-${childIndex}`} {...elementElProps} />);\r\n        });\r\n      } else {\r\n        element.children && element.children.map((childElement, childIndex) => {\r\n          elementSlotData.push(<Element key={`${index}-${childIndex}`} elementData={childElement} selected={childElement.elementId == (selectedElement?.elementId || \"-1\")} parentIndex={`${index}`} index={`${index}-${childIndex}`} {...elementElProps} />);\r\n        });\r\n      }\r\n    }\r\n\r\n    componentToRender = <div\r\n      style={{ width: \"100%\", pointerEvents: \"all\" }}\r\n      // onDoubleClick={handleDoubleClick}\r\n      onBlur={handleBlur}\r\n      contentEditable={isEditing}\r\n      onClick={(evt) => {\r\n        let currentElementIndex = evt.target.closest(\".element-container\").getAttribute(\"data-index\");\r\n        if (currentElementIndex == index) {\r\n          handleElementClick(element);\r\n        }\r\n      }}>\r\n      <NodeTag {...element.props}>\r\n        {elementSlotData}\r\n      </NodeTag>\r\n    </div>\r\n  }\r\n\r\n  return componentToRender;\r\n}\r\n\r\nconst getSlotName = (slotDetails, parentElement) => {\r\n  if (slotDetails.name != \"$DYNAMIC$\") {\r\n    return slotDetails.name;\r\n  } else {\r\n    //execute slotDetails.script with props passed in \r\n  }\r\n}\r\n\r\nexport const AddElementPopover = ({ elementType = \"\", parentElement = null, selected, handleAddElement, handleUpdateElement, handleElementClick, index, metadata, elementProps = [],\r\n  isNew = true, theme, setIsDraggable, isContainer, isSlot, slotDetails }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [mode, setMode] = useState(isNew ? \"list\" : \"props\");\r\n  const extraProps = isSlot ? { slotname: getSlotName(slotDetails, parentElement) } : {};\r\n  const [props, setProps] = useState({ ...elementProps, ...extraProps });\r\n  const [elementIndex, setElementIndex] = useState(index);\r\n  const [selectedElementType, setSelectedElementType] = useState(elementType);\r\n\r\n  useEffect(() => {\r\n    // setOpen(isSlot);\r\n    setMode(isNew ? \"list\" : \"props\");\r\n  }, [selected]);\r\n\r\n  const getElementPropsMeta = (type) => {\r\n    return metadata && metadata[type] ? metadata[type]?.props || [] : [];\r\n  }\r\n\r\n  const addElementAndClosePopover = (type, index, metaProps) => {\r\n    return (props) => {\r\n      setOpen(false);\r\n      setMode(isNew ? \"list\" : \"props\");\r\n      if (isNew) {\r\n        if (isContainer) {\r\n          handleAddElement(type, index, null, metaProps, props);\r\n        } else {\r\n          const lastIndex = index.lastIndexOf(\"-\");\r\n          let parentIndx = index.slice(0, lastIndex);\r\n          let dropIndx = index.slice(lastIndex + 1);\r\n          if (lastIndex == -1) {\r\n            parentIndx = \"\";\r\n            dropIndx = \"0\";\r\n          } else {\r\n            dropIndx = (parseInt(dropIndx) + 1) + \"\";\r\n          }\r\n\r\n          handleAddElement(type, parentIndx, dropIndx, metaProps, props);\r\n        }\r\n      } else {\r\n        handleUpdateElement(index, props);\r\n      }\r\n      setIsDraggable(true);\r\n      handleElementClick && handleElementClick(null);\r\n    }\r\n  }\r\n\r\n  const openProps = (type) => {\r\n    setSelectedElementType(type);\r\n    setMode(\"props\");\r\n  }\r\n\r\n  const openElementList = () => {\r\n    setSelectedElementType(\"\");\r\n    setMode(\"list\");\r\n  }\r\n\r\n  const closePopover = () => {\r\n    setMode(isNew ? \"list\" : \"props\");\r\n    setOpen(false);\r\n    setIsDraggable(true);\r\n    handleElementClick(null);\r\n  }\r\n\r\n  const openPopover = (evt) => {\r\n    setOpen(true);\r\n    setIsDraggable(false);\r\n    evt && evt.stopPropagation();\r\n  }\r\n\r\n  let listContents = (<ElementListPanel openProps={openProps} closePopover={closePopover} />);\r\n  let metaProps = getElementPropsMeta(selectedElementType);\r\n  let propsContent = <PropertiesPanel selectedElement={{ type: selectedElementType, meta: metaProps, props, theme }}\r\n    applyChange={addElementAndClosePopover(selectedElementType, elementIndex, metaProps)}\r\n    closePopover={closePopover} \r\n    openElementList={openElementList} />\r\n\r\n  return (<Popover\r\n    autoAlign={true}\r\n    caret={false}\r\n    dropShadow={false}\r\n    highContrast={false}\r\n    open={open}\r\n    onClick={(evt) => evt.stopPropagation()}\r\n    onClose={() => setOpen(!open)}>\r\n    {mode == \"list\" ?\r\n      (<Add size={20} onClick={(evt) => openPopover(evt)} style={{ border: \"1px solid var(--cds-layer)\", borderRadius: \"20%\", backgroundColor: \"var(--cds-text-secondary)\", color: \"var(--cds-background,#ffffff)\" }} />) :\r\n      (<Edit size={20} onClick={(evt) => openPopover(evt)} style={{ border: \"1px solid var(--cds-layer)\", borderRadius: \"20%\", backgroundColor: \"var(--cds-text-secondary)\", color: \"var(--cds-background,#ffffff)\" }} />)\r\n    }\r\n    {\r\n      mode == \"list\" ? listContents : propsContent\r\n    }\r\n  </Popover>)\r\n}\r\n\r\nconst PropertiesPanel = ({ selectedElement, applyChange, closePopover, openElementList }) => {\r\n  const [elementProps, setElementProps] = useState(selectedElement.props || {});\r\n  const [fullscreen, setFullscreen] = useState(false);\r\n\r\n  if (selectedElement == null) {\r\n    return null;\r\n  }\r\n\r\n  let metaProps = [...selectedElement.meta];\r\n  let filteredProps = [];\r\n  metaProps.map((metaProp) => {\r\n    if (filteredProps.filter((filteredProp) => filteredProp.name == metaProp.name || metaProp.name == \"context\" || metaProp.name == \"theme\" || metaProp.name == \"clan\").length == 0) {\r\n      filteredProps.push(metaProp);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <PopoverContent className={fullscreen? \"element-popover popover-fullscreen\": \"element-popover\"}>\r\n      <div className=\"properties-panel-header\">\r\n        <div className=\"properties-panel-label\">Properties</div>\r\n        <Close size=\"20\"\r\n          style={{ position: \"absolute\", right: 0, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n          onClick={(evt) => {\r\n            closePopover();\r\n            evt.stopPropagation();\r\n          }} />\r\n          {\r\n            fullscreen? (<Minimize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => false);\r\n              evt.stopPropagation();\r\n            }} />): (<Maximize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => true);\r\n              evt.stopPropagation();\r\n            }} />)\r\n          }\r\n      </div>\r\n      <div className=\"properties-panel\">\r\n        <div className=\"properties-panel-actions\">\r\n          <Button kind=\"ghost\" onClick={(evt) => {\r\n            applyChange(elementProps);\r\n            evt.stopPropagation();\r\n          }}>Apply</Button>\r\n          <Button kind=\"ghost\" onClick={(evt) => {\r\n            openElementList();\r\n            evt.stopPropagation();\r\n          }}>Elements</Button>\r\n        </div>\r\n        <p>Element: {selectedElement.type}</p>\r\n        {\r\n          filteredProps.map((elementPropMetadata) => {\r\n            let ReactComponent = null;\r\n            switch (elementPropMetadata.type) {\r\n              case \"string\":\r\n              case \"number\":\r\n                ReactComponent = withStyles(SrsInputStyles)(SrsInput);\r\n                return (<ReactComponent\r\n                  elementid={elementPropMetadata.name}\r\n                  label={elementPropMetadata.name}\r\n                  value={elementProps[elementPropMetadata.name] || \"\"}\r\n                  onChange={(value) => {\r\n                    setElementProps((prevProps) => {\r\n                      return { ...prevProps, [elementPropMetadata.name]: value }\r\n                    });\r\n                  }}\r\n                  theme={props.theme} />);\r\n                break;\r\n              case \"boolean\":\r\n                console.log(\"In boolean\", SrsCheckbox)\r\n                ReactComponent = withStyles(SrsCheckboxStyles)(SrsCheckbox);\r\n                let val = elementProps.hasOwnProperty(elementPropMetadata.name)? elementProps[elementPropMetadata.name]: true;\r\n                return (<ReactComponent\r\n                  elementid={elementPropMetadata.name}\r\n                  label={elementPropMetadata.name}\r\n                  value={val}\r\n                  onChange={(value) => {\r\n                    setElementProps((prevProps) => {\r\n                      return { ...prevProps, [elementPropMetadata.name]: value }\r\n                    });\r\n                  }}\r\n                  theme={props.theme} />);\r\n                break;\r\n              case \"object\":\r\n                ReactComponent = withStyles(SrsTextAreaStyles)(SrsTextArea);\r\n                return (<ReactComponent\r\n                  label={elementPropMetadata.name}\r\n                  placeholder={JSON.stringify({padding: 0, border: \"1px solid white\"}, null, 4)}\r\n                  value={elementProps[elementPropMetadata.name] || \"\"}\r\n                  onChange={(value) => {\r\n                    setElementProps((prevProps) => {\r\n                      return { ...prevProps, [elementPropMetadata.name]: value }\r\n                    });\r\n                  }}\r\n                  theme={props.theme} />);\r\n                break;\r\n            }\r\n          })\r\n        }\r\n      </div>\r\n    </PopoverContent>\r\n  );\r\n}\r\n\r\nconst ElementListPanel = ({ openProps, closePopover }) => {\r\n  const [fullscreen, setFullscreen] = useState(false);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  let elementNames = Object.keys(componentLookup);\r\n  let sortedElements = [];\r\n  elementNames.map((elementName) => {\r\n    sortedElements.push({name: elementName, label: componentLookup[elementName].label, order: componentLookup[elementName].order});\r\n  });\r\n\r\n  sortedElements = sortedElements.sort((a, b) => (a.order > b.order) ? 1 : -1);\r\n  sortedElements = sortedElements.filter((el) => {\r\n    if(filter) {\r\n      return el.name.toLowerCase().indexOf(filter.toLowerCase()) > -1 || el.label.toLowerCase().indexOf(filter.toLowerCase()) > -1;\r\n    }else {\r\n      return true;\r\n    }\r\n  });\r\n\r\n  let elementList = sortedElements.map((element) => {\r\n    return (<Button kind=\"ghost\" onClick={() => openProps(element.name)} className=\"element-btn\">{element.label}</Button>);\r\n  })\r\n\r\n  return (\r\n    <PopoverContent className={fullscreen? \"element-popover popover-fullscreen\": \"element-popover\"}>\r\n      <div className=\"properties-panel-header\">\r\n        <div className=\"properties-panel-label\">Element Selection</div>\r\n        <Close size=\"20\"\r\n          style={{ position: \"absolute\", right: 0, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n          onClick={(evt) => {\r\n            closePopover();\r\n            evt.stopPropagation();\r\n          }} />\r\n          {\r\n            fullscreen? (<Minimize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => false);\r\n              evt.stopPropagation();\r\n            }} />): (<Maximize size=\"16\"\r\n            style={{ position: \"absolute\", right: 20, top: 3, color: \"var(--cds-background,#ffffff)\" }}\r\n            onClick={(evt) => {\r\n              setFullscreen((prevValue) => true);\r\n              evt.stopPropagation();\r\n            }} />)\r\n          }\r\n      </div>\r\n      <div className=\"search-panel\">\r\n        <Search size=\"sm\" defaultValue=\"\" labelText=\"\" closeButtonLabelText=\"Clear search input\" id=\"search-1\"\r\n          style={{ color: \"var(--cds-text-primary,#161616)\" }}\r\n          onChange={(evt) => {\r\n            // debugger;\r\n            setFilter((prevVal) => evt.target.value);\r\n          }} />\r\n      </div>\r\n      <div className=\"element-btn-container\">\r\n        { elementList }\r\n      </div>\r\n    </PopoverContent>\r\n  );\r\n}","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { register } from \"../../commons/ComponentRegistry\";\r\nimport { componentLookup } from \"../../commons/WebcomponentRegistry\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\nimport { CodeSnippetSkeleton } from \"carbon-components-react\";\r\n\r\nimport { AddElementPopover, Element } from \"./Element\";\r\nimport { getUniqueElementId } from \"../../commons/CommonUtils\";\r\n\r\nconst dispatchedEvents = [];\r\n\r\nfunction interceptEventTarget(event) {\r\n    if (event.composed) {\r\n        Object.defineProperty(event, 'target', {\r\n            value: event.composedPath()[0],\r\n            writable: false,\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    }\r\n}\r\n\r\nfunction handleEvent(event) {\r\n    interceptEventTarget(event);\r\n}\r\n\r\nfunction addListeners(el) {\r\n    if (!el) return;\r\n    el.addEventListener('mouseup', handleEvent);\r\n    el.addEventListener('mousedown', handleEvent);\r\n    el.addEventListener('mouseover', handleEvent);\r\n    el.addEventListener('mouseleave', handleEvent);\r\n    el.addEventListener('mouseenter', handleEvent);\r\n\r\n    el.addEventListener('touchstart', handleEvent);\r\n    el.addEventListener('touchmove', handleEvent);\r\n    el.addEventListener('touchend', handleEvent);\r\n}\r\nfunction removeListeners(el) {\r\n    if (!el) return;\r\n    el.removeEventListener('mouseup', handleEvent);\r\n    el.removeEventListener('mousedown', handleEvent);\r\n    el.removeEventListener('mouseover', handleEvent);\r\n    el.removeEventListener('mouseleave', handleEvent);\r\n    el.removeEventListener('mouseenter', handleEvent);\r\n\r\n    el.removeEventListener('touchstart', handleEvent);\r\n    el.removeEventListener('touchmove', handleEvent);\r\n    el.removeEventListener('touchend', handleEvent);\r\n}\r\n\r\nconst SrsUIStudio = function (props, ref) {\r\n    const [eventBinding, setEventBinding] = useState(false);\r\n    const [selectedElement, setSelectedElement] = useState(null);\r\n    const [componentsRegistered, setComponentsRegistered] = useState(false);\r\n    const [componentMetaData, setComponentMetaData] = useState({});\r\n    const [isDraggable, setIsDraggable] = useState(true);\r\n\r\n    let dragElementIndx = null;\r\n\r\n    const [elements, setElements] = useState([\r\n        { elementId: getUniqueElementId(), type: \"srs-input\", props: { label: \"Hello\" } },\r\n        {\r\n            elementId: getUniqueElementId(),\r\n            type: \"srs-container\",\r\n            props: {\r\n                styles: {\r\n                    border: \"1px solid red\",\r\n                    padding: 10\r\n                }\r\n            },\r\n            children: [\r\n                {\r\n                    elementId: getUniqueElementId(),\r\n                    type: \"srs-input\", props: {\r\n                        placeholder: \"This is the first child\"\r\n                    }\r\n                },\r\n                {\r\n                    elementId: getUniqueElementId(),\r\n                    type: \"srs-input\", props: {\r\n                        value: \"This is the second child\"\r\n                    }\r\n                }],\r\n        },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!eventBinding) {\r\n            // Add the event listener to the window object\r\n            addListeners(ref.current);\r\n            setEventBinding(true);\r\n            registerAllComponents().then(() => setComponentsRegistered(true));\r\n        }\r\n\r\n        // Remove the event listener when the component unmounts\r\n        return () => {\r\n            removeListeners(ref.current)\r\n        };\r\n    }, [props.elementid]);\r\n\r\n    const registerAllComponents = async () => {\r\n        await loadComponentsMetaData();\r\n        return register(Object.keys(componentLookup));\r\n    }\r\n\r\n    const loadComponentsMetaData = async () => {\r\n        let componentNames = Object.keys(componentLookup);\r\n        let componentsMetaData = {};\r\n        for (let componentNameIndx in componentNames) {\r\n            let componentName = componentNames[componentNameIndx];\r\n            let componentData = await import(`../../components/${componentLookup[componentName].component}`);\r\n            let compStyles = componentData[\"styles\"];\r\n            let compProps = componentData[\"props\"];\r\n            let compEvents = componentData[\"dispatchedEvents\"];\r\n            let compSlots = componentData[\"slots\"];\r\n            componentsMetaData[componentName] = { styles: compStyles, props: compProps, dispatchedEvents: compEvents, slots: compSlots };\r\n        }\r\n        setComponentMetaData(componentsMetaData);\r\n    }\r\n\r\n    const addElements = (elementItems) => {\r\n        elementItems.map((elementItem) => {\r\n            const { type, parentIndex = null, dropIndx = null, elementPropsMeta = [], elementProps = {} } = elementItem;\r\n            addElement(type, parentIndex, dropIndx, elementPropsMeta, elementProps);\r\n        })\r\n    }\r\n\r\n    const addElement = (type, parentIndex = null, dropIndx = null, elementPropsMeta = [], elementProps = {}) => {\r\n        const newElement = { elementId: getUniqueElementId(), type: type, props: elementProps, meta: [] };\r\n        if (type === \"section\") {\r\n            newElement.children = [];\r\n        } else {\r\n            newElement.meta = elementPropsMeta;\r\n            elementPropsMeta && elementPropsMeta.map((elementProp) => {\r\n                newElement.props[elementProp.name] = elementProps[elementProp.name] || elementProp.defaultValue;\r\n            });\r\n\r\n            if (componentMetaData[type].slots && componentMetaData[type].slots.length > 0) {\r\n                newElement.children = [];\r\n                componentMetaData[type].slots.map((remainingSlot) => {\r\n                    let slotElement = { type: \"srs-contentslot\", props: { slot_details: remainingSlot }, meta: [{ name: \"slot_details\", type: \"object\", defaultValue: { name: \"default\" } }] };\r\n                    newElement.children.push(slotElement);\r\n                });\r\n            }\r\n        }\r\n\r\n        //clean up the entire tree to remove unnecessary slot elements for finding the correct parent element \r\n        setElements((prevElements) => {\r\n            const newElements = filterContentSlots([...prevElements]);\r\n            return newElements;\r\n        });\r\n\r\n        if (parentIndex === null) {\r\n            setElements((prevElements) => [...prevElements, newElement]);\r\n        } else {\r\n            setElements((prevElements) => {\r\n                const newElements = [...prevElements];\r\n                if (parentIndex) {\r\n                    const parentElement = getElementByIndex(parentIndex, newElements);\r\n                    parentElement.children = parentElement.children || [];\r\n                    parentElement.children.push(newElement);\r\n                    parentElement.children = filterContentSlots(parentElement.children);\r\n                } else {\r\n                    newElements.push(newElement);\r\n                }\r\n                return newElements;\r\n            });\r\n        }\r\n    };\r\n\r\n    const moveElement = (sourceIndex, destinationIndex) => {\r\n        const newElements = [...elements];\r\n        const sourceIndexes = sourceIndex.split('-').map(i => parseInt(i));\r\n        const destinationIndexes = destinationIndex.split('-').map(i => parseInt(i));\r\n        const sourceLevel = sourceIndexes.length;\r\n        const destinationLevel = destinationIndexes.length;\r\n\r\n        let sourceParent = getElementByIndex(sourceIndex.slice(0, sourceIndex.lastIndexOf('-')), newElements);\r\n        let sourceElement = !sourceParent && sourceLevel == 1 ? newElements[sourceIndex] : sourceParent.children[sourceIndexes[sourceLevel - 1]];\r\n\r\n        const parentIndex = destinationIndex.slice(0, destinationIndex.lastIndexOf('-'));\r\n        let destinationParent = getElementByIndex(parentIndex, newElements);\r\n        destinationParent = destinationLevel == 1 ? newElements : destinationParent;\r\n        const destinationIndexWithinParent = destinationIndexes[destinationLevel - 1];\r\n\r\n        // Remove the source element from its parent\r\n        sourceParent ? sourceParent.children.splice(sourceIndexes[sourceLevel - 1], 1) : newElements.splice(sourceIndex, 1);\r\n\r\n        // Insert the source element into the destination parent at the correct index\r\n        destinationLevel == 1 ? destinationParent.splice(destinationIndexWithinParent, 0, sourceElement) :\r\n            destinationParent.children.splice(destinationIndexWithinParent, 0, sourceElement);\r\n        setElements(newElements);\r\n    };\r\n\r\n    const deleteElement = (index) => {\r\n        setElements((prevElements) => {\r\n            const newElements = [...prevElements];\r\n            const parentIndex = index.slice(0, index.lastIndexOf(\"-\"));\r\n            const indexParts = index.split(\"-\");\r\n\r\n            if (parentIndex === \"\") {\r\n                newElements.splice(index, 1);\r\n            } else {\r\n                const parentElement = getElementByIndex(parentIndex, newElements);\r\n                // const childIndex = getIndexByIndex(index, parentElement.children);\r\n                const childIndex = parseInt(indexParts[indexParts.length - 1]);\r\n                // parentElement.children?.splice(childIndex, 1);\r\n                parentElement.children = parentElement.children || [];\r\n                let parentSlots = componentMetaData[parentElement.type]?.slots || [];\r\n                if (parentSlots && parentSlots.length > 0) {\r\n                    parentElement.children = parentElement.children || [];\r\n                    //Add all content slot nodes required for the parentElement first and then filter out the unnecessary slots looking at the actual element for the given slotname \r\n                    parentSlots.map((remainingSlot) => {\r\n                        let slotElement = { type: \"srs-contentslot\", props: { slot_details: remainingSlot }, meta: [{ name: \"slot_details\", type: \"object\", defaultValue: { name: \"default\" } }] };\r\n                        if(parentElement.children.filter((childEl) => { return childEl.type == \"srs-contentslot\" && childEl.props?.slot_details?.name === remainingSlot.name}).length == 0) {\r\n                            parentElement.children.push(slotElement);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                parentElement.children = parentElement.children.filter((childItem, indx) => {\r\n                    return indx !== childIndex; \r\n                });\r\n                parentElement.children = filterContentSlots(parentElement.children);\r\n            }\r\n            return newElements;\r\n        });\r\n        setSelectedElement(null);\r\n    };\r\n\r\n    const setElementText = (index, text) => {\r\n        setElements((prevElements) => {\r\n            const newElements = [...prevElements];\r\n            const element = getElementByIndex(index, newElements);\r\n            element.text = text;\r\n            return newElements;\r\n        });\r\n    };\r\n\r\n    const getElementByIndex = (index, elements) => {\r\n        const indexes = index.split('-').map(i => parseInt(i));\r\n        let result = null;\r\n\r\n        const traverse = (arr, idx) => {\r\n            const i = idx.shift();\r\n            const el = arr[i];\r\n\r\n            if (idx.length === 0) {\r\n                result = el;\r\n            } else {\r\n                traverse(el.children, idx);\r\n            }\r\n        }\r\n\r\n        traverse(elements, indexes);\r\n\r\n        return result;\r\n    }\r\n\r\n    const handleAddElement = (type, parentIndex = null, dropIndex = null, meta, props) => {\r\n        addElement(type, parentIndex, dropIndex, meta, props);\r\n        // cleanupElements();\r\n    };\r\n\r\n    const handleAddElements = (elements) => {\r\n        addElements(elements);\r\n        // cleanupElements();\r\n    };\r\n\r\n    function filterContentSlots(nodes) {\r\n        return nodes.filter(node => {\r\n            if (node.type != \"srs-contentslot\") {\r\n                if(node.children) {\r\n                    node.children = filterContentSlots(node.children);\r\n                }\r\n                return true;\r\n            } else {\r\n                //If the node is a contentslot, check if an element is already added with the same slotname to discard this node otherwise need to keep it \r\n                const slotnames = new Set();\r\n                for (const sibling of nodes) {\r\n                    if (sibling.type !== \"srs-contentslot\") {\r\n                        if (!slotnames.has(sibling.props.slotname || \"default\")) {\r\n                            slotnames.add(sibling.props.slotname || \"default\");\r\n                        }\r\n                    }\r\n                }\r\n                const slotname = node.props?.slot_details?.name || \"default\";\r\n                return !slotnames.has(slotname);\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleUpdateElement = (elementIndex = null, props, children, elementType) => {\r\n        setElements((prevElements) => {\r\n            const newElements = [...prevElements];\r\n            if (elementIndex) {\r\n                const elementToUpdate = getElementByIndex(elementIndex, newElements);\r\n                elementToUpdate.type = elementType || elementToUpdate.type;\r\n                elementToUpdate.props = { ...elementToUpdate.props, ...props };\r\n                if(children) {\r\n                    elementToUpdate.children = children;\r\n                }\r\n            }\r\n            return newElements;\r\n        });\r\n    };\r\n\r\n    const handleMoveElement = (sourceIndex, destinationIndex) => {\r\n        moveElement(sourceIndex, destinationIndex);\r\n    };\r\n\r\n    const handleDeleteElement = (index) => {\r\n        deleteElement(index);\r\n    };\r\n\r\n    const handleSetElementText = (index, text) => {\r\n        setElementText(index, text);\r\n    };\r\n\r\n    const handleDragStart = (event, dragIndex) => {\r\n        // event.preventDefault();\r\n\r\n        if (!dragElementIndx) {\r\n            dragElementIndx = dragIndex;\r\n            console.log(\"handleDragStart \", dragIndex)\r\n        }\r\n        // if (!event.dataTransfer.getData(\"text/plain\"))\r\n        //     event.dataTransfer.setData(\"text/plain\", dragIndex);\r\n    };\r\n\r\n    const handleDragOver = (event, dropIndex) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = \"move\";\r\n        event.currentTarget.classList.add(\"drag-over\");\r\n    };\r\n\r\n    const handleDragLeave = (event) => {\r\n        event.currentTarget.classList.remove(\"drag-over\");\r\n    };\r\n\r\n    const handleDrop = (event, dropIndex) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        event.currentTarget.classList.remove(\"drag-over\");\r\n        const dragIndex = dragElementIndx; //event.dataTransfer.getData(\"text/plain\");\r\n        handleMoveElement(dragIndex, dropIndex);\r\n    };\r\n\r\n    const handleElementClick = (element) => {\r\n        setSelectedElement(element);\r\n    };\r\n\r\n    let elementProps = {\r\n        selectedElement, handleDragStart, handleDrop, handleDragOver, handleElementClick, handleAddElement, handleAddElements, handleUpdateElement, handleDeleteElement,\r\n        handleSetElementText, handleDragLeave, componentMetaData, isDraggable, setIsDraggable\r\n    };\r\n    return componentsRegistered ? (\r\n        <>\r\n            <div className=\"page-builder\">\r\n                <div className=\"page-canvas\">\r\n                    {elements.map((element, index) => (\r\n                        <Element key={index} elementData={element} index={index.toString()} selected={element.elementId === (selectedElement?.elementId || \"-1\")} {...elementProps} theme={props.theme} />\r\n                    ))}\r\n                    {elements.length == 0 ? (<div className=\"add-element-buttons\">\r\n                        <AddElementPopover handleAddElement={handleAddElement} handleUpdateElement={handleUpdateElement} index=\"\" metadata={componentMetaData} isNew={true} theme={props.theme} setIsDraggable={setIsDraggable} />\r\n                    </div>) : null}\r\n                </div>\r\n            </div>\r\n        </>\r\n    ) : (<>\r\n        <CodeSnippetSkeleton type=\"single\" style={{ marginBottom: 8 }} />\r\n        <CodeSnippetSkeleton type=\"multi\" />\r\n    </>);\r\n};\r\n\r\n\r\nconst styles = `\r\n\r\n  .json-editor-actions {\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n  }\r\n\r\n  .ele-container-hover {\r\n    border: 1px solid var(--cds-text-secondary);\r\n    color: var(--cds-background) !important;\r\n    padding: 5px;\r\n  }\r\n\r\n  .element-glass {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    opacity: 0\r\n  }\r\n\r\n  .element-actions {\r\n    visibility: hidden;\r\n    display: flex;\r\n    justify-content: center;\r\n    color: var(--cds-text-secondary);\r\n    padding: 5px;\r\n    top: 40%;\r\n    left: 48%;\r\n    position: absolute;\r\n  }\r\n\r\n  .ele-container-hover > .element-glass {\r\n    background-color: var(--cds-field) !important;\r\n    opacity: 1 !important;\r\n  }\r\n\r\n  .ele-container-hover > .element-glass > .element-actions {\r\n    visibility: visible !important;\r\n  }\r\n\r\n  .cds--search {\r\n    width: 80% !important;\r\n    padding: 5px !important;\r\n  }\r\n\r\n  .cds--search-close {\r\n    padding: 5px !important;\r\n    margin-top: 5px !important;\r\n  }\r\n\r\n  .element-popover {\r\n    margin-top: 3rem;\r\n    border: 1px solid var(--cds-text-secondary);\r\n    width: 20rem !important;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    min-height: 30rem;\r\n    max-height: 40rem;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  .element-popover.popover-fullscreen {\r\n    width: 40vw !important;\r\n    max-width: 100vw !important;\r\n    height:80vw !important;\r\n  }\r\n\r\n  .element-btn-container {\r\n    padding: 5px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .element-btn {\r\n    background-color: var(--cds-background) !important;\r\n    color: var(--cds-text-primary,#161616) !important;\r\n    margin: 5px !important;\r\n    width: 44% !important;\r\n  }\r\n\r\n  .section-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n\r\n  .page-builder {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 10px;\r\n    padding: 10px;\r\n    border: 2px solid black;\r\n  }\r\n  \r\n  .page-canvas {\r\n    width: 100%;\r\n  }\r\n\r\n  .props-panel {\r\n    width: 19%;\r\n  }\r\n\r\n  .element {\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-radius: 5px;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    align-items: stretch;\r\n    width: 100%;\r\n    pointer-events: all;\r\n  }\r\n\r\n  .element-slot-actions {\r\n    position: absolute;\r\n    text-align: center;\r\n    top: 0px;\r\n    z-index: 0;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    margin: 2px;\r\n    height: 40px;\r\n    border: 1px dotted var(--cds-background);\r\n    background-color: var(--cds-text-secondary,#161616);\r\n    padding: 5px;\r\n  }\r\n\r\n  .element-container {\r\n    position: relative;\r\n  }\r\n\r\n//   .element-container:hover {\r\n//     border: 1px solid var(--cds-text-secondary);\r\n//   }\r\n  \r\n  .drag-over {\r\n    background-color: #ddd;\r\n  }\r\n  \r\n  .text-element {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n    cursor: text;\r\n  }\r\n  \r\n  .text-element.editing {\r\n    cursor: auto;\r\n    border: 2px solid blue;\r\n  }\r\n  \r\n  .section-element {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    padding: 10px;\r\n    border: 2px solid black;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .add-element-buttons {\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 10px;\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    border: 2px dotted white;\r\n    justify-content: center;\r\n    background-color: var(--cds-text-secondary);\r\n    padding: 10px;\r\n}\r\n  \r\n.delete-element-button {\r\n    background-color: #ff0000;\r\n    color: #ffffff;\r\n    border: none;\r\n    border-radius: 50%;\r\n    width: 25px;\r\n    height: 25px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n}\r\n\r\n.properties-panel {\r\n    padding: 20px;\r\n}\r\n\r\n.properties-panel-header {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    background-color: var(--cds-text-secondary);\r\n    color: var(--cds-background,#ffffff)!important;\r\n    position: sticky;\r\n    top: 0px;\r\n    z-index: 100;\r\n}\r\n\r\n.properties-panel-label {\r\n    font-weight: 500;\r\n    padding: 10px;\r\n}\r\n\r\n.properties-panel-actions {\r\n    display: flex;\r\n    flex-flow: row-reverse;\r\n}\r\n\r\n  \r\n`\r\nconst props = [{\r\n    name: \"page_id\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsUIStudio), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["processComponentProperties","props","result","Object","keys","map","propKey","JSON","parse","err","getUniqueElementId","replace","c","r","Math","random","toString","dispatchedEvents","EventAPI","SrsCheckbox","ref","_useState","useState","checked","value","_useState2","_slicedToArray","isChecked","setIsChecked","useEffect","setValue","elementid","_jsx","Checkbox","labelText","label","id","onChange","evt","payload","dispatchEvent","styles","name","defaultValue","type","slots","WrappedComponent","wrapper","React","SrsTextArea","inputValue","setInputValue","style","children","TextArea","rows","cols","disabled","placeholder","readOnly","readonly","onBlur","_evt$target","target","_evt$target2","_evt$target3","_evt$target4","Element","_ref","_element$props","_element$props2","elementData","index","selected","selectedElement","handleDragStart","handleDrop","handleDragOver","handleElementClick","handleAddElement","handleAddElements","handleUpdateElement","handleDeleteElement","handleSetElementText","handleDragLeave","componentMetaData","theme","setIsDraggable","isDraggable","isEditing","setIsEditing","element","eleContainerRef","useRef","elementEl","getComponentToRender","elementElProps","handleDoubleClick","handleBlur","event","textContent","elementMetaData","_jsxs","className","_objectSpread","draggable","onDragOver","onDragLeave","zIndex","parseInt","replaceAll","onClick","closest","getAttribute","Close","size","border","borderRadius","backgroundColor","color","AddElementPopover","elementType","elementProps","metadata","isNew","parentElement","isContainer","isSlot","slotDetails","slot_details","JSONEditor","applyElementData","updatedElementData","_ref2","_useState3","_useState4","open","setOpen","_useState5","_useState6","setElementData","_useState7","_useState8","fullscreen","setFullscreen","closePopover","stopPropagation","ReactComponent","withStyles","SrsTextAreaStyles","Popover","autoAlign","caret","dropShadow","highContrast","onClose","Flow","openPopover","PopoverContent","position","right","top","Minimize","prevValue","Maximize","Button","kind","elementsData","elementId","elementItem","stringify","title","prevElementData","console","error","_ref3","componentToRender","NodeTag","length","_Fragment","childElement","childIndex","parentIndex","concat","elementSlotData","remainingSlots","_toConsumableArray","nonSlottedChildElements","slottedElementsAdded","_childElement$props","_childElement$props2","slotname","filter","s","push","width","pointerEvents","contentEditable","getSlotName","_ref4","_ref4$elementType","_ref4$elementProps","_ref4$isNew","_useState9","_useState10","_useState11","_useState12","mode","setMode","extraProps","_useState13","_useState14","_useState15","_useState16","elementIndex","_useState17","_useState18","selectedElementType","setSelectedElementType","listContents","ElementListPanel","openProps","metaProps","_metadata$type","getElementPropsMeta","propsContent","PropertiesPanel","meta","applyChange","lastIndex","lastIndexOf","parentIndx","slice","dropIndx","addElementAndClosePopover","openElementList","Add","Edit","_ref5","_useState19","_useState20","setElementProps","_useState21","_useState22","filteredProps","metaProp","filteredProp","elementPropMetadata","SrsInputStyles","SrsInput","prevProps","_defineProperty","log","SrsCheckboxStyles","val","hasOwnProperty","padding","_ref6","_useState23","_useState24","_useState25","_useState26","setFilter","elementNames","componentLookup","sortedElements","elementName","order","elementList","sort","a","b","el","toLowerCase","indexOf","Search","closeButtonLabelText","prevVal","handleEvent","composed","defineProperty","composedPath","writable","enumerable","configurable","interceptEventTarget","SrsUIStudio","eventBinding","setEventBinding","setSelectedElement","componentsRegistered","setComponentsRegistered","setComponentMetaData","dragElementIndx","elements","setElements","current","addEventListener","registerAllComponents","then","removeEventListener","removeListeners","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","loadComponentsMetaData","abrupt","register","stop","apply","arguments","_callee2","componentNames","componentsMetaData","componentNameIndx","componentName","componentData","compStyles","compProps","compEvents","compSlots","_context2","t0","t1","done","component","sent","addElement","undefined","elementPropsMeta","newElement","elementProp","remainingSlot","slotElement","prevElements","filterContentSlots","newElements","getElementByIndex","indexes","split","i","traverse","arr","idx","shift","nodes","node","_node$props","_node$props$slot_deta","_step","slotnames","Set","_iterator","_createForOfIteratorHelper","n","sibling","has","add","e","f","elementToUpdate","handleMoveElement","sourceIndex","destinationIndex","sourceIndexes","destinationIndexes","sourceLevel","destinationLevel","sourceParent","sourceElement","destinationParent","destinationIndexWithinParent","splice","moveElement","dragIndex","dropIndex","preventDefault","currentTarget","classList","remove","dataTransfer","dropEffect","_elementItem$parentIn","_elementItem$dropIndx","_elementItem$elementP","_elementItem$elementP2","indexParts","_componentMetaData$pa","parentSlots","childEl","_childEl$props","_childEl$props$slot_d","childItem","indx","deleteElement","text","setElementText","CodeSnippetSkeleton","marginBottom"],"sourceRoot":""}