{"version":3,"file":"static/js/basic-Header.5d4f50c9.chunk.js","mappings":"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","sources":["components/basic/Header.js","components/basic/Icon.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\nimport {\r\n    Header, HeaderName, HeaderNavigation, HeaderMenuItem, HeaderGlobalBar, HeaderGlobalAction,\r\n    Tooltip, SideNav, SideNavItems, HeaderSideNavItems, HeaderMenu, HeaderPanel, SkipToContent,\r\n    ListItem, UnorderedList\r\n} from \"carbon-components-react\";\r\nimport { TableOfContents } from \"@carbon/icons-react\";\r\nimport { EventAPI } from \"../../commons/EventAPI\";\r\nimport { Button } from \"@carbon/react\";\r\nimport SrsIcon from \"./Icon\";\r\n\r\nconst dispatchedEvents = [\"ABOUT#clicked\"];\r\n\r\n/*\r\n    Example: <srs-pageheader header_name=\"Srste\" header_title=\"Srste [Platform]\" \r\n                menu_items=[{name: \"home\", \"link\": \"/home\"}, {name: \"builder\", link: \"/builder\"}]>\r\n            </srs-pageheader>\r\n*/\r\nconst SrsPageHeader = function (props, ref) {\r\n    const [isSideNavExpanded, setIsSideNavExpanded] = useState(false);\r\n    const [isPanelOpen, setIsPanelOpen] = useState(false);\r\n    const [activePanel, setActivePanel] = useState(null);\r\n    const [sideNavParent, setSideNavParent] = useState(null);\r\n    const [sideNavGrantParent, setSideNavGrantParent] = useState(null);\r\n    const [sideNavMenuItems, setSideNavMenuItems] = useState(null);\r\n\r\n    let openPanel = false;\r\n    let activePanelName = \"\";\r\n    let eventBinding = false;\r\n\r\n    function handleUXSettings() {\r\n        openPanel = activePanelName == \"settings\" ? !openPanel : true;\r\n        activePanelName = openPanel ? \"settings\" : \"\";\r\n        setIsPanelOpen(openPanel);\r\n        setActivePanel(activePanelName);\r\n    }\r\n\r\n    function handleNavigation() {\r\n        openPanel = activePanelName == \"navigation\" ? !openPanel : true;\r\n        activePanelName = openPanel ? \"navigation\" : \"\";\r\n        setIsPanelOpen(openPanel);\r\n        setActivePanel(activePanelName);\r\n    }\r\n\r\n    function handleAppSwitcher() {\r\n        openPanel = activePanelName == \"appswitcher\" ? !openPanel : true;\r\n        activePanelName = openPanel ? \"appswitcher\" : \"\";\r\n        setIsPanelOpen(openPanel);\r\n        setActivePanel(activePanelName);\r\n    }\r\n\r\n    function handleSearch() {\r\n        openPanel = activePanelName == \"search\" ? !openPanel : true;\r\n        activePanelName = openPanel ? \"search\" : \"\";\r\n        setIsPanelOpen(openPanel);\r\n        setActivePanel(activePanelName);\r\n    }\r\n\r\n    function interceptEventTarget(event) {\r\n        if (event.composed) {\r\n            Object.defineProperty(event, 'target', {\r\n                value: event.composedPath()[0],\r\n                writable: false,\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleEvent(event) {\r\n        interceptEventTarget(event);\r\n    }\r\n\r\n    function handleSideNavExpanded(value, dispatchEvent) {\r\n        setIsSideNavExpanded(value);\r\n        dispatchEvent && dispatchEvent(EventAPI.HEADER_SIDENAV_EXPANDED, { expanded: value });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!eventBinding) {\r\n            ref.current.addEventListener(EventAPI.HEADER_UX_SETTINGS_CLICKED, handleUXSettings);\r\n            ref.current.addEventListener(EventAPI.HEADER_APPSWITCHER_CLICKED, handleAppSwitcher);\r\n            ref.current.addEventListener(EventAPI.HEADER_NAVIGATION_CLICKED, handleNavigation);\r\n            ref.current.addEventListener(EventAPI.HEADER_SEARCH_CLICKED, handleSearch);\r\n\r\n            // Add the event listener to the window object\r\n            ref.current.addEventListener('mouseup', handleEvent);\r\n            ref.current.addEventListener('mousedown', handleEvent);\r\n            ref.current.addEventListener('mouseover', handleEvent);\r\n            ref.current.addEventListener('mouseleave', handleEvent);\r\n            ref.current.addEventListener('mouseenter', handleEvent);\r\n\r\n\r\n            ref.current.addEventListener('touchstart', handleEvent);\r\n            ref.current.addEventListener('touchmove', handleEvent);\r\n            ref.current.addEventListener('touchend', handleEvent);\r\n            props.dispatchEvent(EventAPI.HEADER_ADDED);\r\n            eventBinding = true;\r\n        }\r\n\r\n        // Remove the event listener when the component unmounts\r\n        return () => {\r\n            ref.current.removeEventListener(EventAPI.HEADER_UX_SETTINGS_CLICKED, handleUXSettings);\r\n            ref.current.removeEventListener(EventAPI.HEADER_APPSWITCHER_CLICKED, handleAppSwitcher);\r\n            ref.current.removeEventListener(EventAPI.HEADER_NAVIGATION_CLICKED, handleNavigation);\r\n            ref.current.removeEventListener(EventAPI.HEADER_SEARCH_CLICKED, handleSearch);\r\n\r\n            ref.current.removeEventListener('mouseup', handleEvent);\r\n            ref.current.removeEventListener('mousedown', handleEvent);\r\n            ref.current.removeEventListener('mouseover', handleEvent);\r\n            ref.current.removeEventListener('mouseleave', handleEvent);\r\n            ref.current.removeEventListener('mouseenter', handleEvent);\r\n\r\n            ref.current.removeEventListener('touchstart', handleEvent);\r\n            ref.current.removeEventListener('touchmove', handleEvent);\r\n            ref.current.removeEventListener('touchend', handleEvent);\r\n\r\n        };\r\n    }, [props.name]);\r\n\r\n    const handleMenuItemClick = (path, dispatchEvent) => {\r\n        return (evt) => {\r\n            evt.preventDefault();\r\n            window.history.pushState(null, '', path);\r\n            props.dispatchEvent(\"NAVIGATE_TO_PATH\", { path });\r\n            setSideNavMenuItems(null);\r\n            handleSideNavExpanded(false, dispatchEvent);\r\n        }\r\n    }\r\n\r\n    const findChildItems = (items, parentItemName) => {\r\n        if (parentItemName) {\r\n            items.forEach((item) => {\r\n                if (item.name == parentItemName) {\r\n                    return item.children;\r\n                } else if (item.children) {\r\n                    return findChildItems(item.children, parentItemName);\r\n                }\r\n            });\r\n        } else {\r\n            return items;\r\n        }\r\n        return items[0].children;\r\n    }\r\n\r\n    const CustomHeaderMenuItem = function (itemProps) {\r\n        const [isOpen, setIsOpen] = useState(false);\r\n\r\n        const handleMenuClick = (evt) => {\r\n            setIsOpen(true);\r\n        }\r\n\r\n        const handlePopoverClose = () => {\r\n            setIsOpen(false);\r\n        }\r\n\r\n        //TODO - Render the submenu items\r\n        return null;\r\n    }\r\n\r\n    let sideNavItems = findChildItems(props.sidenav_items, sideNavParent);\r\n    if (sideNavParent) {\r\n        sideNavItems = [{\r\n            name: sideNavGrantParent,\r\n            iconName: \"hand-point-left\",\r\n            navigateback: true,\r\n            label: \"Back\",\r\n            iconType: \"fontawesome\",\r\n            color: \"var(--cds-text-primary)\",\r\n            size: 20\r\n        }].concat(sideNavItems);\r\n    }\r\n    let fixedModuleEl = (<div className=\"fixedMenu\">\r\n        {\r\n            sideNavItems ? sideNavItems.map((sidenavItem, indx) => {\r\n                return (<div className=\"fixedMenuItemFreeText iconView\">\r\n                    <SrsIcon type={sidenavItem.iconType || \"carbon\"} name={sidenavItem.iconName}\r\n                        color={sidenavItem.color} size={sidenavItem.size || 20}\r\n                        description={sidenavItem.label}\r\n                        onClick={(evt) => {\r\n                            if (sidenavItem.children || sidenavItem.navigateback) {\r\n                                setSideNavGrantParent(sideNavParent);\r\n                                setSideNavParent(sidenavItem.name);\r\n                                setSideNavMenuItems(null);\r\n                                handleSideNavExpanded(false, props.dispatchEvent);\r\n                            } else if (sidenavItem.menuItems) {\r\n                                if (sidenavItem.menuItems && sidenavItem.menuItems.length > 0) {\r\n                                    setSideNavMenuItems(sidenavItem.menuItems);\r\n                                    handleSideNavExpanded(true, props.dispatchEvent);\r\n                                } else {\r\n                                    setSideNavMenuItems(null);\r\n                                    handleSideNavExpanded(false, props.dispatchEvent);\r\n                                }\r\n                            }\r\n                        }} />\r\n                </div>)\r\n            }) : null\r\n        }\r\n    </div>);\r\n\r\n    let sideNavMainEl = sideNavMenuItems && sideNavMenuItems.length > 0 ? (<SideNav\r\n        aria-label=\"Side navigation\"\r\n        expanded={isSideNavExpanded}\r\n        isPersistent={false}>\r\n        <SideNavItems>\r\n            {\r\n                sideNavMenuItems.map((menuItem) => {\r\n                    if (menuItem.children) {\r\n                        return (<HeaderMenu aria-label={menuItem.label} menuLinkName={menuItem.label}>\r\n                            {\r\n                                menuItem.children.map((submenuItem) => {\r\n                                    return (<HeaderMenuItem onClick={handleMenuItemClick(submenuItem.link, props.dispatchEvent)}>{submenuItem.label}</HeaderMenuItem>);\r\n                                })\r\n                            }\r\n                        </HeaderMenu>)\r\n                    }\r\n                    return (<HeaderMenuItem onClick={handleMenuItemClick(menuItem.link, props.dispatchEvent)}>{menuItem.label}</HeaderMenuItem>);\r\n                })\r\n            }\r\n        </SideNavItems>\r\n    </SideNav>) : null;\r\n\r\n    let inlineStyles = {\r\n        \"--cds-background-hover\": \"var(--cds-layer-accent)\"\r\n    }\r\n\r\n    let headerPanel = null;\r\n\r\n    if (activePanel) {\r\n        switch (activePanel) {\r\n            case \"settings\":\r\n                headerPanel = (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", padding: 40 }}>\r\n                        <h4>Choose a theme</h4>\r\n                        <div style={{ padding: 20 }}>\r\n                            <UnorderedList>\r\n                                <ListItem style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                    props.dispatchEvent(EventAPI.PAGE_THEME_CHANGE, { theme: \"white\" });\r\n                                }}>Light Theme</ListItem>\r\n                                <ListItem style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                    props.dispatchEvent(EventAPI.PAGE_THEME_CHANGE, { theme: \"g10\" });\r\n                                }}>Grey-10 Theme</ListItem>\r\n                                <ListItem style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                    props.dispatchEvent(EventAPI.PAGE_THEME_CHANGE, { theme: \"g90\" });\r\n                                }}>Grey-90 Theme</ListItem>\r\n                                <ListItem style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                    props.dispatchEvent(EventAPI.PAGE_THEME_CHANGE, { theme: \"g100\" });\r\n                                }}>Dark Theme</ListItem>\r\n                            </UnorderedList>\r\n                        </div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"appswitcher\":\r\n                break;\r\n            case \"navigation\":\r\n                break;\r\n            case \"search\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (<Header aria-label={props.header_title} ref={ref} style={inlineStyles}>\r\n        <SkipToContent />\r\n        {fixedModuleEl}\r\n        <TableOfContents\r\n            size={24}\r\n            aria-label=\"Open menu\"\r\n            onClick={() => handleSideNavExpanded(!isSideNavExpanded, props.dispatchEvent)}\r\n        />\r\n        <HeaderName href=\"#\" prefix=\"\">{props.hader_name || props.header_title}</HeaderName>\r\n        <HeaderNavigation aria-label={props.header_navigation || props.header_title}>\r\n            {\r\n                props.menu_items && props.menu_items.map((menuItem, indx) => {\r\n                    if (menuItem.items) {\r\n                        return (<CustomHeaderMenuItem clickHandler={handleMenuItemClick} items={menuItem.items} name={menuItem.name}></CustomHeaderMenuItem>);\r\n                    } else {\r\n                        return (<HeaderMenuItem onClick={handleMenuItemClick(menuItem.link, props.dispatchEvent)} tabIndex={indx}>{menuItem.name}</HeaderMenuItem>);\r\n                    }\r\n                })\r\n            }\r\n        </HeaderNavigation>\r\n        {sideNavMainEl}\r\n        <HeaderGlobalBar>\r\n            <HeaderGlobalAction aria-label=\"Search\" isActive={activePanel == \"search\"}>\r\n                <slot name=\"search\"></slot>\r\n            </HeaderGlobalAction>\r\n            <HeaderGlobalAction aria-label=\"Notifications\" isActive={activePanel == \"navigation\"}>\r\n                <slot name=\"notifications\"></slot>\r\n            </HeaderGlobalAction>\r\n            <HeaderGlobalAction aria-label=\"App Switcher\" isActive={activePanel == \"appswitcher\"}>\r\n                <slot name=\"appswitcher\"></slot>\r\n            </HeaderGlobalAction>\r\n            <HeaderGlobalAction aria-label=\"Settings\" isActive={activePanel == \"settings\"}>\r\n                <slot name=\"settings\"></slot>\r\n            </HeaderGlobalAction>\r\n        </HeaderGlobalBar>\r\n        <HeaderPanel aria-label=\"Header Panel\" expanded={isPanelOpen}>\r\n            {headerPanel}\r\n        </HeaderPanel>\r\n    </Header>);\r\n}\r\n\r\nconst styles = `\r\n    .fixedMenu {\r\n        top: 3rem;\r\n        position: absolute;\r\n        background: var(--cds-layer);\r\n        width: 60px;\r\n        height: calc(100vh - 3rem);\r\n        cursor: pointer;\r\n    }\r\n\r\n    .fixedMenuItem {\r\n        background-color: var(--cds-layer);\r\n        margin-left: 5px;\r\n        margin-top: 5px;\r\n        margin-bottom: 5px;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .fixedMenuItemFreeText {\r\n        margin-left: 10px;\r\n        margin-top: 10px;\r\n        margin-bottom: 5px;\r\n        border-radius: 3px;\r\n        width: 40px;\r\n        height: 25px;\r\n        padding-left: 2px;\r\n        padding-right: 2px;\r\n        cursor: pointer;\r\n        font-size: medium;\r\n        text-align: center;\r\n        padding-top: 0px;\r\n        font-weight: 600;\r\n    }\r\n\r\n    .fixedMenuItemFreeText:hover {\r\n        border: 2px solid #efe7ed;\r\n    }\r\n\r\n    .iconView {\r\n        background-color: var(--cds-layer); !important;\r\n    }\r\n\r\n    .cds--side-nav__navigation {\r\n        margin-left: 60px !important;\r\n    }\r\n\r\n    .cds--side-nav__navigation {\r\n        border-right: 1px solid var(--cds-layer-accent);\r\n    }\r\n`\r\nconst props = [{\r\n    name: \"header_name\",\r\n    defaultValue: \"Srste\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"header_title\",\r\n    defaultValue: \"Srste\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"header_navigation\",\r\n    defaultValue: \"Srste\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"menu_items\",\r\n    defaultValue: [],\r\n    type: \"object\"\r\n}, {\r\n    name: \"sidenav_items\",\r\n    defaultValue: [],\r\n    type: \"object\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsPageHeader), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { EventAPI } from \"../../commons/EventAPI\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n/*\r\n    Example: <srs-icon name=\"Add\" description=\"Add an item\"/>\r\n*/\r\n\r\nconst dispatchedEvents = [EventAPI.ICON_CLICKED];\r\n\r\nconst SrsIcon = function (props, ref) {\r\n    const [iconInstance, setIconInstance] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(!props.type || props.type == \"carbon\") {\r\n            if(props.name) {\r\n                import('@carbon/icons-react').then((iconLibrary)=> {\r\n                    setIconInstance(iconLibrary[props.name]);\r\n                });\r\n            }\r\n        }else if(props.type == \"fontawesome\") {\r\n            import(\"@fortawesome/free-solid-svg-icons\").then((iconLibrary) => {\r\n                let iconNameParts = props.name.split(\"-\");\r\n                iconNameParts = iconNameParts.map((iconNamePart) => iconNamePart[0].toUpperCase() + iconNamePart.substring(1));\r\n                let moduleName = \"fa\" + iconNameParts.join(\"\");\r\n                setIconInstance(iconLibrary[moduleName]);\r\n                library.add(iconLibrary[moduleName]);\r\n            });            \r\n        }\r\n    }, [props.name, props.type]);\r\n    \r\n    let inlineStyles = {\r\n       color: props.color ||(props.theme == \"white\" || props.theme == \"g10\"? \"black\": \"white\"),\r\n       \"--cds-icon-primary\": props.color ||(props.theme == \"white\" || props.theme == \"g10\"? \"black\": \"white\")\r\n    };\r\n\r\n    const handleClick = (props) => {\r\n        return (evt) => {\r\n            props.dispatchEvent && props.dispatchEvent(EventAPI.ICON_CLICKED, {name: props.name, id: props.elementid})\r\n            if(props.onClick) {\r\n                props.onClick({name: props.name, id: props.elementid});\r\n            }\r\n        }\r\n    }\r\n\r\n    let iconEl = null;\r\n    if(!props.type || props.type == \"carbon\") {\r\n        let IconInstance = iconInstance;\r\n        iconEl = <IconInstance size={props.size || 24} onClick={handleClick(props)}/>;\r\n    }else if(props.type == \"fontawesome\") {\r\n        iconEl = <FontAwesomeIcon style={{cursor: \"pointer\", height: props.height || props.size, width: props.width || props.size, color: props.color}} \r\n                    onClick={handleClick(props)}\r\n                    title={props.description}\r\n                    icon={props.name}/>\r\n    }\r\n\r\n    return iconInstance? <div style={inlineStyles}>\r\n            { iconEl } \r\n        </div>: <div/>\r\n}\r\n\r\nconst styles = `\r\n\r\n`\r\nconst props = [{\r\n    name: \"name\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}, {\r\n    name: \"description\",\r\n    defaultValue: true,\r\n    type: \"boolean\"\r\n}, {\r\n    name: \"size\",\r\n    defaultValue: 24,\r\n    type: \"number\"\r\n}, {\r\n    name: \"color\",\r\n    defaultValue: \"\",\r\n    type: \"string\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsIcon), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };\r\nexport default SrsIcon;"],"names":["dispatchedEvents","SrsPageHeader","props","ref","_useState","useState","_useState2","_slicedToArray","isSideNavExpanded","setIsSideNavExpanded","_useState3","_useState4","isPanelOpen","setIsPanelOpen","_useState5","_useState6","activePanel","setActivePanel","_useState7","_useState8","sideNavParent","setSideNavParent","_useState9","_useState10","sideNavGrantParent","setSideNavGrantParent","_useState11","_useState12","sideNavMenuItems","setSideNavMenuItems","openPanel","activePanelName","eventBinding","handleUXSettings","handleNavigation","handleAppSwitcher","handleSearch","handleEvent","event","composed","Object","defineProperty","value","composedPath","writable","enumerable","configurable","interceptEventTarget","handleSideNavExpanded","dispatchEvent","EventAPI","expanded","useEffect","current","addEventListener","removeEventListener","name","handleMenuItemClick","path","evt","preventDefault","window","history","pushState","CustomHeaderMenuItem","itemProps","_useState13","_useState14","sideNavItems","findChildItems","items","parentItemName","forEach","item","children","sidenav_items","iconName","navigateback","label","iconType","color","size","concat","fixedModuleEl","_jsx","className","map","sidenavItem","indx","SrsIcon","type","description","onClick","menuItems","length","sideNavMainEl","SideNav","isPersistent","SideNavItems","menuItem","HeaderMenu","menuLinkName","submenuItem","HeaderMenuItem","link","headerPanel","_jsxs","style","display","flexDirection","padding","UnorderedList","ListItem","cursor","theme","Header","header_title","SkipToContent","TableOfContents","HeaderName","href","prefix","hader_name","HeaderNavigation","header_navigation","menu_items","clickHandler","tabIndex","HeaderGlobalBar","HeaderGlobalAction","isActive","HeaderPanel","styles","defaultValue","slots","WrappedComponent","wrapper","React","iconInstance","setIconInstance","then","iconLibrary","iconNameParts","split","moduleName","iconNamePart","toUpperCase","substring","join","library","inlineStyles","handleClick","id","elementid","iconEl","FontAwesomeIcon","height","width","title","icon","IconInstance"],"sourceRoot":""}