{"version":3,"file":"static/js/basic-form-DropDown.63016661.chunk.js","mappings":"kUAKMA,EAAmB,CAACC,EAAAA,EAAAA,kBAKpBC,EAAc,SAAUC,EAAOC,GACjC,IAAQC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MACTC,EAAgBF,EAAMG,KAAI,SAACC,EAAMC,GAAK,OACxCC,EAAAA,cAACC,EAAAA,IAAAA,KAAa,CAACC,IAAKH,EAAOI,SAAUL,EAAKM,KAAMC,MAAOP,EAAKO,OAAS,IAQzE,OACEL,EAAAA,cAACC,EAAAA,IAAQ,CACPK,GAAId,EAAMe,UACVb,MAAOE,EACPD,MAAOA,EACPa,SAVa,SAACH,GACdb,EAAMiB,cAAcnB,EAAAA,EAAAA,iBAA2B,CAAEoB,QAAS,CAACL,MAAAA,EAAOC,GAAId,EAAMe,aAC5Ef,EAAMmB,SAASN,EACnB,GAUJ,EAEMO,EAAM,WAGNpB,EAAQ,CAAC,CACXqB,KAAM,QACNC,aAAc,GACdC,KAAM,UACP,CACCF,KAAM,QACNC,aAAc,WACdC,KAAM,WAGJC,EAAQ,GAERC,GAAmBC,EAAAA,EAAAA,GAAQlB,EAAAA,WAAiBT,GAAcC,E","sources":["components/basic/form/DropDown.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport { Dropdown } from \"carbon-components-react\";\r\nimport { EventAPI } from \"../../../commons/EventAPI\";\r\n\r\nconst dispatchedEvents = [EventAPI.DROPDOWN_CHANGED];\r\n\r\n/*\r\n    Example: <srs-dropdown items=[{text: \"Item1\", value: \"item1\"}] label=\"My Dropdown\"/>\r\n*/\r\nconst SrsDropdown = function (props, ref) {\r\n    const { items, label } = props;\r\n    const dropdownItems = items.map((item, index) => (\r\n        <Dropdown.Item key={index} itemText={item.text} value={item.value} />\r\n    ));\r\n\r\n    const onChange = (value) => {\r\n        props.dispatchEvent(EventAPI.DROPDOWN_CHANGED, { payload: {value, id: props.elementid} });\r\n        props.setValue(value);\r\n    }\r\n\r\n    return (\r\n      <Dropdown\r\n        id={props.elementid}\r\n        items={dropdownItems}\r\n        label={label}\r\n        onChange={onChange}\r\n      />\r\n    );\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n    name: \"items\",\r\n    defaultValue: [],\r\n    type: \"object\"\r\n}, {\r\n    name: \"label\",\r\n    defaultValue: \"Dropdown\",\r\n    type: \"string\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsDropdown), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","EventAPI","SrsDropdown","props","ref","items","label","dropdownItems","map","item","index","React","Dropdown","key","itemText","text","value","id","elementid","onChange","dispatchEvent","payload","setValue","styles","name","defaultValue","type","slots","WrappedComponent","wrapper"],"sourceRoot":""}