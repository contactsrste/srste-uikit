{"version":3,"file":"static/js/basic-TabSet.ed8bf156.chunk.js","mappings":"8UAIMA,EAAmB,CAAC,iBAYpBC,EAAY,SAAUC,EAAOC,GAC/B,IAAAC,GAAkCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9B,OACII,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,IAAI,CAACC,KAAK,YAAYC,cAAeP,EAClCQ,SAAU,SAAAC,GACNR,GAAkB,OAALQ,QAAK,IAALA,OAAK,EAALA,EAAOF,gBAAiB,EACzC,EAAEJ,SAAA,EACFD,EAAAA,EAAAA,KAACQ,EAAAA,IAAO,CAAC,aAAW,WAAUP,SACzBT,EAAMiB,MAAMC,KAAI,SAACC,EAASJ,GAEvB,OADAK,QAAQC,IAAIF,IAERX,EAAAA,EAAAA,KAACc,EAAAA,IAAG,CAAAb,SAAcU,EAAQI,OAAhBR,EAElB,OAEJP,EAAAA,EAAAA,KAACgB,EAAAA,IAAS,CAAAf,SACLT,EAAMiB,MAAMC,KAAI,SAACC,EAASJ,GAAK,OAC5BP,EAAAA,EAAAA,KAACiB,EAAAA,IAAQ,CAAAhB,SACJH,IAAcS,GAAOP,EAAAA,EAAAA,KAAA,QAAMkB,KAAMP,EAAQQ,WAAa,MAD5CZ,EAEJ,UAMnC,EAEMa,EAAM,WAGN5B,EAAQ,CAAC,CACX0B,KAAM,QACNG,aAAc,GACdjB,KAAM,WAGJkB,EAAQ,CAAC,CAACJ,KAAK,YAAaK,OAAO,6NAUnCC,GAAmBC,EAAAA,EAAAA,GAAQC,EAAAA,WAAiBnC,GAAYC,E","sources":["components/basic/TabSet.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../commons/WebComponentWrapper\";\r\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from 'carbon-components-react';\r\n\r\nconst dispatchedEvents = [\"ABOUT#clicked\"];\r\n\r\n/*\r\n    Example: <srs-tab-set>\r\n                <srs-tab-item title=\"Item 1\">\r\n                    <p>Content of Item 1</p>\r\n                </srs-tab-item>\r\n                <srs-tab-item title=\"Item 2\">\r\n                    <p>Content of Item 2</p>\r\n                </srs-tab-item>\r\n            </srs-tab-set>\r\n*/\r\nconst SrsTabSet = function (props, ref) {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    return (\r\n        <div>\r\n            <Tabs type=\"container\" selectedIndex={activeTab} \r\n                onChange={index => {\r\n                    setActiveTab(index?.selectedIndex || 0)\r\n                }}>\r\n                <TabList aria-label=\"Tab List\">\r\n                    {props.items.map((tabItem, index) => {\r\n                        console.log(tabItem);\r\n                        return (\r\n                            <Tab key={index}>{tabItem.title}</Tab>\r\n                        )\r\n                    })}\r\n                </TabList>\r\n                <TabPanels>\r\n                    {props.items.map((tabItem, index) => (\r\n                        <TabPanel key={index}>\r\n                            {activeTab === index? <slot name={tabItem.slotname}/>: null}\r\n                        </TabPanel>\r\n                    ))}\r\n                </TabPanels>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n    name: \"items\",\r\n    defaultValue: [],\r\n    type: \"object\"\r\n}]\r\n\r\nconst slots = [{name:\"$DYNAMIC$\", script: `(function(props) {\r\n    let slots = [];\r\n    if(props.items) {\r\n        props.items.map((item) => {\r\n            slots.push({name: item.slotname, allowed: [\"srs-tab-item\"]});\r\n        })\r\n    }\r\n    return slots;\r\n})`}];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsTabSet), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","SrsTabSet","props","ref","_useState","useState","_useState2","_slicedToArray","activeTab","setActiveTab","_jsx","children","_jsxs","Tabs","type","selectedIndex","onChange","index","TabList","items","map","tabItem","console","log","Tab","title","TabPanels","TabPanel","name","slotname","styles","defaultValue","slots","script","WrappedComponent","wrapper","React"],"sourceRoot":""}