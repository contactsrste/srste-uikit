{"version":3,"file":"static/js/basic-templates-MultiSelectAdd.c01f4936.chunk.js","mappings":"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","sources":["components/basic/templates/MultiSelectAdd.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport wrapper from \"../../../commons/WebComponentWrapper\";\r\nimport { Breadcrumb, BreadcrumbItem, Checkbox, Button, UnorderedList } from \"carbon-components-react\";\r\nimport {ArrowRight} from \"@carbon/icons-react\";\r\n\r\nconst dispatchedEvents = [\"ABOUT#clicked\"];\r\n\r\n/*\r\n    Example: <srs-multiselectadd>\r\n            </srs-multiselectadd>\r\n*/\r\nconst SrsMultiSelectAdd = function (props, ref) {\r\n    const initialHierarchy = [\r\n        {\r\n            id: 1,\r\n            name: \"Category 1\",\r\n            children: [\r\n                {\r\n                    id: 11,\r\n                    name: \"Subcategory 1\",\r\n                    children: [\r\n                        {\r\n                            id: 111,\r\n                            name: \"Item 1\",\r\n                            children: [],\r\n                        },\r\n                        {\r\n                            id: 112,\r\n                            name: \"Item 2\",\r\n                            children: [],\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    id: 12,\r\n                    name: \"Subcategory 2\",\r\n                    children: [\r\n                        {\r\n                            id: 121,\r\n                            name: \"Item 3\",\r\n                            children: [],\r\n                        },\r\n                        {\r\n                            id: 122,\r\n                            name: \"Item 4\",\r\n                            children: [],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Category 2\",\r\n            children: [\r\n                {\r\n                    id: 21,\r\n                    name: \"Subcategory 3\",\r\n                    children: [\r\n                        {\r\n                            id: 211,\r\n                            name: \"Item 5\",\r\n                            children: [],\r\n                        },\r\n                        {\r\n                            id: 212,\r\n                            name: \"Item 6\",\r\n                            children: [],\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    id: 22,\r\n                    name: \"Subcategory 4\",\r\n                    children: [\r\n                        {\r\n                            id: 221,\r\n                            name: \"Item 7\",\r\n                            children: [],\r\n                        },\r\n                        {\r\n                            id: 222,\r\n                            name: \"Item 8\",\r\n                            children: [],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        }\r\n    ];\r\n\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [hierarchy, setHierarchy] = useState(initialHierarchy);\r\n    const [selectedPath, setSelectedPath] = useState([]);\r\n\r\n    const handleSelection = (event, { selectedItem }) => {\r\n        setSelectedItems([...selectedItems, selectedItem]);\r\n        setHierarchy(\r\n            hierarchy.map((category) => {\r\n                if (category.id === selectedItem.id) {\r\n                    return { ...category, children: [] };\r\n                }\r\n                if (category.children && category.children.length > 0) {\r\n                    const newChildren = category.children.filter(\r\n                        (child) => child.id !== selectedItem.id\r\n                    );\r\n                    return { ...category, children: newChildren };\r\n                }\r\n                return category;\r\n            })\r\n        );\r\n    };\r\n\r\n    const handleBreadcrumbClick = (index) => {\r\n        setSelectedPath(selectedPath.slice(0, index + 1));\r\n        setHierarchy(\r\n            initialHierarchy\r\n                .filter((category, i) => i <= index)\r\n                .map((category) => {\r\n                    if (selectedPath[index].id === category.id) {\r\n                        return { ...category, children: selectedPath[index].children };\r\n                    }\r\n                    return category;\r\n                })\r\n        );\r\n    };\r\n\r\n    const handleItemExpansion = (index) => {\r\n        const selectedCategory = selectedPath[index];\r\n        const selectedCategoryIndex = hierarchy.findIndex(\r\n            (category) => category.id === selectedCategory.id\r\n        );\r\n        setHierarchy(\r\n            hierarchy.map((category, i) => {\r\n                if (i === selectedCategoryIndex) {\r\n                    return {\r\n                        ...category,\r\n                        children: selectedCategory.children,\r\n                    };\r\n                }\r\n                return category;\r\n            })\r\n        );\r\n        setSelectedPath([...selectedPath.slice(0, index + 1), selectedCategory]);\r\n    };\r\n\r\n    const renderBreadcrumb = () => {\r\n        const breadcrumbItems = selectedPath.map((item, index) => (\r\n            <BreadcrumbItem\r\n                key={item.id}\r\n                href=\"#\"\r\n                onClick={() => handleBreadcrumbClick(index)}\r\n                isCurrentPage={index === selectedPath.length - 1}\r\n            >\r\n                {item.label}\r\n            </BreadcrumbItem>\r\n        ));\r\n\r\n        return (\r\n            <Breadcrumb aria-label=\"Breadcrumb\">\r\n                <BreadcrumbItem href=\"#\" onClick={() => handleBreadcrumbClick(-1)}>\r\n                    Home\r\n                </BreadcrumbItem>\r\n                {breadcrumbItems}\r\n            </Breadcrumb>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {renderBreadcrumb()}\r\n            <div>\r\n                {selectedPath.length === 0 &&\r\n                    hierarchy.map((item) => (\r\n                        <Checkbox\r\n                            id={item.id}\r\n                            labelText={item.name}\r\n                            key={item.id}\r\n                            checked={selectedItems.includes(item.id)}\r\n                            onChange={(event) => handleSelection(event, { selectedItem: item })}\r\n                        />\r\n                    ))}\r\n                {selectedPath.length > 0 &&\r\n                    selectedPath[selectedPath.length - 1].children.map((item) => {\r\n                        const hasChildren = !!item.children;\r\n                        return (\r\n                            <div key={item.id}>\r\n                                <Checkbox\r\n                                    id={item.id}\r\n                                    labelText={item.name}\r\n                                    checked={selectedItems.includes(item.id)}\r\n                                    onChange={(event) => handleSelection(event, { selectedItem: item })}\r\n                                />\r\n                                {hasChildren && (\r\n                                    <Button\r\n                                        size=\"small\"\r\n                                        kind=\"ghost\"\r\n                                        renderIcon={ArrowRight}\r\n                                        onClick={() => handleItemExpansion(selectedPath.length - 1)}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = `\r\n    \r\n`\r\nconst props = [{\r\n    name: \"errorcode\",\r\n    defaultValue: 403,\r\n    type: \"number\"\r\n}]\r\n\r\nconst slots = [];\r\n\r\nconst WrappedComponent = wrapper(React.forwardRef(SrsMultiSelectAdd), props);\r\nexport { WrappedComponent, styles, props, dispatchedEvents, slots };"],"names":["dispatchedEvents","SrsMultiSelectAdd","props","ref","initialHierarchy","id","name","children","_useState","useState","_useState2","_slicedToArray","selectedItems","setSelectedItems","_useState3","_useState4","hierarchy","setHierarchy","_useState5","_useState6","selectedPath","setSelectedPath","handleSelection","event","_ref","selectedItem","concat","_toConsumableArray","map","category","_objectSpread","length","newChildren","filter","child","handleBreadcrumbClick","index","slice","i","_jsxs","breadcrumbItems","item","_jsx","BreadcrumbItem","href","onClick","isCurrentPage","label","Breadcrumb","renderBreadcrumb","Checkbox","labelText","checked","includes","onChange","hasChildren","Button","size","kind","renderIcon","ArrowRight","selectedCategory","selectedCategoryIndex","findIndex","handleItemExpansion","styles","defaultValue","type","slots","WrappedComponent","wrapper","React"],"sourceRoot":""}